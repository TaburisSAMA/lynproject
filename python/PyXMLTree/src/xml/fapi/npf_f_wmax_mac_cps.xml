<?xml version="1.0"?>
<!DOCTYPE api SYSTEM "xmlfapi.dtd">
<api name="npf_f_wmax_mac_cps">
	<preamble>
	INTEL CONFIDENTIAL
	
	Copyright 2000 - 2006 Intel Corporation All Rights Reserved.
	
	The source code contained or described herein and all documents related to
	the source code ("Material") are owned by Intel Corporation or its 
	suppliers or licensors.
	
	Title to the Material remains with Intel Corporation or its suppliers and
	licensors. The Material contains trade secrets and proprietary and
	confidential information of Intel or its suppliers and licensors.
	The Material is protected by worldwide copyright and trade secret laws and
	treaty provisions. No part of the Material may be used, copied, reproduced,
	modified, published, uploaded, posted, transmitted, distributed,
	or disclosed in any way without Intel"s prior express written permission.
	
	No license under any patent, copyright, trade secret or other intellectual
	property right is granted to or conferred upon you by disclosure
	or delivery of the Materials, either expressly, by implication, inducement,
	estoppel or otherwise. Any license under such intellectual property rights
	must be express and approved by Intel in writing.
	</preamble>
	<!-- here starts the definition of API -->
	<imports>
		<import>npf</import>
		<import>npf_f_error</import>
		<import>npf_f_stats</import>
	</imports>
	<section name="Generic Data Structures">
		<section name="MAC CPS Object Ids">
			<typedef name="NPF_F_wmaxMacCpsInstanceId_t" type="NPF_uint16_t">
				<descr>
				MAC CPS Instance Identifier.
				</descr>
			</typedef>
			<typedef name="NPF_F_wmaxMacCpsSsId_t" type="NPF_uint16_t">
				<descr>
				SS Identifier.
				</descr>
			</typedef>
			<typedef name="NPF_F_wmaxMacCpsMcastGrpId_t" type="NPF_uint16_t">
				<descr>
				Multicast Group Identifier. (NOTE: BS ONLY).
				</descr>
			</typedef>
			<typedef name="NPF_F_wmaxMacCpsConnectionId_t" type="NPF_uint16_t">
				<descr>
				Connection Identifier.
				</descr>
			</typedef>
			<typedef name="NPF_F_wmaxMacCpsSaId_t" type="NPF_uint16_t">
				<descr>
				Security Association Identifier.
				</descr>
			</typedef>
			<typedef name="NPF_F_wmaxMacCpsPhyId_t" type="NPF_uint16_t">
				<descr>
				PHY Entity Identifier.
				</descr>
			</typedef>
			<typedef name="NPF_F_wmaxMacCpsZoneId_t" type="NPF_uint16_t">
				<descr>
				Zone Identifier.
				</descr>
			</typedef>
			<typedef name="NPF_F_wmaxMacCpsSubAllocId_t" type="NPF_uint16_t">
				<descr>
				Sub-allocation inside a Zone Identifier.
				</descr>
			</typedef>
			<typedef name="NPF_F_wmaxMacCpsCqichId_t" type="NPF_uint16_t">
				<descr>
				CHICH Channel Identifier.
				</descr>
			</typedef>
			<typedef name="NPF_F_wmaxMacCpsNullId_t" type="NPF_uint16_t">
				<descr>
          NULL Identifier.
        </descr>
			</typedef>
			<enum type="NPF_F_wmaxMacCpsObjType_t" name="e1">
				<descr>
				MAC CPS Object Type.
				Identifies kind of MAC object identifier.
				</descr>
				<field name="NPF_F_WMAX_MAC_CPS_OBJ_ID_SS" value="0" brief="Identifies SS ID.">
				</field>
				<field name="NPF_F_WMAX_MAC_CPS_OBJ_ID_MCAST_GRP" brief="Identifies Mcast Group ID. (NOTE: BS ONLY).">
				</field>
				<field name="NPF_F_WMAX_MAC_CPS_OBJ_ID_CONN" brief="Identifies Connection ID.">
				</field>
				<field name="NPF_F_WMAX_MAC_CPS_OBJ_ID_SA" brief="Identifies Security Association ID.">
				</field>
				<field name="NPF_F_WMAX_MAC_CPS_OBJ_ID_MAC_INSTANCE" brief="Identifies MAC Instance ID.">
				</field>
				<field name="NPF_F_WMAX_MAC_CPS_OBJ_ID_PHY" brief="Identifies PHY Entity ID.">
				</field>
				<field name="NPF_F_WMAX_MAC_CPS_OBJ_ID_ZONE" brief="Identifies Zone ID.">
				</field>
				<field name="NPF_F_WMAX_MAC_CPS_OBJ_ID_SPEC_AREA" brief="Identifies Sub-allocation ID.">
				</field>
				<field name="NPF_F_WMAX_MAC_CPS_OBJ_ID_CQICH" brief="Identifies CQICH channel.">
				</field>
				<field name="NPF_F_WMAX_MAC_CPS_OBJ_ID_NULL" brief="Null ID.">
				</field>
			</enum>
			<struct type="NPF_F_wmaxMacCpsObjId_t" brief="MAC CPS Object Identifier">
				<selectunion type="NPF_F_wmaxMacCpsObjId2_t" name="u">
					<selectfield type="NPF_F_wmaxMacCpsObjType_t" name="idType" brief="MAC CPS object identifier type.">
					</selectfield>
					<field type="NPF_F_wmaxMacCpsSsId_t" name="ssId">
						<descr>SS ID.</descr>
						<selector>NPF_F_WMAX_MAC_CPS_OBJ_ID_SS</selector>
					</field>
					<field type="NPF_F_wmaxMacCpsMcastGrpId_t" name="mcastGrpId">
						<descr>Multicast Group ID. (NOTE: BS ONLY).</descr>
						<selector>NPF_F_WMAX_MAC_CPS_OBJ_ID_MCAST_GRP</selector>
					</field>
					<field type="NPF_F_wmaxMacCpsConnectionId_t" name="connId">
						<descr>Connection ID.</descr>
						<selector>NPF_F_WMAX_MAC_CPS_OBJ_ID_CONN</selector>
					</field>
					<field type="NPF_F_wmaxMacCpsSaId_t" name="saId">
						<descr>Security Association ID.</descr>
						<selector>NPF_F_WMAX_MAC_CPS_OBJ_ID_SA</selector>
					</field>
					<field type="NPF_F_wmaxMacCpsInstanceId_t" name="instanceId">
						<descr>MAC CPS Instance ID.</descr>
						<selector>NPF_F_WMAX_MAC_CPS_OBJ_ID_MAC_INSTANCE</selector>
					</field>
					<field type="NPF_F_wmaxMacCpsPhyId_t" name="phyId">
						<descr>PHY Entity ID.</descr>
						<selector>NPF_F_WMAX_MAC_CPS_OBJ_ID_PHY</selector>
					</field>
					<field type="NPF_F_wmaxMacCpsZoneId_t" name="zoneId">
						<descr>Zone ID.</descr>
						<selector>NPF_F_WMAX_MAC_CPS_OBJ_ID_ZONE</selector>
					</field>
					<field type="NPF_F_wmaxMacCpsSubAllocId_t" name="SubAllocId">
						<descr>Sub-allocation in a Zone ID.</descr>
						<selector>NPF_F_WMAX_MAC_CPS_OBJ_ID_SPEC_AREA</selector>
					</field>
					<field type="NPF_F_wmaxMacCpsCqichId_t" name="cqichId">
						<descr>CQICH ID.</descr>
						<selector>NPF_F_WMAX_MAC_CPS_OBJ_ID_CQICH</selector>
					</field>
					<field type="NPF_F_wmaxMacCpsNullId_t" name="nullId">
						<descr>NULL ID.</descr>
						<selector>NPF_F_WMAX_MAC_CPS_OBJ_ID_NULL</selector>
					</field>
				</selectunion>
			</struct>
		</section>
		<enum type="NPF_F_wmaxMacCpsPhyType_t" name="e2">
			<descr>
			PHY Type.
			Identifies kind of PHY.
			</descr>
			<field name="NPF_F_WMAX_MAC_CPS_PHY_TYPE_OFDM" value="0" brief="Identifies OFDM PHY.">
			</field>
			<field name="NPF_F_WMAX_MAC_CPS_PHY_TYPE_OFDMA" brief="Identifies OFDMA PHY.">
			</field>
		</enum>
		<section name="Burst Profile Definition">
			<enum type="NPF_F_wmaxMacCpsModulationType_t" brief="Modulation Type">
				<descr>
				This enum defines possible types of modulations. 
				</descr>
				<field name="NPF_F_WMAX_MAC_CPS_MODULATION_TYPE_BPSK" value="0" brief="BPSK">
				</field>
				<field name="NPF_F_WMAX_MAC_CPS_MODULATION_TYPE_QPSK" brief="QPSK">
				</field>
				<field name="NPF_F_WMAX_MAC_CPS_MODULATION_TYPE_16QAM" brief="16-QAM">
				</field>
				<field name="NPF_F_WMAX_MAC_CPS_MODULATION_TYPE_64QAM" brief="64-QAM">
				</field>
			</enum>
			<enum type="NPF_F_wmaxMacCpsCpType_t" brief="CP Type">
				<descr>
				This enum defines possible lengths of the guard time part of the OFDM/OFDMA symbol (CP prefix).
				</descr>
				<field name="NPF_F_WMAX_MAC_CPS_CP_TYPE_4" value="0" brief="CP = 1/4 of the symbol">
				</field>
				<field name="NPF_F_WMAX_MAC_CPS_CP_TYPE_8" brief="CP = 1/8 of the symbol">
				</field>
				<field name="NPF_F_WMAX_MAC_CPS_CP_TYPE_16" brief="CP = 1/16 of the symbol">
				</field>
				<field name="NPF_F_WMAX_MAC_CPS_CP_TYPE_32" brief="CP = 1/32 of the symbol">
				</field>
			</enum>
			<enum type="NPF_F_wmaxMacCpsFecType_t" brief="FEC Type">
				<descr>
				This enum defines possible types of Forward Error Correction.
				</descr>
				<field name="NPF_F_WMAX_MAC_CPS_FEC_TYPE_CC" value="0" brief="CC">
				</field>
				<field name="NPF_F_WMAX_MAC_CPS_FEC_TYPE_RS_CC" brief="RS+CC">
				</field>
				<field name="NPF_F_WMAX_MAC_CPS_FEC_TYPE_BTC" brief="BTC">
				</field>
				<field name="NPF_F_WMAX_MAC_CPS_FEC_TYPE_CTC" brief="CTC">
				</field>
				<field name="NPF_F_WMAX_MAC_CPS_FEC_TYPE_ZTCC" brief="ZTCC">
				</field>
				<field name="NPF_F_WMAX_MAC_CPS_FEC_TYPE_LDPC" brief="LDPC">
				</field>
				<field name="NPF_F_WMAX_MAC_CPS_FEC_TYPE_LDPC_A" brief="LDPC A">
				</field>
				<field name="NPF_F_WMAX_MAC_CPS_FEC_TYPE_LDPC_B" brief="LDPC B">
				</field>
			</enum>
			<enum type="NPF_F_wmaxMacCpsRateType_t" brief="Rate Type">
				<descr>
				This enum defines possible proportions between user data part and the FEC part of a OFDM/OFDMA symbol.
				</descr>
				<field name="NPF_F_WMAX_MAC_CPS_RATE_TYPE_1_2" value="0" brief="1/2">
				</field>
				<field name="NPF_F_WMAX_MAC_CPS_RATE_TYPE_2_3" brief="2/3">
				</field>
				<field name="NPF_F_WMAX_MAC_CPS_RATE_TYPE_3_4" brief="3/4">
				</field>
				<field name="NPF_F_WMAX_MAC_CPS_RATE_TYPE_3_5" brief="3/5">
				</field>
				<field name="NPF_F_WMAX_MAC_CPS_RATE_TYPE_4_5" brief="4/5">
				</field>
				<field name="NPF_F_WMAX_MAC_CPS_RATE_TYPE_5_6" brief="5/6">
				</field>
				<field name="NPF_F_WMAX_MAC_CPS_RATE_TYPE_5_8" brief="5/8">
				</field>
			</enum>
			<enum type="NPF_F_wmaxMacCpsDirection_t" brief="Direction">
				<descr>
				This enum defines possible directions of a connection.
				</descr>
				<field name="NPF_F_WMAX_MAC_CPS_DIR_DL" value="0" brief="Downlink">
				</field>
				<field name="NPF_F_WMAX_MAC_CPS_DIR_UL" brief="Uplink">
				</field>
			</enum>
			<enum type="NPF_F_wmaxMacCpsState_t" brief="Generic state">
				<descr>
				This enum defines possible administrative state of a feature.
				</descr>
				<field name="NPF_F_WMAX_MAC_CPS_OFF" value="0" brief="The feature will be turned off">
				</field>
				<field name="NPF_F_WMAX_MAC_CPS_ON" brief="The feature will be turned on">
				</field>
			</enum>
			<struct type="NPF_F_wmaxMacCpsBurstProfileSetEntry_t" name="" brief="Burst Profile Set Entry">
				<descr>
				This data structure defines one element of a Burst Profile Set.
				</descr>
				<field name="valid" type="NPF_F_wmaxMacCpsState_t" brief="State of this Burst Profile Set Entry: valid (ON) or invalid (OFF)">
				</field>
				<field name="bpModulation" type="NPF_F_wmaxMacCpsModulationType_t" brief="Modulation type">
				</field>
				<field name="bpFec" type="NPF_F_wmaxMacCpsFecType_t" brief="FEC Type">
				</field>
				<field name="bpRate" type="NPF_F_wmaxMacCpsRateType_t" brief="Rate Type">
				</field>
			</struct>
		</section>
	</section>
	<section name="Initialization">
		<enum type="NPF_F_wmaxMacCpsSwVer_t" brief="MAC CPS software version">
			<field name="NPF_F_WMAX_MAC_CPS_SW_VER_1" value="1" brief="Version 1.0">
			</field>
		</enum>
		<func name="NPF_F_wmaxMacCpsCapabilitiesGet" type="NPF_error_t" brief="MAC Capabilities Get" xdrid="RPC_WMAX_MAC_CAPAB_GET">
			<descr>
			This function allows the Control Plane to get information what are the capabilities of the Data Plane MAC implementation.
			</descr>
			<param io="in" type="NPF_callbackHandle_t" name="callbackHandle" xdr="no">
				<descr>
				Identifies the callback function which should be called.
				</descr>
			</param>
			<param io="in" type="NPF_correlator_t" name="correlator" xdr="no">
				<descr>
				A unique application invocation context that will be
				supplied to the asynchronous completion callback routine.
				</descr>
			</param>
			<param io="in" type="NPF_errorReporting_t" name="errorReporting" xdr="no">
				<descr>
				Defines whether a callback will be called after
				completing the action requested by the function call.
				</descr>
			</param>
			<param io="in" type="NPF_FEHandle_t" name="feHandle" xdr="no">
				<descr>
				Identifies the forwarding element where the action will be executed.
				</descr>
			</param>
			<return>
				<descr>
				Error code indicating if function call was successful.
				</descr>
				<retval name="NPF_NO_ERROR">
					<descr>
					The operation is in progress.
					</descr>
				</retval>
				<retval name="NPF_E_BAD_CALLBACK_HANDLE">
					<descr>
					The callback handle is invalid.
				</descr>
				</retval>
				<retval name="NPF_E_UNKNOWN">
					<descr>
					The operation cannot be completed successfully because
					of problems encountered when handling the input parameters.
					</descr>
				</retval>
			</return>
			<callback>
				<descr>
				If errorReporting is set to ALWAYS, a callback is invoked to
				indicate that the operation has been completed. The callback
				is identified by NPF_F_WMAX_MAC_CPS_CALLBACK_CAPBILITIES_GET.
				</descr>
				<retval name="NPF_NO_ERROR" brief="Operation completed successfully.">
				</retval>
				<retval name="NPF_F_WMAX_AC_ERROR_INVALID_PARAMS" brief="Invalid parameter.">
				</retval>
			</callback>
		</func>
	</section>
	<section name="Management">
		<section name="MAC CPS Instance Management">
			<section name="Definitions">
				<enum type="NPF_F_wmaxMacCpsInstanceState_t" brief="MAC CPS Instance state">
					<descr>
				  This enum defines possible administrative states of a MAC CPS Instance.
				  </descr>
					<field name="NPF_F_WMAX_MAC_CPS_INSTANCE_START" value="0" brief="MAC CPS Instance will be started">
					</field>
					<field name="NPF_F_WMAX_MAC_CPS_INSTANCE_STOP" brief="">
						<descr>
					  MAC CPS Instance will be stopped and all dynamic object associated with this MAC CPS Instance, except for automatically
					  created during MAC CPS Instance creation SS and connections, will be deleted.
					  </descr>
					</field>
				</enum>
			</section>
			<section name="Creation of MAC CPS Instance">
				<enum type="NPF_F_wmaxMacCpsUlMapRelevance_t" brief="UL-MAP relevance: this frame of the next frame">
					<descr>
					This enum defines possible UL-MAP relevance. (NOTE: BS ONLY).
					</descr>
					<field name="NPF_F_WMAX_MAC_CPS_UL_MAP_THIS_FRAME" value="0" brief="UL-MAP defines UL part of this frame.">
					</field>
					<field name="NPF_F_WMAX_MAC_CPS_UL_MAP_NEXT_FRAME" brief="UL-MAP defines UL part of the next frame.">
					</field>
				</enum>
				<enum type="NPF_F_wmaxMacCpsMapsType_t" name="e2">
					<descr>
            Type of maps to be used.
          </descr>
					<field name="NPF_F_WMAX_MAC_CPS_MAP_TYPE_NORMAL" value="0" brief="Normal DL and UL maps.">
					</field>
					<field name="NPF_F_WMAX_MAC_CPS_MAP_TYPE_COMPRESSED_NO_SUBMAPS" brief="Compressed DL and UL maps without usage of sub-maps">
					</field>
					<field name="NPF_F_WMAX_MAC_CPS_MAP_TYPE_COMPRESSED_WITH_SUBMAPS" brief="Compressed DL and UL maps with usage of sub-maps. The sub-maps are located in the same permutation zone as the DL/UL maps.">
					</field>
					<field name="NPF_F_WMAX_MAC_CPS_MAP_TYPE_COMPRESSED_WITH_SUBMAPS_IN_OTHER_ZONES" brief="Compressed DL and UL maps with usage of sub-maps. The sub-maps can be located in the other permutation zones than the DL/UL maps.">
					</field>
				</enum>
				<enum type="NPF_F_wmaxMacCpsDuplexingType_t" brief="Duplexing Type">
					<descr>
					This enum defines possible types of duplexing.
					</descr>
					<field name="NPF_F_WMAX_MAC_CPS_DUPLEXING_TYPE_TDD" value="0" brief="TDD">
					</field>
					<field name="NPF_F_WMAX_MAC_CPS_DUPLEXING_TYPE_FDD" brief="FDD">
					</field>
				</enum>
				<enum type="NPF_F_wmaxMacCpsFrameLen_t" brief="Frame Length">
					<descr>
					This enum defines possible frame length values.
					</descr>
					<field name="NPF_F_WMAX_MAC_CPS_FRAME_TYPE_2" value="0" brief="2.0ms">
					</field>
					<field name="NPF_F_WMAX_MAC_CPS_FRAME_TYPE_2_5" brief="2.5ms">
					</field>
					<field name="NPF_F_WMAX_MAC_CPS_FRAME_TYPE_4" brief="4.0ms">
					</field>
					<field name="NPF_F_WMAX_MAC_CPS_FRAME_TYPE_5" brief="5.0ms">
					</field>
					<field name="NPF_F_WMAX_MAC_CPS_FRAME_TYPE_8" brief="8.0ms">
					</field>
					<field name="NPF_F_WMAX_MAC_CPS_FRAME_TYPE_10" brief="10.0ms">
					</field>
					<field name="NPF_F_WMAX_MAC_CPS_FRAME_TYPE_12_5" brief="12.5ms">
					</field>
					<field name="NPF_F_WMAX_MAC_CPS_FRAME_TYPE_20" brief="20.0ms">
					</field>
				</enum>
				<enum type="NPF_F_wmaxMacCpsFftType_t" brief="Types of FFT">
					<field name="NPF_F_WMAX_MAC_CPS_FFT_TYPE_128" value="0" brief="FFT 128 (OFDMA)">
					</field>
					<field name="NPF_F_WMAX_MAC_CPS_FFT_TYPE_256" brief="FFT 256 (OFDM)">
					</field>
					<field name="NPF_F_WMAX_MAC_CPS_FFT_TYPE_512" brief="FFT 512 (OFDMA)">
					</field>
					<field name="NPF_F_WMAX_MAC_CPS_FFT_TYPE_1024" brief="FFT 1024 (OFDMA)">
					</field>
					<field name="NPF_F_WMAX_MAC_CPS_FFT_TYPE_2048" brief="FFT 2048 (OFDMA)">
					</field>
				</enum>
				<enum brief="Types of OFDMA zone" type="NPF_F_wmaxMacCpsOfdmaZoneType_t">
					<field name="NPF_F_WMAX_MAC_CPS_ZONE_TYPE_NORMAL" brief="Normal zone.">
					</field>
					<field name="NPF_F_WMAX_MAC_CPS_ZONE_TYPE_AAS" brief="AAS zone.">
					</field>
					<field name="NPF_F_WMAX_MAC_CPS_ZONE_TYPE_AAS_CALIBR" brief="AAS Callibration zone.">
					</field>
					<field name="NPF_F_WMAX_MAC_CPS_ZONE_TYPE_COMM_SYNC_SYMB" brief="Common Sync Symbol zone.">
					</field>
					<field name="NPF_F_WMAX_MAC_CPS_ZONE_TYPE_STC_2" brief="STC zone with 2 antennas.">
					</field>
					<field name="NPF_F_WMAX_MAC_CPS_ZONE_TYPE_STC_3" brief="STC zone with 3 antennas.">
					</field>
					<field name="NPF_F_WMAX_MAC_CPS_ZONE_TYPE_STC_4" brief="STC zone with 4 antennas.">
					</field>
				</enum>
				<enum type="NPF_F_wmaxMacCpsOfdmPhyProfile_t" brief="PHY profile type">
					<descr>
					This enum defines possible PHY profiles.
					</descr>
					<field name="NPF_F_WMAX_MAC_CPS_PHY_OFDM_PROF3_1_75" value="0" brief="profP3_1.75">
					</field>
					<field name="NPF_F_WMAX_MAC_CPS_PHY_OFDM_PROF3_3_5" brief="profP3_3.5: WirelessMAN-OFDM 3.5 MHz channel basic PHY Profile">
					</field>
					<field name="NPF_F_WMAX_MAC_CPS_PHY_OFDM_PROF3_7" brief="profP3_7: WirelessMAN-OFDM 7 MHz channel basic PHY Profile">
					</field>
					<field name="NPF_F_WMAX_MAC_CPS_PHY_OFDM_PROF3_3" brief="profP3_3: WirelessMAN-OFDM 3 MHz channel basic PHY Profile">
					</field>
					<field name="NPF_F_WMAX_MAC_CPS_PHY_OFDM_PROF3_5_5" brief="profP3_5.5: WirelessMAN-OFDM 5.5 MHz channel basic PHY Profile">
					</field>
					<field name="NPF_F_WMAX_MAC_CPS_PHY_OFDM_PROF3_10" brief="profP3_10: WirelessMAN-OFDM 10 MHz channel basic PHY Profile">
					</field>
				</enum>
				<enum type="NPF_F_wmaxMacCpsOfdmaPhyProfile_t" brief="PHY profile type">
					<descr>
					This enum defines possible PHY profiles.
					</descr>
					<field name="NPF_F_WMAX_MAC_CPS_PHY_OFDMA_PROF_1_25" value="0" brief="WirelessMAN-OFDMA 1.25 MHz channel basic PHY Profile">
					</field>
					<field name="NPF_F_WMAX_MAC_CPS_PHY_OFDMA_PROF_1_75" brief="WirelessMAN-OFDMA 1.75 MHz channel basic PHY Profile">
					</field>
					<field name="NPF_F_WMAX_MAC_CPS_PHY_OFDMA_PROF_2_5" brief="WirelessMAN-OFDMA 2.5 MHz channel basic PHY Profile">
					</field>
					<field name="NPF_F_WMAX_MAC_CPS_PHY_OFDMA_PROF_3_5" brief="WirelessMAN-OFDMA 3.5 MHz channel basic PHY Profile">
					</field>
					<field name="NPF_F_WMAX_MAC_CPS_PHY_OFDMA_PROF_4_375" brief="WirelessMAN-OFDMA 4.375 MHz channel basic PHY Profile">
					</field>
					<field name="NPF_F_WMAX_MAC_CPS_PHY_OFDMA_PROF_5" brief="WirelessMAN-OFDMA 5 MHz channel basic PHY Profile">
					</field>
					<field name="NPF_F_WMAX_MAC_CPS_PHY_OFDMA_PROF_7" brief="WirelessMAN-OFDMA 7 MHz channel basic PHY Profile">
					</field>
					<field name="NPF_F_WMAX_MAC_CPS_PHY_OFDMA_PROF_8_75" brief="WirelessMAN-OFDMA 8.75 MHz channel basic PHY Profile">
					</field>
					<field name="NPF_F_WMAX_MAC_CPS_PHY_OFDMA_PROF_10" brief="WirelessHUMAN(-OFDMA) 10 MHz channel basic PHY Profile">
					</field>
					<field name="NPF_F_WMAX_MAC_CPS_PHY_OFDMA_PROF_14" brief="WirelessMAN-OFDMA 14 MHz channel basic PHY Profile">
					</field>
					<field name="NPF_F_WMAX_MAC_CPS_PHY_OFDMA_PROF_17_5" brief="WirelessMAN-OFDMA 17.5 MHz channel basic PHY Profile">
					</field>
					<field name="NPF_F_WMAX_MAC_CPS_PHY_OFDMA_PROF_20" brief="WirelessHUMAN(-OFDMA) 20 MHz channel basic PHY Profile">
					</field>
				</enum>
				<struct type="NPF_F_wmaxMacCpsOfdmParams_t" name="" brief="OFDM PHY Specific Parameters definition">
					<descr>
					This data structure defines the OFDM PHY Specific Parameters.
					</descr>
					<field name="channelsNum" type="NPF_uint16_t" brief="1 for OFDM">
					</field>
					<field name="phyProfile" type="NPF_F_wmaxMacCpsOfdmPhyProfile_t" brief="PHY Profile: profP3_xx">
					</field>
					<field name="ttg" type="NPF_uint16_t" brief="Time to switch from TX to RX. Specified in Physical Slots. (NOTE: BS ONLY).">
					</field>
					<field name="rtg" type="NPF_uint16_t" brief="Time to switch from RX to TX. Specified in Physical Slots. (NOTE: BS ONLY).">
					</field>
					<field name="initRangingPeriod" type="NPF_uint16_t" brief="Number of frames between those two containing Initial Ranging Slot. (NOTE: BS ONLY).">
					</field>
					<field name="initRangingSize" type="NPF_uint16_t" brief="Number of symbols the Initial Ranging Slot will last. (NOTE: BS ONLY).">
					</field>
					<field name="bwrContentionFullPeriod" type="NPF_uint16_t" brief="Number of frames between those two containing Full Bandwidth Request Contention Slot. (NOTE: BS ONLY).">
					</field>
					<field name="bwrContentionFullSize" type="NPF_uint16_t" brief="Number of symbols the Full Bandwidth Request Contention Slot will last. (NOTE: BS ONLY).">
					</field>
					<field name="bwrContentionFocusedPeriod" type="NPF_uint16_t" brief="Number of frames between those two containing Focused Bandwidth Request Contention Slot. (NOTE: BS ONLY).">
					</field>
					<field name="bwrContentionFocusedSize" type="NPF_uint16_t" brief="Number of symbols the Focused Bandwidth Request Contention Slot will last. (NOTE: BS ONLY).">
					</field>
					<field name="startStcZone" type="NPF_uint16_t" brief="Begin of the STC Zone in symbols. (NOTE: BS ONLY).">
					</field>
					<field name="maxUnusedOpportunities" type="NPF_uint16_t" brief="This value defines how many unused transmit opportunities assigned to a SS by the BS can be received before a SS Inactivity Event will be triggered. (NOTE: BS ONLY).">
					</field>
					<field name="cidIncState" type="NPF_F_wmaxMacCpsState_t" brief="Defines if CIDs are included in maps.">
					</field>
				</struct>
				<enum brief="Types of Permutation used in OFDMA zones" type="NPF_F_wmaxMacCpsOfdmaZonePermType_t">
					<field name="NPF_F_WMAX_MAC_CPS_OFDMA_ZONE_TYPE_PUSC" value="0" brief="PUSC">
					</field>
					<field name="NPF_F_WMAX_MAC_CPS_OFDMA_ZONE_TYPE_OPTIONAL_PUSC" brief="Optional PUSC">
					</field>
					<field name="NPF_F_WMAX_MAC_CPS_OFDMA_ZONE_TYPE_FUSC" brief="FUSC">
					</field>
					<field name="NPF_F_WMAX_MAC_CPS_OFDMA_ZONE_TYPE_OPTIONAL_FUSC" brief="Optional FUSC">
					</field>
					<field name="NPF_F_WMAX_MAC_CPS_OFDMA_ZONE_TYPE_TUSC1" brief="TUSC1">
					</field>
					<field name="NPF_F_WMAX_MAC_CPS_OFDMA_ZONE_TYPE_TUSC2" brief="TUSC2">
					</field>
					<field name="NPF_F_WMAX_MAC_CPS_OFDMA_ZONE_TYPE_AMC16" brief="AMC 1x6">
					</field>
					<field name="NPF_F_WMAX_MAC_CPS_OFDMA_ZONE_TYPE_AMC23" brief="AMC 2x3">
					</field>
					<field name="NPF_F_WMAX_MAC_CPS_OFDMA_ZONE_TYPE_AMC32" brief="AMC 3x2">
					</field>
				</enum>
				<enum type="NPF_F_wmaxMacCpsOfdmaSubAllocType_t" brief="Types of sub-allocations in OFDMA Permutation zones">
					<field name="NPF_F_WMAX_MAC_CPS_OFDMA_ZONE_SUBALLOC_TYPE_CDMA_BW_P_RANG_1" value="0" brief="CDMA Bandwidth/Periodic Ranging zone - the CDMA signals to be used are 1 symbol long">
					</field>
					<field name="NPF_F_WMAX_MAC_CPS_OFDMA_ZONE_SUBALLOC_TYPE_CDMA_BW_P_RANG_3" brief="CDMA Bandwidth/Periodic Ranging zone - the CDMA signals to be used are 3 symbol long">
					</field>
					<field name="NPF_F_WMAX_MAC_CPS_OFDMA_ZONE_SUBALLOC_TYPE_CDMA_I_RANG_HO_2" brief="CDMA Initial ranging/Hand-over zone - the CDMA signals to be used are 2 symbol long">
					</field>
					<field name="NPF_F_WMAX_MAC_CPS_OFDMA_ZONE_SUBALLOC_TYPE_CDMA_I_RANG_HO_4" brief="CDMA Initial ranging/Hand-over zone - the CDMA signals to be used are 4 symbol long">
					</field>
					<field name="NPF_F_WMAX_MAC_CPS_OFDMA_ZONE_SUBALLOC_TYPE_AAS_DIVERSITY_MAP" brief="AAS Diversity MAP Zone">
					</field>
					<field name="NPF_F_WMAX_MAC_CPS_OFDMA_ZONE_SUBALLOC_TYPE_FAST_FEEDBACK" brief="Fast Feedback Channels area">
					</field>
					<field name="NPF_F_WMAX_MAC_CPS_OFDMA_ZONE_SUBALLOC_TYPE_HARQ_ACK_CHANNEL" brief="HARQ ACK Channel area">
					</field>
					<field name="NPF_F_WMAX_MAC_CPS_OFDMA_ZONE_SUBALLOC_TYPE_SOUNDING" brief="The sounding area">
					</field>
				</enum>
				<!-- START OF SOUNDING SPECIFIC DATA STRUCTURES/DEFINITIONS -->
				<!-- GENERIC SOUNDING DEFINITIONS -->
				<enum type="NPF_F_wmaxMacCpsOfdmaSoundingRelevanceType_t" brief="Types of Sounding IE relevance">
					<field name="NPF_F_WMAX_MAC_CPS_OFDMA_SOUNDING_RELEVANCE_THIS_FRAME" value="0" brief="The Sounding IE describes the sounding zone in the current frame">
					</field>
					<field name="NPF_F_WMAX_MAC_CPS_OFDMA_SOUNDING_RELEVANCE_NEXT_FRAME" brief="The Sounding IE describes the sounding zone in the frame following the current one">
					</field>
				</enum>
				<enum type="NPF_F_wmaxMacCpsOfdmaSoundingAddFBType_t" brief="Types of Sounding Additonal Feedback">
					<field name="NPF_F_WMAX_MAC_CPS_OFDMA_SOUNDING_ADD_FB_NONE" value="0" brief="No additional feedback">
					</field>
					<field name="NPF_F_WMAX_MAC_CPS_OFDMA_SOUNDING_ADD_FB_CHANNEL_COEF" brief="Include channel coefficients">
					</field>
					<field name="NPF_F_WMAX_MAC_CPS_OFDMA_SOUNDING_ADD_FB_PILOT_COEF" brief="Include received pilot coefficients">
					</field>
					<field name="NPF_F_WMAX_MAC_CPS_OFDMA_SOUNDING_ADD_FB_MSG" brief="Include feedback message">
					</field>
				</enum>
				<enum type="NPF_F_wmaxMacCpsOfdmaSoundingType_t" brief="Types of Sounding">
					<field name="NPF_F_WMAX_MAC_CPS_OFDMA_SOUNDING_TYPE_A" value="0" brief="The Sounding type A">
					</field>
					<field name="NPF_F_WMAX_MAC_CPS_OFDMA_SOUNDING_TYPE_B" brief="The Sounding type B">
					</field>
					<field name="NPF_F_WMAX_MAC_CPS_OFDMA_SOUNDING_NONE" brief="The Sounding is not supported">
					</field>
				</enum>
				<enum type="NPF_F_wmaxMacCpsOfdmaSoundingSsSelectionType_t" brief="Types of SS Selection methods">
					<field name="NPF_F_WMAX_MAC_CPS_OFDMA_SOUNDING_SS_SELECTION_NONE" value="0" brief="There will be no SS defined for sounding in this symbol">
					</field>
					<field name="NPF_F_WMAX_MAC_CPS_OFDMA_SOUNDING_SS_SELECTION_ALL_IN_THIS_UL_SUBFRAME" brief="This symbol will contain sounding from all SSs which have got bandwidth in current UL subframe.">
					</field>
					<field name="NPF_F_WMAX_MAC_CPS_OFDMA_SOUNDING_SS_SELECTION_OWNER_OF_FIRST_BURST_IN_SUBCHANNEL" brief="This symbol will contain sounding from the SSs which are owners of the first bursts in sub-channels in current UL subframe.">
					</field>
					<field name="NPF_F_WMAX_MAC_CPS_OFDMA_SOUNDING_SS_SELECTION_OWNER_OF_SECOND_BURST_IN_SUBCHANNEL" brief="This symbol will contain sounding from the SSs which are owners of the second bursts in sub-channels in current UL subframe.">
					</field>
					<field name="NPF_F_WMAX_MAC_CPS_OFDMA_SOUNDING_SS_SELECTION_OWNER_OF_FIRST_OR_SECOND_BURST_IN_SUBCHANNEL" brief="This symbol will contain sounding from the SSs which are owners of the first or the second bursts in sub-channels in current UL subframe.">
					</field>
				</enum>
				<enum type="NPF_F_wmaxMacCpsOfdmaSoundingFreqAssignmentType_t" brief="Types of sounding frequency assignment methods">
					<field name="NPF_F_WMAX_MAC_CPS_OFDMA_SOUNDING_FREQ_ASSIGN_ALL" value="0" brief="All frequencies will be used by the SSs selected for this symbol">
					</field>
					<field name="NPF_F_WMAX_MAC_CPS_OFDMA_SOUNDING_FREQ_ASSIGN_THE_SAME_AS_DATA" brief="Limited to the frequences assigned to the SS in the adjacent zone for data transmission">
					</field>
				</enum>
				<enum type="NPF_F_wmaxMacCpsOfdmaSoundingPwrAssignmentType_t" brief="Types of power assignment methods">
					<field name="NPF_F_WMAX_MAC_CPS_OFDMA_SOUNDING_PWR_ASSIGN_EQUAL_POWER" value="0" brief="Equal power">
					</field>
					<field name="NPF_F_WMAX_MAC_CPS_OFDMA_SOUNDING_PWR_ASSIGN_SUBCARRIER_PWR_LIMIT" brief="Interference dependent. Per subcarrier power limit">
					</field>
					<field name="NPF_F_WMAX_MAC_CPS_OFDMA_SOUNDING_PWR_ASSIGN_TOTAL_PWR_LIMIT" brief="Interference dependent. Total power limit">
					</field>
				</enum>
				<!-- SOUNDING TYPE A -->
				<enum type="NPF_F_wmaxMacCpsOfdmaSoundingSeparabilityType_t" brief="Types of Sounding Type A separabilty">
					<field name="NPF_F_WMAX_MAC_CPS_OFDMA_SOUNDING_SEPARABILITY_CYCLIC_SHIFT" value="0" brief="The Cyclic Shift Separability">
					</field>
					<field name="NPF_F_WMAX_MAC_CPS_OFDMA_SOUNDING_SEPARABILITY_DECIMATION" brief="The Decimation Separability">
					</field>
				</enum>
				<enum type="NPF_F_wmaxMacCpsOfdmaSoundingDecimationValues_t" brief="Valid values of the decimation sounding type A separabilty">
					<field name="NPF_F_WMAX_MAC_CPS_OFDMA_SOUNDING_DECIMATION_D_2" value="0" brief="D=2">
					</field>
					<field name="NPF_F_WMAX_MAC_CPS_OFDMA_SOUNDING_DECIMATION_D_4" brief="D=4">
					</field>
					<field name="NPF_F_WMAX_MAC_CPS_OFDMA_SOUNDING_DECIMATION_D_5" brief="D=5">
					</field>
					<field name="NPF_F_WMAX_MAC_CPS_OFDMA_SOUNDING_DECIMATION_D_8" brief="D=8">
					</field>
					<field name="NPF_F_WMAX_MAC_CPS_OFDMA_SOUNDING_DECIMATION_D_16" brief="D=16">
					</field>
					<field name="NPF_F_WMAX_MAC_CPS_OFDMA_SOUNDING_DECIMATION_D_32" brief="D=32">
					</field>
					<field name="NPF_F_WMAX_MAC_CPS_OFDMA_SOUNDING_DECIMATION_D_64" brief="D=64">
					</field>
					<field name="NPF_F_WMAX_MAC_CPS_OFDMA_SOUNDING_DECIMATION_D_128" brief="D=128">
					</field>
				</enum>
				<enum type="NPF_F_wmaxMacCpsOfdmaSoundingCyclicShiftValues_t" brief="Valid values of the cyclic shift sounding type A separabilty">
					<field name="NPF_F_WMAX_MAC_CPS_OFDMA_SOUNDING_CYCLIC_SHIFT_P_4" value="0" brief="P=4">
					</field>
					<field name="NPF_F_WMAX_MAC_CPS_OFDMA_SOUNDING_CYCLIC_SHIFT_P_8" brief="P=8">
					</field>
					<field name="NPF_F_WMAX_MAC_CPS_OFDMA_SOUNDING_CYCLIC_SHIFT_P_16" brief="P=16">
					</field>
					<field name="NPF_F_WMAX_MAC_CPS_OFDMA_SOUNDING_CYCLIC_SHIFT_P_32" brief="P=32">
					</field>
					<field name="NPF_F_WMAX_MAC_CPS_OFDMA_SOUNDING_CYCLIC_SHIFT_P_9" brief="P=9">
					</field>
					<field name="NPF_F_WMAX_MAC_CPS_OFDMA_SOUNDING_CYCLIC_SHIFT_P_18" brief="P=18">
					</field>
				</enum>
				<enum type="NPF_F_wmaxMacCpsOfdmaSoundingMultiantennaType_t" brief="Types of valid multi-antenna configurations">
					<field name="NPF_F_WMAX_MAC_CPS_OFDMA_SOUNDING_MULTIANTENNA_FIRST_ONLY" value="0" brief="MS sounds first antenna only">
					</field>
					<field name="NPF_F_WMAX_MAC_CPS_OFDMA_SOUNDING_MULTIANTENNA_ALL" brief="MS sounds all antennas">
					</field>
				</enum>
				<enum type="NPF_F_wmaxMacCpsOfdmaSoundingAllocationType_t" brief="Types of sounding type A allocations">
					<field name="NPF_F_WMAX_MAC_CPS_OFDMA_SOUNDING_ALLOCATION_NORMAL" value="0" brief="Normal">
					</field>
					<field name="NPF_F_WMAX_MAC_CPS_OFDMA_SOUNDING_ALLOCATION_BAND_AMC" brief="Band AMC">
					</field>
				</enum>
				<enum type="NPF_F_wmaxMacCpsOfdmaSoundingAddFBLocationType_t" brief="Types of locations of additional feedback">
					<field name="NPF_F_WMAX_MAC_CPS_OFDMA_SOUNDING_ADD_FB_LOC_THIS_SYMBOL" value="0" brief="The additional feedback will be transmitted in the current symbol">
					</field>
					<field name="NPF_F_WMAX_MAC_CPS_OFDMA_SOUNDING_ADD_FB_LOC_NEXT_SYMBOL" brief="The additional feedback will be transmitted in the next symbol">
					</field>
				</enum>
				<struct type="NPF_F_wmaxCpsOfdmaSoundingSymbolTypeA_t" name="" brief="Definition of a single sounding symbol type A">
					<field name="ssSelectionMethod" type="NPF_F_wmaxMacCpsOfdmaSoundingSsSelectionType_t" brief="SS selection method">
					</field>
					<field name="subchannelAllocationMethod" type="NPF_F_wmaxMacCpsOfdmaSoundingFreqAssignmentType_t" brief="Frequency assignment method">
					</field>
					<field name="allocationMode" type="NPF_F_wmaxMacCpsOfdmaSoundingAllocationType_t" brief="Type of allocation">
					</field>
					<field name="pwrAssignmentMethod" type="NPF_F_wmaxMacCpsOfdmaSoundingPwrAssignmentType_t" brief="Power assignment method">
					</field>
					<field name="pwrBoost" type="NPF_F_wmaxMacCpsState_t" brief="Defines if the Power Boosting will be set to ON or OFF">
					</field>
					<field name="multiAntenna" type="NPF_F_wmaxMacCpsOfdmaSoundingMultiantennaType_t" brief="Multiantenna sounding method selection">
					</field>
					<field name="additionalFBLocation" type="NPF_F_wmaxMacCpsOfdmaSoundingAddFBLocationType_t" brief="Location of the additional feedback">
					</field>
				</struct>
				<struct type="NPF_F_wmaxMacCpsOfdmaSoundingDecimationParams_t" name="" brief="The decimation specific parameters">
					<field name="D" type="NPF_F_wmaxMacCpsOfdmaSoundingDecimationValues_t" brief="The D parameter">
					</field>
					<field name="offsetRand" type="NPF_F_wmaxMacCpsState_t" brief="Defines if the decimation offset randomization will be set to ON or OFF">
					</field>
				</struct>
				<struct type="NPF_F_wmaxCpsOfdmaSoundingTypeA_t" name="" brief="Definition of a type A specific parameters">
					<selectunion type="separability" name="separabilitySpec">
						<selectfield type="NPF_F_wmaxMacCpsOfdmaSoundingSeparabilityType_t" name="separabilityType" brief="Type of the seprability">
						</selectfield>
						<field name="P" type="NPF_F_wmaxMacCpsOfdmaSoundingCyclicShiftValues_t" brief="The P parametr">
							<selector>NPF_F_WMAX_MAC_CPS_OFDMA_SOUNDING_SEPARABILITY_CYCLIC_SHIFT</selector>
						</field>
						<field name="D" type="NPF_F_wmaxMacCpsOfdmaSoundingDecimationParams_t" brief="The decimation-specific parameters">
							<selector>NPF_F_WMAX_MAC_CPS_OFDMA_SOUNDING_SEPARABILITY_DECIMATION</selector>
						</field>
					</selectunion>
					<vector name="symbolsDef" type="NPF_F_wmaxCpsOfdmaSoundingSymbolTypeA_t" brief="The definition of a single type A sounding symbol">
						<length name="symbolsNum" type="NPF_uint32_t" brief="The number of symbols belonging to the sounding sub-allocation."></length>
					</vector>
				</struct>
				<!-- SOUNDING TYPE B -->
				<enum type="NPF_F_wmaxMacCpsOfdmaSoundingPermutationType_t" brief="Types of sounding type B permutations">
					<field name="NPF_F_WMAX_MAC_CPS_OFDMA_SOUNDING_PERMUTATION_PUSC" value="0" brief="PUSC">
					</field>
					<field name="NPF_F_WMAX_MAC_CPS_OFDMA_SOUNDING_PERMUTATION_FUSC" brief="FUSC">
					</field>
					<field name="NPF_F_WMAX_MAC_CPS_OFDMA_SOUNDING_PERMUTATION_OPTIONAL_FUSC" brief="Optional FUSC">
					</field>
					<field name="NPF_F_WMAX_MAC_CPS_OFDMA_SOUNDING_PERMUTATION_PUSC_ASCA" brief="PUSC-ASCA">
					</field>
					<field name="NPF_F_WMAX_MAC_CPS_OFDMA_SOUNDING_PERMUTATION_TUSC1" brief="TUSC1">
					</field>
					<field name="NPF_F_WMAX_MAC_CPS_OFDMA_SOUNDING_PERMUTATION_TUSC2" brief="TUSC2">
					</field>
					<field name="NPF_F_WMAX_MAC_CPS_OFDMA_SOUNDING_PERMUTATION_AMC_2x3" brief="AMC 2x3">
					</field>
				</enum>
				<struct type="NPF_F_wmaxCpsOfdmaSoundingSymbolTypeB_t" name="" brief="Definition of a single sounding symbol type B">
					<field name="ssSelectionMethod" type="NPF_F_wmaxMacCpsOfdmaSoundingSsSelectionType_t" brief="SS selection method">
					</field>
					<field name="subchannelAllocationMethod" type="NPF_F_wmaxMacCpsOfdmaSoundingFreqAssignmentType_t" brief="Frequency assignment method">
					</field>
					<field name="pwrAssignmentMethod" type="NPF_F_wmaxMacCpsOfdmaSoundingPwrAssignmentType_t" brief="Power assignment method">
					</field>
					<field name="pwrBoost" type="NPF_F_wmaxMacCpsState_t" brief="Defines if the Power Boosting will be set to ON or OFF">
					</field>
				</struct>
				<struct type="NPF_F_wmaxCpsOfdmaSoundingTypeB_t" name="" brief="Definition of a type B specific parameters">
					<field name="permutation" type="NPF_F_wmaxMacCpsOfdmaSoundingPermutationType_t" brief="The permutation to be used">
					</field>
					<field name="DL_permbase" type="NPF_uint32_t" brief="The DL_parmbase parameter">
					</field>
					<vector name="symbolsDef" type="NPF_F_wmaxCpsOfdmaSoundingSymbolTypeB_t" brief="The definition of a single type B sounding symbol">
						<length name="symbolsNum" type="NPF_uint32_t" brief="The number of symbols belonging to the sounding sub-allocation."></length>
					</vector>
				</struct>
			<!-- HARQ ACKCH-SPECIFIC SUB-ALLOCATION -->
			<struct type="NPF_F_wmaxMacCpsOfdmaHarqAckchSpec_t" name="" brief="Definition of the HARQ ACKCH sub-allocation specific parameters.">
				<descr>This data structure defines parameters of the HARQ ACKCH-specific Sub-allocation.</descr>
				<field name="includeInUiuc0" type="NPF_boolean_t" brief="Defines if the HARQ ACKCH region is to be placed inside UIUC=0 allocation"></field>
			</struct>
			<!-- END OF HARQ ACKCH-SPECIFIC DATA STRUCTURES/DEFINITIONS-->
				<!-- SOUNDING-SPECIFIC SUB-ALLOCATION -->
				<struct type="NPF_F_wmaxCpsOfdmaSoundingSpec_t" name="" brief="Definition of the Sounding sub-allocation specific parameters.">
					<descr>This data structure defines parameters of the Sounding Sub-allocation.</descr>
					<field name="soundingRelevance" type="NPF_F_wmaxMacCpsOfdmaSoundingRelevanceType_t" brief="Defines if the sounding IE describes the sounding zone in this or the next frame">
					</field>
					<field name="includeAdditionalFeedback" type="NPF_F_wmaxMacCpsOfdmaSoundingAddFBType_t" brief="Defines if the additional feedback will be included">
					</field>
					<selectunion type="sound" name="typeSpec">
						<selectfield type="NPF_F_wmaxMacCpsOfdmaSoundingType_t" name="soundingType" brief="Type of the sounding">
						</selectfield>
						<field name="typeA" type="NPF_F_wmaxCpsOfdmaSoundingTypeA_t">
							<selector>NPF_F_WMAX_MAC_CPS_OFDMA_SOUNDING_TYPE_A</selector>
						</field>
						<field name="typeB" type="NPF_F_wmaxCpsOfdmaSoundingTypeB_t">
							<selector>NPF_F_WMAX_MAC_CPS_OFDMA_SOUNDING_TYPE_B</selector>
						</field>
					</selectunion>
				</struct>
				<!-- END OF SOUNDING SPECIFIC DATA STRUCTURES/DEFINITIONS-->
			<struct type="NPF_F_wmaxMacCpsOfdmaSubAlloc_t" name="" brief="Definition of a Sub-allocation inside an OFDMA zone">
					<descr>
					This data structure defines parameters of a Sub-allocation inside OFDMA zone.
					</descr>
					<field name="firstSubChannel" type="NPF_uint16_t">
						<descr>The number of the first sub-channel in this sub-allocation</descr>
					</field>
					<field name="numOfSubChannels" type="NPF_uint16_t">
						<descr>The number of sub-channels in this sub-allocation</descr>
					</field>
					<field name="firstSymbol" type="NPF_uint16_t">
						<descr>The number of the first symbol in this sub-allocation, relatively to the beginning of the zone this sub-allocation is defined in.</descr>
					</field>
					<field name="numOfSymbols" type="NPF_uint16_t">
						<descr>The number of symbols in this sub-allocation</descr>
					</field>
					<field name="freq" type="NPF_uint16_t">
						<descr>The time (specified in a number of frames) between two consecutive apperance in the air of this sub-allocation</descr>
					</field>
					<field name="offset" type="NPF_uint16_t">
						<descr>The time (specified in a number of frames) between the frame number 0 and the first frame in which the sub-allocation will be added</descr>
					</field>
					<selectunion type="bb" name="areaSpec">
						<selectfield type="NPF_F_wmaxMacCpsOfdmaSubAllocType_t" name="subAllocType" brief="Type of the sub-allocation">
						</selectfield>
						<field name="unused" type="NPF_uint8_t">
							<selector>NPF_F_WMAX_MAC_CPS_OFDMA_ZONE_SUBALLOC_TYPE_CDMA_BW_P_RANG_1</selector>
							<selector>NPF_F_WMAX_MAC_CPS_OFDMA_ZONE_SUBALLOC_TYPE_CDMA_BW_P_RANG_3</selector>
							<selector>NPF_F_WMAX_MAC_CPS_OFDMA_ZONE_SUBALLOC_TYPE_CDMA_I_RANG_HO_2</selector>
							<selector>NPF_F_WMAX_MAC_CPS_OFDMA_ZONE_SUBALLOC_TYPE_CDMA_I_RANG_HO_4</selector>
							<selector>NPF_F_WMAX_MAC_CPS_OFDMA_ZONE_SUBALLOC_TYPE_AAS_DIVERSITY_MAP</selector>
							<selector>NPF_F_WMAX_MAC_CPS_OFDMA_ZONE_SUBALLOC_TYPE_FAST_FEEDBACK</selector>
						</field>
					<field name="harqAckchSpec" type="NPF_F_wmaxMacCpsOfdmaHarqAckchSpec_t" brief="Description of the HARQ ACKCH allocation option">
						<selector>NPF_F_WMAX_MAC_CPS_OFDMA_ZONE_SUBALLOC_TYPE_HARQ_ACK_CHANNEL</selector>
					</field>
						<field name="soundingSpec" type="NPF_F_wmaxCpsOfdmaSoundingSpec_t" brief="Description of the sounding zone options">
							<selector>NPF_F_WMAX_MAC_CPS_OFDMA_ZONE_SUBALLOC_TYPE_SOUNDING</selector>
						</field>
					</selectunion>
				</struct>
				<enum type="NPF_F_wmaxMacCpsOfdmaStcMatrix_t" brief="STC Matrix type used.">
					<field name="NPF_F_WMAX_MAC_CPS_OFDMA_ZONE_STC_MATRIX_A" brief="STC Matrix Type A"></field>
					<field name="NPF_F_WMAX_MAC_CPS_OFDMA_ZONE_STC_MATRIX_B" brief="STC Matrix Type B"></field>
					<field name="NPF_F_WMAX_MAC_CPS_OFDMA_ZONE_STC_MATRIX_C" brief="STC Matrix Type C"></field>
				</enum>
				<enum type="NPF_F_wmaxMacCpsOfdmaDedicatedPilotsType_t" brief="Type of dedicated pilots">
					<field name="NPF_F_WMAX_MAC_CPS_OFDMA_ZONE_DEDICATED_PILOTS" value="0" brief="Pilot symbols are dedicated. An MS should use only pilots specific to its burst for channel estimation"></field>
					<field name="NPF_F_WMAX_MAC_CPS_OFDMA_ZONE_BROADCAST_PILOTS" brief="Pilot symbols are broadcast"></field>
				</enum>
				<struct type="NPF_F_wmaxMacCpsOfdmaDlZoneParams_t" brief="OFDMA DL Zone specific parameters" name="">
					<descr>
            This data structure defines parameters specific to DL OFDMA Permutation zone.
          </descr>
					<field name="DL_permBase" type="NPF_uint8_t" brief="DL_permbase value.">
					</field>
					<field name="PRBS_ID" type="NPF_uint8_t" brief="PRBS_ID value.">
					</field>
					<field name="segment" type="NPF_uint8_t" brief="segment value.">
					</field>
					<field name="IDcell" type="NPF_uint8_t" brief="IDcell value.">
					</field>
					<field name="dedicatedPilots" type="NPF_F_wmaxMacCpsOfdmaDedicatedPilotsType_t" brief="Type of symbol pilots used: dedicated or broadcast.">
					</field>
					<field name="midamblePresent" type="NPF_boolean_t" brief="Midamble presence: true or false">
					</field>
					<field name="midambleBoosting" type="NPF_boolean_t" brief="Midamble boosting: true or false. This field contains valid data only when midamblePresent is set to true.">
					</field>
				</struct>
				<struct type="NPF_F_wmaxMacCpsOfdmaUlZoneParams_t" brief="OFDMA UL Zone specific parameters" name="">
					<descr>
            This data structure defines parameters specific to UL OFDMA Permutation zone.
          </descr>
					<field name="UL_permBase" type="NPF_uint8_t" brief="UL_permbase value.">
					</field>
				</struct>
				<struct brief="Definition of an OFDMA Permutation zone" type="NPF_F_wmaxMacCpsOfdmaZone_t" name="">
					<descr>
					This data structure defines parameters of an OFDMA Permutation zone.
					</descr>
					<selectunion type="NPF_F_wmaxMacCpsOfdmaZoneUnion_t" name="u">
						<selectfield type="NPF_F_wmaxMacCpsDirection_t" name="dir" brief="Direction: uplink or downlink">
						</selectfield>
						<field type="NPF_F_wmaxMacCpsOfdmaDlZoneParams_t" name="dlSpec">
							<descr>The DL Specific parameters</descr>
							<selector>NPF_F_WMAX_MAC_CPS_DIR_DL</selector>
						</field>
						<field type="NPF_F_wmaxMacCpsOfdmaUlZoneParams_t" name="ulSpec">
							<descr>The UL Specific parameters</descr>
							<selector>NPF_F_WMAX_MAC_CPS_DIR_UL</selector>
						</field>
					</selectunion>
					<field name="zonePermType" type="NPF_F_wmaxMacCpsOfdmaZonePermType_t" brief="Type of permutation used in the zone">
					</field>
					<field name="zoneType" type="NPF_F_wmaxMacCpsOfdmaZoneType_t" brief="Type of zone.">
					</field>
					<field name="stcMatrix" type="NPF_F_wmaxMacCpsOfdmaStcMatrix_t" brief="Type of used Space-Time-Coding Matrix for this zone. This field contains valid data only when zone type is STC.">
					</field>
					<field name="minSize" type="NPF_uint16_t">
						<descr>
							The minimum number of OFDMA symbols this zone must contain. 
							Value '0' means that this zone doesn't have to be present in every frame.
						</descr>
					</field>
					<field name="maxSize" type="NPF_uint16_t">
						<descr>
							The maximum number of OFDMA symbols this zone can contain. 
						</descr>
					</field>
					<field name="agcVal" type="NPF_uint16_t">
						<descr>
              The value to be associated with this zone and sent to the PHY to control the radio gain in this zone.
            </descr>
					</field>
					<vector type="NPF_F_wmaxMacCpsOfdmaSubAlloc_t" name="subAlloc">
						<descr>
							This table contains definition of Sub-allocations inside this zone.
						</descr>
						<length type="NPF_uint32_t" name="subAllocNum">
						</length>
					</vector>
				</struct>
				<struct type="NPF_F_wmaxMacCpsHarqPhyParams_t" name="" brief="All PHY HARQ related parameters">
					<field name="harqState" type="NPF_F_wmaxMacCpsState_t" brief="The state of the HARQ feature: ON or OFF"></field>
					<!-- HARQ DL specific parameters -->
					<field name="dlHarqBsBuffNum" type="NPF_uint32_t" brief="The number of HARQ buffers supported by the PHY in the downlink direction"></field>
					<field name="dlHarqBsBuffSize" type="NPF_uint32_t" brief="The number of bytes that can be stored in one HARQ PHY DL buffer"></field>
					<field name="dlHarqBsAggregFlag" type="NPF_F_wmaxMacCpsState_t" brief="The flag specifying if the BS PHY supports aggregation of HARQ DL buffers"></field>
					<field name="dlHarqAckDelay" type="NPF_uint8_t" brief="The 'j' parameter - the number of frames between the moment when a DL burst has been transmitted and the moment when it must be acknowledged"></field>
					<field name="dlHarqMaxSubBurst" type="NPF_uint16_t" brief="The maximum number of sub-bursts in a DL sub-frame."></field>
					<!-- HARQ UL specific parameters -->
					<field name="ulHarqBsBuffNum" type="NPF_uint32_t" brief="The number of HARQ buffers supported by the PHY in the uplink direction"></field>
					<field name="ulHarqBsBuffSize" type="NPF_uint32_t" brief="The number of bytes that can be stored in one HARQ PHY UL buffer"></field>
					<field name="ulHarqBsAggregFlag" type="NPF_F_wmaxMacCpsState_t" brief="The flag specifying if the BS PHY supports aggregation of HARQ UL buffers"></field>
					<field name="ulHarqMaxSubBurst" type="NPF_uint16_t" brief="The maximum number of sub-bursts in a UL sub-frame."></field>
				</struct>
				<enum type="NPF_F_wmaxMacCpsRepetitionType_t" name="e2">
					<descr>
            Repetition Type.
          </descr>
					<field name="NPF_F_WMAX_MAC_CPS_REPETITION_TYPE_NONE" value="0" brief="No repetition.">
					</field>
					<field name="NPF_F_WMAX_MAC_CPS_REPETITION_TYPE_2" brief="Repetition coding of 2 used.">
					</field>
					<field name="NPF_F_WMAX_MAC_CPS_REPETITION_TYPE_4" brief="Repetition coding of 4 used.">
					</field>
					<field name="NPF_F_WMAX_MAC_CPS_REPETITION_TYPE_6" brief="Repetition coding of 6 used.">
					</field>
				</enum>
				<struct type="NPF_F_wmaxMacCpsDiucAndRepetitionType_t" name="" brief="Pair of downlink burst profile index and repetition type.">
					<descr>
              This data structure defines a pair that consists from downlink burst profile index and repetition type.  
          </descr>
					<see>NPF_F_wmaxMacCpsXiucSubmapMapping_t</see>
					<field name="diuc" type="NPF_uint8_t" brief="Downlink burst profile index.">
					</field>
					<field name="repetition" type="NPF_F_wmaxMacCpsRepetitionType_t" brief="Repetition type.">
					</field>
				</struct>
				<struct type="NPF_F_wmaxMacCpsXiucSubmapMapping_t" name="" brief="Mapping between sub-maps and burst profiles.">
					<descr>
              This data structure defines which sub-map is used for each burst profile.
              Furthermore it defines downlink burst profile and repetition for each sub-map.  
          </descr>
					<see>NPF_F_wmaxMacCpsOfdmaParams_t</see>
					<see>NPF_F_wmaxMacCpsBurstProfileSetsDefineArgs_t</see>
					<field name="diucToSubmap" type="NPF_uint8_t" size="16" brief="Mapping of downlink burst profile indices to sub-maps. Acceptable sub-map indices are 0,1,2,3.">
					</field>
					<field name="uiucToSubmap" type="NPF_uint8_t" size="16" brief="Mapping of uplink burst profile indices to sub-maps. Acceptable sub-map indices are 0,1,2,3.">
					</field>
					<field name="submapToDiucAndRepetitionType" type="NPF_F_wmaxMacCpsDiucAndRepetitionType_t" size="4" brief="Mapping of sub-maps indices to downlink burst profile indices and repetition types. For each sub-map, a pair of diuc and repetition type is selected.">
					</field>
				</struct>
				<struct type="NPF_F_wmaxMacCpsOfdmaParams_t" name="" brief="OFDMA PHY Specific Parameters definition">
					<descr>
					This data structure defines the OFDMA PHY Specific Parameters.
					</descr>
					<field name="fft" type="NPF_F_wmaxMacCpsFftType_t" brief="FFT type">
					</field>
					<field name="phyProfile" type="NPF_F_wmaxMacCpsOfdmaPhyProfile_t" brief="PHY Profile: profP3_xx">
					</field>
					<field name="channelsMask" type="NPF_uint8_t" brief="Mask of used sub-channels groups.">
						<descr>
							Bit #0 (LSB): group #0; bit #1: group #1; bit #2: group #2; bit #3: group #3; bit #4 group #4; bit #5 ;group #5.
						</descr>
					</field>
					<field name="ttg" type="NPF_uint16_t" brief="Period of time needed to switch from TX to RX. Specified in Physical Slots. (NOTE: BS ONLY).">
					</field>
					<field name="rtg" type="NPF_uint16_t" brief="Period of time needed to switch from RX to TX. Specified in Physical Slots. (NOTE: BS ONLY).">
					</field>
					<field name="harqParams" type="NPF_F_wmaxMacCpsHarqPhyParams_t" brief="PHY HARQ related parameters.">
					</field>
					<field name="mapsType" type="NPF_F_wmaxMacCpsMapsType_t" brief="Type of DL/UL maps to be used.">
					</field>
					<field name="xiucSubmapMapping" type="NPF_F_wmaxMacCpsXiucSubmapMapping_t" brief="Mapping between burst profiles and sub-maps. Valid only if sub-maps are suppported.">
					</field>
					<field name="cidIncState" type="NPF_F_wmaxMacCpsState_t" brief="Defines if CIDs are included in maps.">
					</field>
					<vector type="NPF_F_wmaxMacCpsOfdmaZone_t" name="dlZones">
						<descr>
              This table contains definition of dlZonesNum DL zones. Note that at least one zone has to be defined.
            </descr>
						<length type="NPF_uint32_t" name="dlZonesNum">
						</length>
					</vector>
					<vector type="NPF_F_wmaxMacCpsOfdmaZone_t" name="ulZones">
						<descr>
              This table contains definition of ulZonesNum UL zones. Note that at least one zone has to be defined.
            </descr>
						<length type="NPF_uint32_t" name="ulZonesNum">
						</length>
					</vector>
					<field name="cqichIdSize" type="NPF_uint8_t" brief="CQICH_ID size (3 to 9). Default  equals 8."></field>
				</struct>
				<struct type="NPF_F_wmaxMacCpsThreshold_t" name="" brief="Thresholds definition">
					<descr>
            This data structure defines maximum an minimum values whose crossing triggers an action.
          </descr>
					<field name="hi" type="NPF_int32_t" brief="A maximum value">
					</field>
					<field name="low" type="NPF_int32_t" brief="A minimum value">
					</field>
				</struct>
				<struct type="NPF_F_wmaxMacCpsRange_t" name="" brief="Range definition">
					<descr>
            This data structure defines maximum an minimum values.
          </descr>
					<field name="hi" type="NPF_int32_t" brief="A maximum value of a parameter within the range">
					</field>
					<field name="low" type="NPF_int32_t" brief="A minimum value of a parameter within the range">
					</field>
				</struct>
				<struct type="NPF_F_wmaxMacCpsPhySpecificParams_t" name="" brief="PHY Specific Parameters definition">
					<descr>
            This data structure defines the PHY Specific Parameters.
          </descr>
					<field name="phyId" type="NPF_F_wmaxMacCpsObjId_t" brief="PHY Entity Id">
					</field>
					<field name="cp" type="NPF_F_wmaxMacCpsCpType_t" brief="1/4 or 1/8 or 1/16 or 1/32">
					</field>
					<selectunion type="NPF_F_wmaxMacCpsPhySpecificParamsUnion_t" name="u">
						<selectfield type="NPF_F_wmaxMacCpsPhyType_t" name="phyType" brief="Type of PHY.">
						</selectfield>
						<field type="NPF_F_wmaxMacCpsOfdmaParams_t" name="ofdma">
							<descr>OFDMA specific parameters.</descr>
							<selector>NPF_F_WMAX_MAC_CPS_PHY_TYPE_OFDMA</selector>
						</field>
						<field type="NPF_F_wmaxMacCpsOfdmParams_t" name="ofdm">
							<descr>OFDM specific parameters.</descr>
							<selector>NPF_F_WMAX_MAC_CPS_PHY_TYPE_OFDM</selector>
						</field>
					</selectunion>
					<field name="cdmaCodeRangeInitRanging" type="NPF_F_wmaxMacCpsRange_t" brief="Definition of maximum and minimum CDMA codes assigned to initial ranging">
					</field>
					<field name="cdmaCodeRangePeriodicRanging" type="NPF_F_wmaxMacCpsRange_t" brief="Definition of maximum and minimum CDMA codes assigned to periodic ranging">
					</field>
					<field name="cdmaCodeRangeBwdReq" type="NPF_F_wmaxMacCpsRange_t" brief="Definition of maximum and minimum CDMA codes assigned to bandwidth request">
					</field>
					<field name="cdmaCodeRangeHandoverRanging" type="NPF_F_wmaxMacCpsRange_t" brief="Definition of maximum and minimum CDMA codes assigned to handover ranging">
					</field>
				</struct>
				<struct type="NPF_F_wmaxMacCpsVendorOptions_t" brief="MAC Common Part Sublayer Vendor Specific Options">
					<descr>
            This structure contains vendor specific MAC_CPS options.
          </descr>
					<field name="timeHorizon" type="NPF_uint16_t" brief="Time Horizon in frames">
					</field>
					<field name="overflowThreshold" type="NPF_uint16_t" brief="The maximum number of frames when observed continous scheduler overflow before reporting it to the Control Plane">
					</field>
					<field name="inactivityThreshold" type="NPF_uint16_t" brief="The maximum number of UL allocations that were not used by a SS before reporting the SS to the Control Plane as inactive">
					</field>
				</struct>
				<enum type="NPF_F_wmaxMacCpsBoostingType_t" name="e2">
					<descr>
            Boosting Type.
          </descr>
					<field name="NPF_F_WMAX_MAC_CPS_BOOSTING_TYPE_NONE" value="0" brief="No boosting.">
					</field>
					<field name="NPF_F_WMAX_MAC_CPS_BOOSTING_TYPE_PLUS_6" brief="Boosting: +6 dB.">
					</field>
					<field name="NPF_F_WMAX_MAC_CPS_BOOSTING_TYPE_MINUS_6" brief="Boosting: -6 dB.">
					</field>
					<field name="NPF_F_WMAX_MAC_CPS_BOOSTING_TYPE_PLUS_9" brief="Boosting: +9 dB.">
					</field>
					<field name="NPF_F_WMAX_MAC_CPS_BOOSTING_TYPE_PLUS_3" brief="Boosting: +3 dB.">
					</field>
					<field name="NPF_F_WMAX_MAC_CPS_BOOSTING_TYPE_MINUS_3" brief="Boosting: -3 dB.">
					</field>
					<field name="NPF_F_WMAX_MAC_CPS_BOOSTING_TYPE_MINUS_9" brief="Boosting: -9 dB.">
					</field>
					<field name="NPF_F_WMAX_MAC_CPS_BOOSTING_TYPE_MINUS_12" brief="Boosting: -12 dB.">
					</field>
				</enum>
				<struct type="NPF_F_wmaxMacCpsHarqRepPolicy_t" brief="MAC Common Part Sublayer HARQ Retransmission Policy">
					<descr>
            This structure contains MAC CPS HARQ Retransmission Policy.
          </descr>
					<field name="repetition" type="NPF_F_wmaxMacCpsRepetitionType_t" brief="Repetition to be used.">
					</field>
					<field name="boosting" type="NPF_F_wmaxMacCpsBoostingType_t" brief="Boosting to be used.">
					</field>
				</struct>
				<struct type="NPF_F_wmaxMacCpsHarqOptions_t" brief="MAC Common Part Sublayer HARQ Specific Options">
					<descr>
            This structure contains MAC CPS HARQ options.
          </descr>
					<field name="harqRepPolicy" type="NPF_F_wmaxMacCpsHarqRepPolicy_t" size="4" brief="HARQ retransmission policy.">
						<descr>
              The row index '0' defines TX parameters to be used when a HARQ packet is transmitted the first time.
              The row index '1' defines TX parameters to be used when a HARQ packet is transmitted the second time.
              The row index '2' defines TX parameters to be used when a HARQ packet is transmitted the third time.
              The row index '3' defines TX parameters to be used when a HARQ packet is transmitted for the fourth time.
              After fourth transmission, HARQ dropps the packet as not deliverable.
            </descr>
					</field>
				</struct>
				<struct type="NPF_F_wmaxMacCpsArqGlobalParams_t" brief="MAC Common Part Sublayer ARQ Specific Configuration Parameters">
					<descr>
            This structure contains MAC CPS ARQ global parameters.
          </descr>
					<field name="timerT22" type="NPF_uint32_t" brief="T22 Timer - Wait for ARQ-Reset (ms)"></field>
					<field name="arqResetMaxRetries" type="NPF_uint32_t" brief="Maximum number of sending ARQ reset"></field>
				</struct>
				<struct type="NPF_F_wmaxMacCpsOptions_t" brief="MAC Common Part Sublayer Specific Options">
					<descr>
            This structure contains MAC_CPS options.
          </descr>
					<field name="bsId" type="NPF_uint8_t" size="6" brief="Basestation Id. (NOTE: BS ONLY).">
					</field>
					<field type="NPF_F_wmaxMacCpsInstanceState_t" name="initState" brief="Initial state of the MAC Instance.">
					</field>
					<field name="frameLen" type="NPF_F_wmaxMacCpsFrameLen_t" brief="Frame Length">
					</field>
					<field name="duplexType" type="NPF_F_wmaxMacCpsDuplexingType_t" brief="Duplex type: FDD or TDD">
					</field>
					<field name="ulMapRelevance" type="NPF_F_wmaxMacCpsUlMapRelevance_t" brief="UL-MAP relevance: this frame or the next frame. (NOTE: BS ONLY).">
					</field>
					<field name="split" type="NPF_uint16_t" brief="TDD Frame split point - distance between start of the frame and the first symbol of the UL sub-frame specified in physical slots [PS]. (NOTE: BS ONLY).">
					</field>
					<field name="ulBpSet" type="NPF_F_wmaxMacCpsBurstProfileSetEntry_t" size="16" brief="Uplink Burst Profile Set">
					</field>
					<field name="ulConfChangeCount" type="NPF_uint16_t " brief="Initial value of the UL Configuration Change Count matching with the one transmitted in the UCD message">
					</field>
					<field name="dlBpSet" type="NPF_F_wmaxMacCpsBurstProfileSetEntry_t" size="16" brief="Downlink Burst Profile Set">
					</field>
					<field name="dlConfChangeCount" type="NPF_uint16_t " brief="Initial value of the DL Configuration Change Count matching with the one transmitted in the DCD message">
					</field>
					<field name="harqRepPolicy" type="NPF_F_wmaxMacCpsHarqOptions_t " brief="HARQ retransmission policy">
					</field>
					<field name="ldt" type="NPF_uint16_t " brief="Lost UL-MAP Interval Time-out. Specified in ms.">
					</field>
					<field name="lut" type="NPF_uint16_t " brief="Lost UL-MAP Interval Time-out. Specified in ms.">
					</field>
					<field name="arqGlobalParams" type="NPF_F_wmaxMacCpsArqGlobalParams_t " brief="ARQ global parameters">
					</field>
					<!-- Not used - treshold pre-defined
          <field name="pnThreshold" type="NPF_uint32_t " brief="The maximum value of the valid packet number used by SA. Crosing this value causes sending of an event">
          </field>
          -->
					<field name="timerT27" type="NPF_uint32_t" brief="T27 Timer - SS Inactivity Timer - BS will assign a grant after T27 inactivity of the SS (ms)">
					</field>
				</struct>
				<struct type="NPF_F_wmaxMacCpsSetPhySapAddrArgs_t" brief="Set PHY SAP Address Arguments">
					<descr>
					This structure defines parameters used for PHY SAP interface over Ethernet interface.
				</descr>
					<field name="ethAddress" type="NPF_uint8_t" size="6" brief="Base Ethernet MAC address to be used for PHY SAP Only higher 4 bytes are valid - the rest is set according to the PHY SAP definition."></field>
				</struct>
				<func name="NPF_F_wmaxMacCpsSetPhySapAddr" type="NPF_error_t" brief="set phy sap mac addr" xdrid="RPC_WMAX_MAC_SET_PHY_SAP_ADDR">
					<descr>
					This function allows for change phy sap mac addr.
					</descr>
					<param io="in" type="NPF_callbackHandle_t" name="callbackHandle" xdr="no">
						<descr>
						Identifies the callback function which should be called.
						</descr>
					</param>
					<param io="in" type="NPF_correlator_t" name="correlator" xdr="no">
						<descr>
						A unique application invocation context that will be
						supplied to the asynchronous completion callback routine.
						</descr>
					</param>
					<param io="in" type="NPF_errorReporting_t" name="errorReporting" xdr="no">
						<descr>
						Defines whether a callback will be called after
						completing the action requested by the function call.
						</descr>
					</param>
					<param io="in" type="NPF_FEHandle_t" name="feHandle" xdr="no">
						<descr>
						Identifies the forwarding element where the action will be executed.
						</descr>
					</param>
					<param io="in" class="vector" type="NPF_F_wmaxMacCpsSetPhySapAddrArgs_t" name="argsArray" xdr="yes">
						<descr>Array of structures containing argsNum entries. Each entry contains parameters for one request.</descr>
						<length type="NPF_uint32_t" name="argsNum" brief="Number of elements in the argsArray table.">
						</length>
					</param>
					<return>
						<descr>
						Error code indicating if function call was successful.
						</descr>
						<retval name="NPF_NO_ERROR">
							<descr>
							The operation is in progress.
							</descr>
						</retval>
						<retval name="NPF_E_BAD_CALLBACK_HANDLE">
							<descr>
							The callback handle is invalid.
						</descr>
						</retval>
						<retval name="NPF_E_UNKNOWN">
							<descr>
							The operation cannot be completed successfully because
							of problems encountered when handling the input parameters.
							</descr>
						</retval>
					</return>
					<callback>
						<descr>
						If errorReporting is set to ALWAYS, a callback is invoked to
						indicate that the operation has been completed. The callback
						is identified by NPF_F_WMAX_MAC_CPS_CALLBACK_SET_PHY_SAP_ADDR.
						</descr>
						<retval name="NPF_NO_ERROR" brief="Operation completed successfully.">
						</retval>
						<retval name="NPF_F_WMAX_MAC_CPS_ERROR_NO_RES" brief="Resources exhausted.">
						</retval>
						<retval name="NPF_F_WMAX_MAC_CPS_ERROR_INVALID_PARAMS" brief="Invalid parameter.">
						</retval>
					</callback>
				</func>
				<struct type="NPF_F_wmaxMacCpsInstanceAddArgs_t" name="" brief="MAC Instance Add arguments">
					<descr>
					This data structure defines parameters of a MAC Instance Add FAPI call.
					</descr>
					<field name="cpsSpecific" type="NPF_F_wmaxMacCpsOptions_t" brief="Definition of CPS specific parameters">
					</field>
					<field name="phySpecific" type="NPF_F_wmaxMacCpsPhySpecificParams_t" brief="Definition of PHY specific parameters">
					</field>
					<field name="vendorSpecific" type="NPF_F_wmaxMacCpsVendorOptions_t" brief="Specifies vendor-specific MAC-CPS options.">
					</field>
				</struct>
				<func name="NPF_F_wmaxMacCpsInstanceAdd" type="NPF_error_t" brief="MAC Instance Add" xdrid="RPC_WMAX_MAC_INST_ADD">
					<descr>
					This function allows for creation of a MAC Instance.
					</descr>
					<param io="in" type="NPF_callbackHandle_t" name="callbackHandle" xdr="no">
						<descr>
						Identifies the callback function which should be called.
						</descr>
					</param>
					<param io="in" type="NPF_correlator_t" name="correlator" xdr="no">
						<descr>
						A unique application invocation context that will be
						supplied to the asynchronous completion callback routine.
						</descr>
					</param>
					<param io="in" type="NPF_errorReporting_t" name="errorReporting" xdr="no">
						<descr>
						Defines whether a callback will be called after
						completing the action requested by the function call.
						</descr>
					</param>
					<param io="in" type="NPF_FEHandle_t" name="feHandle" xdr="no">
						<descr>
						Identifies the forwarding element where the action will be executed.
						</descr>
					</param>
					<param io="in" class="vector" type="NPF_F_wmaxMacCpsInstanceAddArgs_t" name="argsArray" xdr="yes">
						<descr>Array of structures containing argsNum entries. Each entry contains parameters for one request.</descr>
						<length type="NPF_uint32_t" name="argsNum" brief="Number of elements in the argsArray table.">
						</length>
					</param>
					<return>
						<descr>
						Error code indicating if function call was successful.
						</descr>
						<retval name="NPF_NO_ERROR">
							<descr>
							The operation is in progress.
							</descr>
						</retval>
						<retval name="NPF_E_BAD_CALLBACK_HANDLE">
							<descr>
							The callback handle is invalid.
						</descr>
						</retval>
						<retval name="NPF_E_UNKNOWN">
							<descr>
							The operation cannot be completed successfully because
							of problems encountered when handling the input parameters.
							</descr>
						</retval>
					</return>
					<callback>
						<descr>
						If errorReporting is set to ALWAYS, a callback is invoked to
						indicate that the operation has been completed. The callback
						is identified by NPF_F_WMAX_MAC_CPS_CALLBACK_INSTANCE_ADD. The identifier of newly created instance is stored
						in objResp and it has the syntax defined by NPF_F_wmaxMacCpsObjId_t.
						</descr>
						<retval name="NPF_NO_ERROR" brief="Operation completed successfully.">
						</retval>
						<retval name="NPF_F_WMAX_MAC_CPS_ERROR_NO_RES" brief="Resources exhausted.">
						</retval>
						<retval name="NPF_F_WMAX_MAC_CPS_ERROR_INVALID_PARAMS" brief="Invalid parameter.">
						</retval>
						<retval name="NPF_F_WMAX_MAC_CPS_ERROR_OBJ_EXISTS" brief="MAC Instance already exists.">
						</retval>
					</callback>
				</func>
			</section>
			<section name="Deletion of MAC CPS Instance">
				<struct type="NPF_F_wmaxMacCpsInstanceDelArgs_t" name="" brief="MAC Instance Delete arguments">
					<descr>
					This data structure defines parameters of a MAC Instance Delete FAPI call.
					</descr>
					<field type="NPF_F_wmaxMacCpsObjId_t" name="id" brief="Identifier of MAC Instance to be deleted.">
					</field>
				</struct>
				<func name="NPF_F_wmaxMacCpsInstanceDel" type="NPF_error_t" brief="MAC Instance Delete" xdrid="RPC_WMAX_MAC_INST_DEL">
					<descr>
					This function allows for deletion of a MAC Instance.
					</descr>
					<param io="in" type="NPF_callbackHandle_t" name="callbackHandle" xdr="no">
						<descr>
						Identifies the callback function which should be called.
						</descr>
					</param>
					<param io="in" type="NPF_correlator_t" name="correlator" xdr="no">
						<descr>
						A unique application invocation context that will be
						supplied to the asynchronous completion callback routine.
						</descr>
					</param>
					<param io="in" type="NPF_errorReporting_t" name="errorReporting" xdr="no">
						<descr>
						Defines whether a callback will be called after
						completing the action requested by the function call.
						</descr>
					</param>
					<param io="in" type="NPF_FEHandle_t" name="feHandle" xdr="no">
						<descr>
						Identifies the forwarding element where the action will be executed.
						</descr>
					</param>
					<param io="in" class="vector" type="NPF_F_wmaxMacCpsInstanceDelArgs_t" name="argsArray" xdr="yes">
						<descr>Array of structures containing argsNum entries. Each entry contains parameters for one request.</descr>
						<length type="NPF_uint32_t" name="argsNum" brief="Number of elements in the argsArray table.">
						</length>
					</param>
					<return>
						<descr>
						Error code indicating if function call was successful.
						</descr>
						<retval name="NPF_NO_ERROR">
							<descr>
							The operation is in progress.
							</descr>
						</retval>
						<retval name="NPF_E_BAD_CALLBACK_HANDLE">
							<descr>
							The callback handle is invalid.
						</descr>
						</retval>
						<retval name="NPF_E_UNKNOWN">
							<descr>
							The operation cannot be completed successfully because
							of problems encountered when handling the input parameters.
							</descr>
						</retval>
					</return>
					<callback>
						<descr>
						If errorReporting is set to ALWAYS, a callback is invoked to
						indicate that the operation has been completed. The callback
						is identified by NPF_F_WMAX_MAC_CPS_CALLBACK_INSTANCE_DEL.
						</descr>
						<retval name="NPF_NO_ERROR" brief="Operation completed successfully.">
						</retval>
						<retval name="NPF_F_WMAX_MAC_CPS_ERROR_INVALID_PARAMS" brief="Invalid parameter.">
						</retval>
						<retval name="NPF_F_WMAX_MAC_CPS_ERROR_OBJ_INVALID_STATE" brief="MAC instance must be STOPPED first.">
						</retval>
						<retval name="NPF_F_WMAX_MAC_CPS_ERROR_OBJ_NONEXISTANT" brief="MAC Instance does not exists.">
						</retval>
					</callback>
				</func>
			</section>
			<section name="Changing State of Scheduler">
				<enum type="NPF_F_wmaxMacCpsSchedulingState_t" brief="Scheduler state">
					<descr>
					This enum defines possible administrative states of a scheduler.
					</descr>
					<field name="NPF_F_WMAX_MAC_CPS_SCHEDULER_START" value="0" brief="Scheduler will be started">
					</field>
					<field name="NPF_F_WMAX_MAC_CPS_SCHEDULER_STOP" brief="Scheduler will be stopped">
					</field>
				</enum>
				<struct type="NPF_F_wmaxMacCpsSchedulingStateChangeArgs_t" name="" brief="Scheduling State Change arguments">
					<descr>
					This data structure defines parameters of a Scheduling State Change FAPI call.
					</descr>
					<field type="NPF_F_wmaxMacCpsObjId_t" name="id" brief="MAC Instance Id">
					</field>
					<field type="NPF_F_wmaxMacCpsSchedulingState_t" name="uplink" brief="Requested state of the uplink scheduler.">
					</field>
					<field type="NPF_F_wmaxMacCpsSchedulingState_t" name="downlink" brief="Requested state of the downlink scheduler.">
					</field>
				</struct>
				<func name="NPF_F_wmaxMacCpsSchedulingStateChange" type="NPF_error_t" brief="Scheduling State Change" xdrid="RPC_WMAX_MAC_SCHED_STATE_CHG">
					<descr>This function allows for starting and stopping scheduling on uplink and downlink in order to allow for DFS measurements.</descr>
					<param io="in" type="NPF_callbackHandle_t" name="callbackHandle" xdr="no">
						<descr>
						Identifies the callback function which should be called.
						</descr>
					</param>
					<param io="in" type="NPF_correlator_t" name="correlator" xdr="no">
						<descr>
						A unique application invocation context that will be
						supplied to the asynchronous completion callback routine.
						</descr>
					</param>
					<param io="in" type="NPF_errorReporting_t" name="errorReporting" xdr="no">
						<descr>
						Defines whether a callback will be called after
						completing the action requested by the function call.
						</descr>
					</param>
					<param io="in" type="NPF_FEHandle_t" name="feHandle" xdr="no">
						<descr>
						Identifies the forwarding element where the action will be executed.
						</descr>
					</param>
					<param io="in" class="vector" type="NPF_F_wmaxMacCpsSchedulingStateChangeArgs_t" name="argsArray" xdr="yes">
						<descr>Array of structures containing argsNum entries. Each entry contains parameters for one request.</descr>
						<length type="NPF_uint32_t" name="argsNum" brief="Number of elements in the argsArray table.">
						</length>
					</param>
					<return>
						<descr>
						Error code indicating if function call was successful.
						</descr>
						<retval name="NPF_NO_ERROR">
							<descr>
							The operation is in progress.
							</descr>
						</retval>
						<retval name="NPF_E_BAD_CALLBACK_HANDLE">
							<descr>
							The callback handle is invalid.
						</descr>
						</retval>
						<retval name="NPF_E_UNKNOWN">
							<descr>
							The operation cannot be completed successfully because
							of problems encountered when handling the input parameters.
							</descr>
						</retval>
					</return>
					<callback>
						<descr>
						If errorReporting is set to ALWAYS, a callback is invoked to
						indicate that the operation has been completed. The callback
						is identified by NPF_F_WMAX_MAC_CPS_CALLBACK_SCHEDULER_STATE.
						</descr>
						<retval name="NPF_NO_ERROR" brief="Operation completed successfully.">
						</retval>
						<retval name="NPF_F_WMAX_MAC_CPS_ERROR_NO_RES" brief="Resources exhausted.">
						</retval>
						<retval name="NPF_F_WMAX_MAC_CPS_ERROR_INVALID_PARAMS" brief="Invalid parameter.">
						</retval>
					</callback>
				</func>
			</section>
			<section name="Changing Scheduler Parameters">
				<enum type="NPF_F_wmaxMacCpsOfdmParamsValid_t" name="" brief="Valid OFDM parameters">
					<descr>Specifies which fields being part of the NPF_F_wmaxMacCpsOfdmParams_t structure contains valid values.</descr>
					<see>NPF_F_wmaxMacCpsSchedulerParamsChange</see>
					<field name="NPF_F_WMAX_MAC_CPS_PHY_SPECIFIC_OFDM_CHANNELS_NUM">
						<descr>The 'channelsNum' field contains valid data.</descr>
						<value>(1 &lt;&lt; 1)</value>
					</field>
					<field name="NPF_F_WMAX_MAC_CPS_PHY_SPECIFIC_OFDM_TTG">
						<descr>The 'ttg' field contains valid data.</descr>
						<value>(1 &lt;&lt; 2)</value>
					</field>
					<field name="NPF_F_WMAX_MAC_CPS_PHY_SPECIFIC_OFDM_RTG">
						<descr>The 'rtg' field contains valid data.</descr>
						<value>(1 &lt;&lt; 3)</value>
					</field>
					<field name="NPF_F_WMAX_MAC_CPS_PHY_SPECIFIC_OFDM_INIT_RANGING_PERIOD">
						<descr>The 'initRangingPeriod' field contains valid data.</descr>
						<value>(1 &lt;&lt; 4)</value>
					</field>
					<field name="NPF_F_WMAX_MAC_CPS_PHY_SPECIFIC_OFDM_INIT_RANGING_SIZE">
						<descr>The 'initRangingSize' field contains valid data.</descr>
						<value>(1 &lt;&lt; 5)</value>
					</field>
					<field name="NPF_F_WMAX_MAC_CPS_PHY_SPECIFIC_OFDM_BWR_CONTENTION_FULL_PERIOD">
						<descr>The 'bwrContentionFullPeriod' field contains valid data.</descr>
						<value>(1 &lt;&lt; 6)</value>
					</field>
					<field name="NPF_F_WMAX_MAC_CPS_PHY_SPECIFIC_OFDM_BWR_CONTENTION_FULL_SIZE">
						<descr>The 'bwrContentionFullSize' field contains valid data.</descr>
						<value>(1 &lt;&lt; 7)</value>
					</field>
					<field name="NPF_F_WMAX_MAC_CPS_PHY_SPECIFIC_OFDM_BWR_FOCUSED_FULL_PERIOD">
						<descr>The 'bwrContentionFocusedPeriod' field contains valid data.</descr>
						<value>(1 &lt;&lt; 8)</value>
					</field>
					<field name="NPF_F_WMAX_MAC_CPS_PHY_SPECIFIC_OFDM_BWR_FOCUSED_FULL_SIZE">
						<descr>The 'bwrContentionFocusedSize' field contains valid data.</descr>
						<value>(1 &lt;&lt; 9)</value>
					</field>
					<field name="NPF_F_WMAX_MAC_CPS_PHY_SPECIFIC_OFDM_START_STC_ZONE">
						<descr>The 'startStcZone' field contains valid data.</descr>
						<value>(1 &lt;&lt; 10)</value>
					</field>
					<field name="NPF_F_WMAX_MAC_CPS_PHY_SPECIFIC_OFDM_MAX_UNUSED_OPPORTUNITIES">
						<descr>The 'maxUnusedOpportunities' field contains valid data.</descr>
						<value>(1 &lt;&lt; 11)</value>
					</field>
					<field name="NPF_F_WMAX_MAC_CPS_PHY_SPECIFIC_OFDM_CID_INC">
						<descr>The 'cidIncState' field contains valid data.</descr>
						<value>(1 &lt;&lt; 12)</value>
					</field>
				</enum>
				<enum type="NPF_F_wmaxMacCpsOfdmaParamsValid_t" name="" brief="Valid OFDMA Parameters">
					<descr>Specifies which fields being part of the NPF_F_wmaxMacCpsOfdmaParams_t structure contains valid values.</descr>
					<see>NPF_F_wmaxMacCpsSchedulerParamsChange</see>
					<field name="NPF_F_WMAX_MAC_CPS_PHY_SPECIFIC_OFDMA_CHANNELS_NUM">
						<descr>The 'channelsNum' field contains valid data.</descr>
						<value>(1 &lt;&lt; 1)</value>
					</field>
					<field name="NPF_F_WMAX_MAC_CPS_PHY_SPECIFIC_OFDMA_CID_INC">
						<descr>The 'cidIncState' field contains valid data.</descr>
						<value>(1 &lt;&lt; 2)</value>
					</field>
				</enum>
				<struct type="NPF_F_wmaxMacCpsOfdmParamsOptional_t" name="" brief="OFDM PHY specific parameters to be changed">
					<field name="validFields" type="NPF_F_wmaxMacCpsOfdmParamsValid_t">
						<descr>Specifies which of the OFDM PHY specific parameters specified in the params data structure contains valid values and needs to be changed"</descr>
					</field>
					<field name="params" type="NPF_F_wmaxMacCpsOfdmParams_t">
						<descr>All OFDM-specific parameters.</descr>
					</field>
				</struct>
				<struct type="NPF_F_wmaxMacCpsOfdmaParamsOptional_t" name="" brief="OFDMA PHY specific parameters to be changed">
					<field name="validFields" type="NPF_F_wmaxMacCpsOfdmaParamsValid_t">
						<descr>Specifies which of the OFDMA PHY specific parameters specified in the params data structure contains valid values and needs to be changed"</descr>
					</field>
					<field name="params" type="NPF_F_wmaxMacCpsOfdmaParams_t">
						<descr>All OFDMA-specific parameters.</descr>
					</field>
				</struct>
				<struct type="NPF_F_wmaxMacCpsSchedulerParamsChangeArgs_t" name="" brief="MAC Scheduler Parameters Change arguments">
					<descr>
					This data structure defines parameters of a MAC Scheduler Change Parameter FAPI call. (NOTE: BS ONLY).
					</descr>
					<field name="id" type="NPF_F_wmaxMacCpsObjId_t" brief="MAC Instance Id">
					</field>
					<field name="split" type="NPF_uint16_t" brief="TDD Frame split point - distance between start of the frame and the first symbol of the UL sub-frame.">
					</field>
					<selectunion type="aa" name="u">
						<selectfield type="NPF_F_wmaxMacCpsPhyType_t" name="phyType" brief="Specifies type of PHY">
						</selectfield>
						<field name="ofdmParams" type="NPF_F_wmaxMacCpsOfdmParamsOptional_t">
							<descr>OFDM PHY specific parameters to be modified</descr>
							<selector>NPF_F_WMAX_MAC_CPS_PHY_TYPE_OFDM</selector>
						</field>
						<field name="ofdmaParams" type="NPF_F_wmaxMacCpsOfdmaParamsOptional_t">
							<descr>OFDM PHY specific parameters to be modified</descr>
							<selector>NPF_F_WMAX_MAC_CPS_PHY_TYPE_OFDMA</selector>
						</field>
					</selectunion>
				</struct>
				<func name="NPF_F_wmaxMacCpsSchedulerParamsChange" type="NPF_error_t" brief="MAC Scheduler Parameters Change" xdrid="RPC_WMAX_MAC_SCHED_PARAM_CHG">
					<descr>
					This function allows for change of the parameters of a MAC scheduler. (NOTE: BS ONLY).
					</descr>
					<param io="in" type="NPF_callbackHandle_t" name="callbackHandle" xdr="no">
						<descr>
						Identifies the callback function which should be called.
						</descr>
					</param>
					<param io="in" type="NPF_correlator_t" name="correlator" xdr="no">
						<descr>
						A unique application invocation context that will be
						supplied to the asynchronous completion callback routine.
						</descr>
					</param>
					<param io="in" type="NPF_errorReporting_t" name="errorReporting" xdr="no">
						<descr>
						Defines whether a callback will be called after
						completing the action requested by the function call.
						</descr>
					</param>
					<param io="in" type="NPF_FEHandle_t" name="feHandle" xdr="no">
						<descr>
						Identifies the forwarding element where the action will be executed.
						</descr>
					</param>
					<param io="in" class="vector" type="NPF_F_wmaxMacCpsSchedulerParamsChangeArgs_t" name="argsArray" xdr="yes">
						<descr>Array of structures containing argsNum entries. Each entry contains parameters for one request.</descr>
						<length type="NPF_uint32_t" name="argsNum" brief="Number of elements in the argsArray table.">
						</length>
					</param>
					<return>
						<descr>
						Error code indicating if function call was successful.
						</descr>
						<retval name="NPF_NO_ERROR">
							<descr>
							The operation is in progress.
							</descr>
						</retval>
						<retval name="NPF_E_BAD_CALLBACK_HANDLE">
							<descr>
							The callback handle is invalid.
						</descr>
						</retval>
						<retval name="NPF_E_UNKNOWN">
							<descr>
							The operation cannot be completed successfully because
							of problems encountered when handling the input parameters.
							</descr>
						</retval>
					</return>
					<callback>
						<descr>
						If errorReporting is set to ALWAYS, a callback is invoked to
						indicate that the operation has been completed. The callback
						is identified by NPF_F_WMAX_MAC_CPS_CALLBACK_SCHEDULER_PARAMS_CHG.
						</descr>
						<retval name="NPF_NO_ERROR" brief="Operation completed successfully.">
						</retval>
						<retval name="NPF_F_WMAX_MAC_CPS_ERROR_NO_RES" brief="Resources exhausted.">
						</retval>
						<retval name="NPF_F_WMAX_MAC_CPS_ERROR_INVALID_PARAMS" brief="Invalid parameter.">
						</retval>
					</callback>
				</func>
			</section>
			<section name="Changing of MAC CPS Instance State">
				<struct type="NPF_F_wmaxMacCpsInstanceStateChangeArgs_t" name="" brief="MAC Instance State Change arguments">
					<descr>
					This data structure defines parameters of a MAC Instance State Change FAPI call.
					</descr>
					<field type="NPF_F_wmaxMacCpsObjId_t" name="id" brief="MAC Instance Id">
					</field>
					<field type="NPF_F_wmaxMacCpsInstanceState_t" name="state" brief="Requested state of the MAC Instance.">
					</field>
				</struct>
				<func name="NPF_F_wmaxMacCpsInstanceStateChange" type="NPF_error_t" brief="MAC Instance State Change" xdrid="RPC_WMAX_MAC_STATE_CHG">
					<descr>This function allows for starting and stopping MAC Instance.</descr>
					<param io="in" type="NPF_callbackHandle_t" name="callbackHandle" xdr="no">
						<descr>
						Identifies the callback function which should be called.
						</descr>
					</param>
					<param io="in" type="NPF_correlator_t" name="correlator" xdr="no">
						<descr>
						A unique application invocation context that will be
						supplied to the asynchronous completion callback routine.
						</descr>
					</param>
					<param io="in" type="NPF_errorReporting_t" name="errorReporting" xdr="no">
						<descr>
						Defines whether a callback will be called after
						completing the action requested by the function call.
						</descr>
					</param>
					<param io="in" type="NPF_FEHandle_t" name="feHandle" xdr="no">
						<descr>
						Identifies the forwarding element where the action will be executed.
						</descr>
					</param>
					<param io="in" class="vector" type="NPF_F_wmaxMacCpsInstanceStateChangeArgs_t" name="argsArray" xdr="yes">
						<descr>Array of structures containing argsNum entries. Each entry contains parameters for one request.</descr>
						<length type="NPF_uint32_t" name="argsNum" brief="Number of elements in the argsArray table.">
						</length>
					</param>
					<return>
						<descr>
						Error code indicating if function call was successful.
						</descr>
						<retval name="NPF_NO_ERROR">
							<descr>
							The operation is in progress.
							</descr>
						</retval>
						<retval name="NPF_E_BAD_CALLBACK_HANDLE">
							<descr>
							The callback handle is invalid.
							</descr>
						</retval>
						<retval name="NPF_E_UNKNOWN">
							<descr>
							The operation cannot be completed successfully because
							of problems encountered when handling the input parameters.
							</descr>
						</retval>
					</return>
					<callback>
						<descr>
						If errorReporting is set to ALWAYS, a callback is invoked to
						indicate that the operation has been completed. The callback
						is identified by NPF_F_WMAX_MAC_CPS_CALLBACK_INSTANCE_STATE_CHG.
						</descr>
						<retval name="NPF_NO_ERROR" brief="Operation completed successfully.">
						</retval>
						<retval name="NPF_F_WMAX_MAC_CPS_ERROR_NO_RES" brief="Resources exhausted.">
						</retval>
						<retval name="NPF_F_WMAX_MAC_CPS_ERROR_INVALID_PARAMS" brief="Invalid parameter.">
						</retval>
					</callback>
				</func>
			</section>
			<section name="Getting Current Radio Frame Number">
				<func name="NPF_F_wmaxMacCpsRadioFrameNumGet" type="NPF_error_t" brief="Current Radio Frame Number Get" xdrid="RPC_WMAX_MAC_FN_GET">
					<descr>
          This function allows the Control Plane to get information what was the current radio frame number during this call procesing.
        </descr>
					<param io="in" type="NPF_callbackHandle_t" name="callbackHandle" xdr="no">
						<descr>
            Identifies the callback function which should be called.
          </descr>
					</param>
					<param io="in" type="NPF_correlator_t" name="correlator" xdr="no">
						<descr>
            A unique application invocation context that will be
            supplied to the asynchronous completion callback routine.
          </descr>
					</param>
					<param io="in" type="NPF_errorReporting_t" name="errorReporting" xdr="no">
						<descr>
            Defines whether a callback will be called after
            completing the action requested by the function call.
          </descr>
					</param>
					<param io="in" type="NPF_FEHandle_t" name="feHandle" xdr="no">
						<descr>
            Identifies the forwarding element where the action will be executed.
          </descr>
					</param>
					<param io="in" class="vector" type="NPF_F_wmaxMacCpsObjId_t" name="idArray" xdr="yes">
						<descr>Array of MAC Instance IDs containing idNum entries.</descr>
						<length type="NPF_uint32_t" name="idNum" brief="Number of elements in the idArray table.">
						</length>
					</param>
					<return>
						<descr>
            Error code indicating if function call was successful.
          </descr>
						<retval name="NPF_NO_ERROR">
							<descr>
              The operation is in progress.
            </descr>
						</retval>
						<retval name="NPF_E_BAD_CALLBACK_HANDLE">
							<descr>
              The callback handle is invalid.
            </descr>
						</retval>
						<retval name="NPF_E_UNKNOWN">
							<descr>
              The operation cannot be completed successfully because
              of problems encountered when handling the input parameters.
            </descr>
						</retval>
					</return>
					<callback>
						<descr>
            If errorReporting is set to ALWAYS, a callback is invoked to
            indicate that the operation has been completed. The callback
            is identified by NPF_F_WMAX_MAC_CPS_CALLBACK_RADIO_FRAME_NUM_GET.
          </descr>
						<retval name="NPF_NO_ERROR" brief="Operation completed successfully.">
						</retval>
						<retval name="NPF_F_WMAX_AC_ERROR_INVALID_PARAMS" brief="Invalid parameter.">
						</retval>
					</callback>
				</func>
			</section>
		</section>
		<section name="OFDMA Permutation Zone Management">
			<section name="Permutation Zone Creation">
				<struct type="NPF_F_wmaxMacCpsZoneAddArgs_t" name="" brief="Permutation Zone Add arguments">
					<descr>
					This data structure defines parameters of a Zone Add FAPI call.
					</descr>
					<field name="id" type="NPF_F_wmaxMacCpsObjId_t" brief="MAC Instance Id">
					</field>
					<field name="prevZoneId" type="NPF_F_wmaxMacCpsObjId_t" brief="Id of the zone previous to the new one. If null handle then the new zone will be the very first one">
					</field>
					<field name="zone" type="NPF_F_wmaxMacCpsOfdmaZone_t" brief="Permutation Zone definition">
					</field>
				</struct>
				<func name="NPF_F_wmaxMacCpsZoneAdd" type="NPF_error_t" brief="OFDMA Permutation Zone Add" xdrid="RPC_WMAX_MAC_ZONE_ADD">
					<descr>
					This function allows for creation of an OFDMA permutation zone.
					</descr>
					<param io="in" type="NPF_callbackHandle_t" name="callbackHandle" xdr="no">
						<descr>
						Identifies the callback function which should be called.
						</descr>
					</param>
					<param io="in" type="NPF_correlator_t" name="correlator" xdr="no">
						<descr>
						A unique application invocation context that will be
						supplied to the asynchronous completion callback routine.
						</descr>
					</param>
					<param io="in" type="NPF_errorReporting_t" name="errorReporting" xdr="no">
						<descr>
						Defines whether a callback will be called after
						completing the action requested by the function call.
						</descr>
					</param>
					<param io="in" type="NPF_FEHandle_t" name="feHandle" xdr="no">
						<descr>
						Identifies the forwarding element where the action will be executed.
						</descr>
					</param>
					<param io="in" class="vector" type="NPF_F_wmaxMacCpsZoneAddArgs_t" name="argsArray" xdr="yes">
						<descr>Array of structures containing argsNum entries. Each entry contains parameters for one request.</descr>
						<length type="NPF_uint32_t" name="argsNum" brief="Number of elements in the argsArray table.">
						</length>
					</param>
					<return>
						<descr>
						Error code indicating if function call was successful.
						</descr>
						<retval name="NPF_NO_ERROR">
							<descr>
							The operation is in progress.
							</descr>
						</retval>
						<retval name="NPF_E_BAD_CALLBACK_HANDLE">
							<descr>
							The callback handle is invalid.
						</descr>
						</retval>
						<retval name="NPF_E_UNKNOWN">
							<descr>
							The operation cannot be completed successfully because
							of problems encountered when handling the input parameters.
							</descr>
						</retval>
					</return>
					<callback>
						<descr>
						If errorReporting is set to ALWAYS, a callback is invoked to
						indicate that the operation has been completed. The callback
						is identified by NPF_F_WMAX_MAC_CPS_CALLBACK_ZONE_ADD. The identifier of newly created zone is stored
						in objResp and it has the syntax defined by NPF_F_wmaxMacCpsObjId_t.
						</descr>
						<retval name="NPF_NO_ERROR" brief="Operation completed successfully.">
						</retval>
						<retval name="NPF_F_WMAX_MAC_CPS_ERROR_NO_RES" brief="Resources exhausted.">
						</retval>
						<retval name="NPF_F_WMAX_MAC_CPS_ERROR_INVALID_PARAMS" brief="Invalid parameter.">
						</retval>
						<retval name="NPF_F_WMAX_MAC_CPS_ERROR_OBJ_EXISTS" brief="Permutation zone already exists.">
						</retval>
					</callback>
				</func>
			</section>
			<section name="Permutation Zone Deletion">
				<struct type="NPF_F_wmaxMacCpsZoneDelArgs_t" name="" brief="Permutation Zone Delete arguments">
					<descr>
					This data structure defines parameters of a Zone Delete FAPI call. (NOTE: BS ONLY).
					</descr>
					<field type="NPF_F_wmaxMacCpsObjId_t" name="id" brief="Zone ID of the zone to be deleted">
					</field>
				</struct>
				<func name="NPF_F_wmaxMacCpsZoneDel" type="NPF_error_t" brief="OFDMA Permutation Zone Delete" xdrid="RPC_WMAX_MAC_ZONE_DEL">
					<descr>
					This function allows for deletion of a Zone. (NOTE: BS ONLY).
					</descr>
					<param io="in" type="NPF_callbackHandle_t" name="callbackHandle" xdr="no">
						<descr>
						Identifies the callback function which should be called.
						</descr>
					</param>
					<param io="in" type="NPF_correlator_t" name="correlator" xdr="no">
						<descr>
						A unique application invocation context that will be
						supplied to the asynchronous completion callback routine.
						</descr>
					</param>
					<param io="in" type="NPF_errorReporting_t" name="errorReporting" xdr="no">
						<descr>
						Defines whether a callback will be called after
						completing the action requested by the function call.
						</descr>
					</param>
					<param io="in" type="NPF_FEHandle_t" name="feHandle" xdr="no">
						<descr>
						Identifies the forwarding element where the action will be executed.
						</descr>
					</param>
					<param io="in" class="vector" type="NPF_F_wmaxMacCpsZoneDelArgs_t" name="argsArray" xdr="yes">
						<descr>Array of structures containing argsNum entries. Each entry contains parameters for one request.</descr>
						<length type="NPF_uint32_t" name="argsNum" brief="Number of elements in the argsArray table.">
						</length>
					</param>
					<return>
						<descr>
						Error code indicating if function call was successful.
						</descr>
						<retval name="NPF_NO_ERROR">
							<descr>
							The operation is in progress.
							</descr>
						</retval>
						<retval name="NPF_E_BAD_CALLBACK_HANDLE">
							<descr>
							The callback handle is invalid.
						</descr>
						</retval>
						<retval name="NPF_E_UNKNOWN">
							<descr>
							The operation cannot be completed successfully because
							of problems encountered when handling the input parameters.
							</descr>
						</retval>
					</return>
					<callback>
						<descr>
						If errorReporting is set to ALWAYS, a callback is invoked to
						indicate that the operation has been completed. The callback
						is identified by NPF_F_WMAX_MAC_CPS_CALLBACK_ZONE_DEL.
						</descr>
						<retval name="NPF_NO_ERROR" brief="Operation completed successfully.">
						</retval>
						<retval name="NPF_F_WMAX_MAC_CPS_ERROR_NO_RES" brief="Resources exhausted.">
						</retval>
						<retval name="NPF_F_WMAX_MAC_CPS_ERROR_INVALID_PARAMS" brief="Invalid parameter.">
						</retval>
					</callback>
				</func>
			</section>
		</section>
		<section name="Sub-allocations in a Permutation Zone Management">
			<section name="Sub-allocation Creation">
				<struct type="NPF_F_wmaxMacCpsSubAllocAddArgs_t" name="" brief="Sub-allocation to a Zone Add arguments">
					<descr>
					This data structure defines parameters of a Zone Add FAPI call.
					</descr>
					<field name="id" type="NPF_F_wmaxMacCpsObjId_t" brief="Zone Id">
					</field>
					<field name="subAlloc" type="NPF_F_wmaxMacCpsOfdmaSubAlloc_t" brief="Sub-allocation definition">
					</field>
				</struct>
				<func name="NPF_F_wmaxMacCpsSubAllocAdd" type="NPF_error_t" brief="MAC Sub-allocation to a Zone Add" xdrid="RPC_WMAX_MAC_SUBALLOC_ADD">
					<descr>
					This function allows for creation of a Sub-allocation in a zone.
					</descr>
					<param io="in" type="NPF_callbackHandle_t" name="callbackHandle" xdr="no">
						<descr>
						Identifies the callback function which should be called.
						</descr>
					</param>
					<param io="in" type="NPF_correlator_t" name="correlator" xdr="no">
						<descr>
						A unique application invocation context that will be
						supplied to the asynchronous completion callback routine.
						</descr>
					</param>
					<param io="in" type="NPF_errorReporting_t" name="errorReporting" xdr="no">
						<descr>
						Defines whether a callback will be called after
						completing the action requested by the function call.
						</descr>
					</param>
					<param io="in" type="NPF_FEHandle_t" name="feHandle" xdr="no">
						<descr>
						Identifies the forwarding element where the action will be executed.
						</descr>
					</param>
					<param io="in" class="vector" type="NPF_F_wmaxMacCpsSubAllocAddArgs_t" name="argsArray" xdr="yes">
						<descr>Array of structures containing argsNum entries. Each entry contains parameters for one request.</descr>
						<length type="NPF_uint32_t" name="argsNum" brief="Number of elements in the argsArray table.">
						</length>
					</param>
					<return>
						<descr>
						Error code indicating if function call was successful.
						</descr>
						<retval name="NPF_NO_ERROR">
							<descr>
							The operation is in progress.
							</descr>
						</retval>
						<retval name="NPF_E_BAD_CALLBACK_HANDLE">
							<descr>
							The callback handle is invalid.
						</descr>
						</retval>
						<retval name="NPF_E_UNKNOWN">
							<descr>
							The operation cannot be completed successfully because
							of problems encountered when handling the input parameters.
							</descr>
						</retval>
					</return>
					<callback>
						<descr>
						If errorReporting is set to ALWAYS, a callback is invoked to
						indicate that the operation has been completed. The callback
						is identified by NPF_F_WMAX_MAC_CPS_CALLBACK_SUBALLOC_ADD. The identifier of newly created area is stored
						in objResp and it has the syntax defined by NPF_F_wmaxMacCpsObjId_t.
						</descr>
						<retval name="NPF_NO_ERROR" brief="Operation completed successfully.">
						</retval>
						<retval name="NPF_F_WMAX_MAC_CPS_ERROR_NO_RES" brief="Resources exhausted.">
						</retval>
						<retval name="NPF_F_WMAX_MAC_CPS_ERROR_INVALID_PARAMS" brief="Invalid parameter.">
						</retval>
						<retval name="NPF_F_WMAX_MAC_CPS_ERROR_OBJ_EXISTS" brief="Sub-allocation already exists.">
						</retval>
					</callback>
				</func>
			</section>
			<section name="Sub-allocation Deletion">
				<struct type="NPF_F_wmaxMacCpsSubAllocDelArgs_t" name="" brief="Sub-allocation Delete arguments">
					<descr>
					This data structure defines parameters of a Sub-allocation Delete FAPI call. (NOTE: BS ONLY).
					</descr>
					<field type="NPF_F_wmaxMacCpsObjId_t" name="id" brief="Sub-allocation ID of the area to be deleted">
					</field>
				</struct>
				<func name="NPF_F_wmaxMacCpsSubAllocDel" type="NPF_error_t" brief="Sub-allocation Delete" xdrid="RPC_WMAX_MAC_SUBALLOC_DEL">
					<descr>
					This function allows for deletion of a Specal Area. (NOTE: BS ONLY).
					</descr>
					<param io="in" type="NPF_callbackHandle_t" name="callbackHandle" xdr="no">
						<descr>
						Identifies the callback function which should be called.
						</descr>
					</param>
					<param io="in" type="NPF_correlator_t" name="correlator" xdr="no">
						<descr>
						A unique application invocation context that will be
						supplied to the asynchronous completion callback routine.
						</descr>
					</param>
					<param io="in" type="NPF_errorReporting_t" name="errorReporting" xdr="no">
						<descr>
						Defines whether a callback will be called after
						completing the action requested by the function call.
						</descr>
					</param>
					<param io="in" type="NPF_FEHandle_t" name="feHandle" xdr="no">
						<descr>
						Identifies the forwarding element where the action will be executed.
						</descr>
					</param>
					<param io="in" class="vector" type="NPF_F_wmaxMacCpsSubAllocDelArgs_t" name="argsArray" xdr="yes">
						<descr>Array of structures containing argsNum entries. Each entry contains parameters for one request.</descr>
						<length type="NPF_uint32_t" name="argsNum" brief="Number of elements in the argsArray table.">
						</length>
					</param>
					<return>
						<descr>
						Error code indicating if function call was successful.
						</descr>
						<retval name="NPF_NO_ERROR">
							<descr>
							The operation is in progress.
							</descr>
						</retval>
						<retval name="NPF_E_BAD_CALLBACK_HANDLE">
							<descr>
							The callback handle is invalid.
						</descr>
						</retval>
						<retval name="NPF_E_UNKNOWN">
							<descr>
							The operation cannot be completed successfully because
							of problems encountered when handling the input parameters.
							</descr>
						</retval>
					</return>
					<callback>
						<descr>
						If errorReporting is set to ALWAYS, a callback is invoked to
						indicate that the operation has been completed. The callback
						is identified by NPF_F_WMAX_MAC_CPS_CALLBACK_SPEC_ARE_DEL.
						</descr>
						<retval name="NPF_NO_ERROR" brief="Operation completed successfully.">
						</retval>
						<retval name="NPF_F_WMAX_MAC_CPS_ERROR_NO_RES" brief="Resources exhausted.">
						</retval>
						<retval name="NPF_F_WMAX_MAC_CPS_ERROR_INVALID_PARAMS" brief="Invalid parameter.">
						</retval>
					</callback>
				</func>
			</section>
		</section>
		<section name="Subscriber Station Management">
			<!--
			<descr>
				This section defines the interface for managing subscriber stations.
				A subscriber station object has to be created prior to creation of service flows being associated with this subscriber station.
			</descr>
      -->
			<section name="SS Adding">
				<enum brief="Types of SS" type="NPF_F_wmaxMacCpsSsType_t">
					<field name="NPF_F_WMAX_MAC_CPS_SS_TYPE_E0" value="0" brief="SS type E0.">
					</field>
					<field name="NPF_F_WMAX_MAC_CPS_SS_TYPE_E1" brief="SS type E1">
					</field>
				</enum>
				<struct type="NPF_F_wmaxMacCpsSsAddOfdmArgs_t" brief="SS Add OFDM Specific arguments">
					<field name="tbd" type="NPF_uint32_t" brief="TBD">
					</field>
				</struct>
				<struct type="NPF_F_wmaxMacCpsSsHarqParams_t" name="" brief="All SS HARQ related parameters">
					<field name="harqState" type="NPF_F_wmaxMacCpsState_t" brief="The state of the HARQ feature: ON or OFF"></field>
					<!-- HARQ DL specific parameters -->
					<field name="dlHarqBurstsPerFrame" type="NPF_uint32_t" brief="The maximum number of HARQ sub-bursts per DL sub-frame supported by the SS"></field>
					<field name="dlHarqBuffNum" type="NPF_uint32_t" brief="The number of HARQ buffers supported by the SS in the downlink direction"></field>
					<field name="dlHarqBuffSize" type="NPF_uint32_t" brief="The number of bytes that can be stored in one HARQ DL buffer on the SS side"></field>
					<field name="dlHarqBsAggregFlag" type="NPF_F_wmaxMacCpsState_t" brief="The flag specifying if the SS PHY supports aggregation of HARQ DL buffers"></field>
					<!-- HARQ UL specific parameters -->
					<field name="ulHarqBurstsPerFrame" type="NPF_uint32_t" brief="The maximum number of HARQ sub-bursts per UL sub-frame supported by the SS"></field>
					<field name="ulHarqBuffNum" type="NPF_uint32_t" brief="The number of HARQ buffers supported by the SS in the uplink direction"></field>
					<field name="ulHarqBuffSize" type="NPF_uint32_t" brief="The number of bytes that can be stored in one HARQ UL buffer on the SS side"></field>
					<field name="ulHarqBsAggregFlag" type="NPF_F_wmaxMacCpsState_t" brief="The flag specifying if the SS PHY supports aggregation of HARQ UL buffers"></field>
				</struct>
				<struct type="NPF_F_wmaxMacCpsSsAddOfdmaArgs_t" brief="SS Add OFDMA Specific arguments">
					<field name="dlZone" type="NPF_F_wmaxMacCpsObjId_t" brief="Identifies OFDMA DL zone the SS is assigned to.">
					</field>
					<field name="ulZone" type="NPF_F_wmaxMacCpsObjId_t" brief="Identifies OFDMA UL zone the SS is assigned to.">
					</field>
					<field name="submapForFirstZoneEnabled" type="NPF_F_wmaxMacCpsState_t" brief="Indicates if SS suports submap capability for first zone."></field>
					<field type="NPF_F_wmaxMacCpsOfdmaSoundingType_t" name="soundingType" brief="Type of the sounding supported by the SS">
					</field>
					<field name="dlMacDataPerFrame" type="NPF_uint32_t" brief="Maximum amount of MAC level data per DL frame (in bytes). A value of 0 means unlimited."></field>
					<field name="ulMacDataPerFrame" type="NPF_uint32_t" brief="Maximum amount of MAC level data per UL frame (in bytes). A value of 0 means unlimited."></field>
					<field name="snReportingBase" type="NPF_uint8_t" brief="SN reporting base value for Enhanced CQI channel. Default  equals 3dB."></field>
				</struct>
				<enum type="NPF_F_wmaxMacCpsMidambleType_t" brief="Type of a preamble and a midamble">
					<descr>
					This enum defines possible types of a preamble and a midamble to be used by a SS in UL transmission.
					</descr>
					<field name="NPF_F_WMAX_MAC_CPS_MIDAMBLE_NONE_PREAMBLE_SHORT" value="0" brief="Short preamble only">
					</field>
					<field name="NPF_F_WMAX_MAC_CPS_MIDAMBLE_NONE_PREAMBLE_LONG" brief="Long preamble only">
					</field>
					<field name="NPF_F_WMAX_MAC_CPS_MIDAMBLE_8_PREAMBLE_SHORT" brief="Midable after 8 symbols with short preamble">
					</field>
					<field name="NPF_F_WMAX_MAC_CPS_MIDAMBLE_16_PREAMBLE_SHORT" brief="Midamble after 16 symbols with short preamble">
					</field>
					<field name="NPF_F_WMAX_MAC_CPS_MIDAMBLE_32_PREAMBLE_SHORT" brief="Midamble after 32 symbols with short preamble">
					</field>
				</enum>
				<struct type="NPF_F_wmaxCpsActiveBurstProfileVertex_t" brief="Active Burst Profile Vertex Definition">
					<descr>
						This structure defines a vertex used to define range of acceptable CINR/RSSI values.
					</descr>
					<field name="cinr" type="NPF_int8_t" brief="">
						<descr>
						Specifies the CINR part of this vertex specification. 
						The valid values are from -10dB (coded as -20) to 53dB (coded as +106) and the granularity is 0.5dB.
						</descr>
					</field>
					<field name="rssi" type="NPF_uint8_t" brief="">
						<descr>
						Specifies the RSSI part of this vertex specification.
						The valid values are from -157.5dBm (coded as 0xFF) to -30dB (coded as 0x00) and the granularity is 0.5dB.
						</descr>
					</field>
				</struct>
				<struct type="NPF_F_wmaxMacCpsSsAddArgs_t" name="" brief="SS Add arguments">
					<descr>
					This data structure defines parameters of a SS Add FAPI call. (NOTE: BS ONLY).
					</descr>
					<field name="id" type="NPF_F_wmaxMacCpsObjId_t" brief="MAC Instance Id">
					</field>
					<field name="ssType" type="NPF_F_wmaxMacCpsSsType_t" brief="Specifies type of the SS">
					</field>
					<field name="uiuc" type="NPF_uint8_t" brief="Burst Profile Index of a burst profile to be used in communication with this SS in the uplink direction.">
					</field>
					<field name="ulRepetition" type="NPF_F_wmaxMacCpsRepetitionType_t" brief="Repetition to be used on UL.">
					</field>
					<vector name="ulAcceptableCinrRssiValues" type="NPF_F_wmaxCpsActiveBurstProfileVertex_t" brief="">
						<descr>
              List of all vertexes defining a convex polygon containing all acceptable CINR/RSSI values for uplink direction.
              Reception of signal with unspecified CINR/RSSI values triggers notification to the Control Plane.
            </descr>
						<length name="ulAcceptableCinrRssiValuesNum" type="NPF_uint32_t" brief="Number of elements in the 'ulAcceptableCinrRssiValues' table"></length>
					</vector>
					<field name="diuc" type="NPF_uint8_t" brief="Burst Profile Index of a burst profile to be used in communication with this SS in the downlink direction.">
					</field>
					<field name="dlRepetition" type="NPF_F_wmaxMacCpsRepetitionType_t" brief="Repetition to be used on DL.">
					</field>
					<vector name="dlAcceptableCinrRssiValues" type="NPF_F_wmaxCpsActiveBurstProfileVertex_t" brief="">
						<descr>
              List of all vertexes defining a convex polygon containing all acceptable CINR/RSSI values for downlink direction.
              Reception of signal with unspecified CINR/RSSI values triggers notification to the Control Plane.
            </descr>
						<length name="dlAcceptableCinrRssiValuesNum" type="NPF_uint32_t" brief="Number of elements in the 'dlAcceptableCinrRssiValues' table"></length>
					</vector>
					<field name="midamble" type="NPF_F_wmaxMacCpsMidambleType_t" brief="Type of a preamble and a midamble to be used by the SS in uplink transmissions">
					</field>
					<selectunion type="cc" name="phySpec">
						<selectfield type="NPF_F_wmaxMacCpsPhyType_t" name="phyType">
						</selectfield>
						<field name="ofdm" type="NPF_F_wmaxMacCpsSsAddOfdmArgs_t">
							<selector>NPF_F_WMAX_MAC_CPS_PHY_TYPE_OFDM</selector>
						</field>
						<field name="ofdma" type="NPF_F_wmaxMacCpsSsAddOfdmaArgs_t">
							<selector>NPF_F_WMAX_MAC_CPS_PHY_TYPE_OFDMA</selector>
						</field>
					</selectunion>
				</struct>
				<func name="NPF_F_wmaxMacCpsSsAdd" type="NPF_error_t" brief="SS Add" xdrid="RPC_WMAX_MAC_SS_ADD">
					<descr>
					This function allows for creation of a Subscriber Station - data structure containing its Data Plane MAC related configuration. (NOTE: BS ONLY).
					</descr>
					<param io="in" type="NPF_callbackHandle_t" name="callbackHandle" xdr="no">
						<descr>
						Identifies the callback function which should be called.
						</descr>
					</param>
					<param io="in" type="NPF_correlator_t" name="correlator" xdr="no">
						<descr>
						A unique application invocation context that will be
						supplied to the asynchronous completion callback routine.
						</descr>
					</param>
					<param io="in" type="NPF_errorReporting_t" name="errorReporting" xdr="no">
						<descr>
						Defines whether a callback will be called after
						completing the action requested by the function call.
						</descr>
					</param>
					<param io="in" type="NPF_FEHandle_t" name="feHandle" xdr="no">
						<descr>
						Identifies the forwarding element where the action will be executed.
						</descr>
					</param>
					<param io="in" class="vector" type="NPF_F_wmaxMacCpsSsAddArgs_t" name="argsArray" xdr="yes">
						<descr>Array of structures containing argsNum entries. Each entry contains parameters for one request.</descr>
						<length type="NPF_uint32_t" name="argsNum" brief="Number of elements in the argsArray table.">
						</length>
					</param>
					<return>
						<descr>
						Error code indicating if function call was successful.
						</descr>
						<retval name="NPF_NO_ERROR">
							<descr>
							The operation is in progress.
							</descr>
						</retval>
						<retval name="NPF_E_BAD_CALLBACK_HANDLE">
							<descr>
							The callback handle is invalid.
						</descr>
						</retval>
						<retval name="NPF_E_UNKNOWN">
							<descr>
							The operation cannot be completed successfully because
							of problems encountered when handling the input parameters.
							</descr>
						</retval>
					</return>
					<callback>
						<descr>
						If errorReporting is set to ALWAYS, a callback is invoked to
						indicate that the operation has been completed. The callback
						is identified by NPF_F_WMAX_MAC_CPS_CALLBACK_SS_ADD.
						</descr>
						<retval name="NPF_NO_ERROR" brief="Operation completed successfully.">
						</retval>
						<retval name="NPF_F_WMAX_MAC_CPS_ERROR_NO_RES" brief="Resources exhausted.">
						</retval>
						<retval name="NPF_F_WMAX_MAC_CPS_ERROR_INVALID_PARAMS" brief="Invalid parameter.">
						</retval>
					</callback>
				</func>
			</section>
			<section name="Changing SS configuration parameters">
				<struct type="NPF_F_wmaxMacCpsSsChangeCfgArgs_t" name="" brief="SS Change configuration arguments">
					<descr>
					This data structure defines parameters of a SS Change Configuration FAPI call.
					</descr>
					<field name="id" type="NPF_F_wmaxMacCpsObjId_t" brief="SS Id">
					</field>
					<field name="ssrtg" type="NPF_uint16_t" brief="Receive-Transmit Gap required by the SS specified in symbols">
					</field>
					<field name="ssttg" type="NPF_uint16_t" brief="Transmit-Receive Gap required by the SS specified in symbols">
					</field>
					<field name="hdFlag" type="NPF_F_wmaxMacCpsState_t" brief="Specifies if the SS is Half-Duplex (flag set to TRUE) or Full-Duplex (flag set to FALSE)">
					</field>
					<field name="ssType" type="NPF_F_wmaxMacCpsSsType_t" brief="Specifies type of the SS">
					</field>
					<field name="midamble" type="NPF_F_wmaxMacCpsMidambleType_t" brief="Type of a preamble and a midamble to be used by the SS in uplink transmissions">
					</field>
					<selectunion type="cd" name="phySpec">
						<selectfield type="NPF_F_wmaxMacCpsPhyType_t" name="phyType">
						</selectfield>
						<field name="ofdm" type="NPF_F_wmaxMacCpsSsAddOfdmArgs_t">
							<selector>NPF_F_WMAX_MAC_CPS_PHY_TYPE_OFDM</selector>
						</field>
						<field name="ofdma" type="NPF_F_wmaxMacCpsSsAddOfdmaArgs_t">
							<selector>NPF_F_WMAX_MAC_CPS_PHY_TYPE_OFDMA</selector>
						</field>
					</selectunion>
					<field name="harqParams" type="NPF_F_wmaxMacCpsSsHarqParams_t" brief="All SS HARQ related parameters (OFDMA only)">
					</field>
				</struct>
				<func name="NPF_F_wmaxMacCpsSsChangeCfg" type="NPF_error_t" brief="SS Change" xdrid="RPC_WMAX_MAC_SS_CHG_CFG">
					<descr>
					This function allows for change of SS related parameters.
					</descr>
					<param io="in" type="NPF_callbackHandle_t" name="callbackHandle" xdr="no">
						<descr>
						Identifies the callback function which should be called.
						</descr>
					</param>
					<param io="in" type="NPF_correlator_t" name="correlator" xdr="no">
						<descr>
						A unique application invocation context that will be
						supplied to the asynchronous completion callback routine.
						</descr>
					</param>
					<param io="in" type="NPF_errorReporting_t" name="errorReporting" xdr="no">
						<descr>
						Defines whether a callback will be called after
						completing the action requested by the function call.
						</descr>
					</param>
					<param io="in" type="NPF_FEHandle_t" name="feHandle" xdr="no">
						<descr>
						Identifies the forwarding element where the action will be executed.
						</descr>
					</param>
					<param io="in" class="vector" type="NPF_F_wmaxMacCpsSsChangeCfgArgs_t" name="argsArray" xdr="yes">
						<descr>Array of structures containing argsNum entries. Each entry contains parameters for one request.</descr>
						<length type="NPF_uint32_t" name="argsNum" brief="Number of elements in the argsArray table.">
						</length>
					</param>
					<return>
						<descr>
						Error code indicating if function call was successful.
						</descr>
						<retval name="NPF_NO_ERROR">
							<descr>
							The operation is in progress.
							</descr>
						</retval>
						<retval name="NPF_E_BAD_CALLBACK_HANDLE">
							<descr>
							The callback handle is invalid.
						</descr>
						</retval>
						<retval name="NPF_E_UNKNOWN">
							<descr>
							The operation cannot be completed successfully because
							of problems encountered when handling the input parameters.
							</descr>
						</retval>
					</return>
					<callback>
						<descr>
						If errorReporting is set to ALWAYS, a callback is invoked to
						indicate that the operation has been completed. The callback
						is identified by NPF_F_WMAX_MAC_CPS_CALLBACK_SS_CHG_CFG.
						</descr>
						<retval name="NPF_NO_ERROR" brief="Operation completed successfully.">
						</retval>
						<retval name="NPF_F_WMAX_MAC_CPS_ERROR_NO_RES" brief="Resources exhausted.">
						</retval>
						<retval name="NPF_F_WMAX_MAC_CPS_ERROR_INVALID_PARAMS" brief="Invalid parameter.">
						</retval>
					</callback>
				</func>
			</section>
			<section name="Changing SS run-time parameters">
				<struct type="NPF_F_wmaxMacCpsSsChangeRunTimeArgs_t" name="" brief="SS Change Run-timearguments">
					<descr>
            This data structure defines parameters of a SS Change Run-Time FAPI call.
          </descr>
					<field name="id" type="NPF_F_wmaxMacCpsObjId_t" brief="SS Id">
					</field>
					<field name="currTxPwr" type="NPF_uint16_t" brief="Current TX power.">
					</field>
				</struct>
				<func name="NPF_F_wmaxMacCpsSsChangeRunTime" type="NPF_error_t" brief="SS Change Run-Time parameters" xdrid="RPC_WMAX_MAC_SS_CHG_RT">
					<descr>
            This function allows for change of SS related run-time parameters.
          </descr>
					<param io="in" type="NPF_callbackHandle_t" name="callbackHandle" xdr="no">
						<descr>
              Identifies the callback function which should be called.
            </descr>
					</param>
					<param io="in" type="NPF_correlator_t" name="correlator" xdr="no">
						<descr>
              A unique application invocation context that will be
              supplied to the asynchronous completion callback routine.
            </descr>
					</param>
					<param io="in" type="NPF_errorReporting_t" name="errorReporting" xdr="no">
						<descr>
              Defines whether a callback will be called after
              completing the action requested by the function call.
            </descr>
					</param>
					<param io="in" type="NPF_FEHandle_t" name="feHandle" xdr="no">
						<descr>
              Identifies the forwarding element where the action will be executed.
            </descr>
					</param>
					<param io="in" class="vector" type="NPF_F_wmaxMacCpsSsChangeRunTimeArgs_t" name="argsArray" xdr="yes">
						<descr>Array of structures containing argsNum entries. Each entry contains parameters for one request.</descr>
						<length type="NPF_uint32_t" name="argsNum" brief="Number of elements in the argsArray table.">
						</length>
					</param>
					<return>
						<descr>
              Error code indicating if function call was successful.
            </descr>
						<retval name="NPF_NO_ERROR">
							<descr>
                The operation is in progress.
              </descr>
						</retval>
						<retval name="NPF_E_BAD_CALLBACK_HANDLE">
							<descr>
                The callback handle is invalid.
              </descr>
						</retval>
						<retval name="NPF_E_UNKNOWN">
							<descr>
                The operation cannot be completed successfully because
                of problems encountered when handling the input parameters.
              </descr>
						</retval>
					</return>
					<callback>
						<descr>
              If errorReporting is set to ALWAYS, a callback is invoked to
              indicate that the operation has been completed. The callback
              is identified by NPF_F_WMAX_MAC_CPS_CALLBACK_SS_CHG_RT.
            </descr>
						<retval name="NPF_NO_ERROR" brief="Operation completed successfully.">
						</retval>
						<retval name="NPF_F_WMAX_MAC_CPS_ERROR_NO_RES" brief="Resources exhausted.">
						</retval>
						<retval name="NPF_F_WMAX_MAC_CPS_ERROR_INVALID_PARAMS" brief="Invalid parameter.">
						</retval>
					</callback>
				</func>
				<struct type="NPF_F_wmaxMacCpsSsChangeZoneOfdmArgs_t" brief="SS to Zone Assignment OFDM Specific arguments">
					<field name="tbd" type="NPF_uint32_t" brief="TBD">
					</field>
				</struct>
				<struct type="NPF_F_wmaxMacCpsSsChangeZoneOfdmaArgs_t" brief="SS to Zone Assignment OFDMA Specific arguments">
					<field name="dlZone" type="NPF_F_wmaxMacCpsObjId_t" brief="Identifies OFDMA DL zone the SS should be assigned to.">
					</field>
					<field name="ulZone" type="NPF_F_wmaxMacCpsObjId_t" brief="Identifies OFDMA UL zone the SS should be assigned to.">
					</field>
				</struct>
				<struct type="NPF_F_wmaxMacCpsSsChangeZoneArgs_t" name="" brief="SS to Zone Assignment Change arguments">
					<descr>
            This data structure defines parameters of a SS to Zone Assignment Change FAPI call.
          </descr>
					<field name="id" type="NPF_F_wmaxMacCpsObjId_t" brief="SS Id">
					</field>
					<selectunion type="dd" name="phySpec">
						<selectfield type="NPF_F_wmaxMacCpsPhyType_t" name="phyType">
						</selectfield>
						<field name="ofdm" type="NPF_F_wmaxMacCpsSsChangeZoneOfdmArgs_t">
							<selector>NPF_F_WMAX_MAC_CPS_PHY_TYPE_OFDM</selector>
						</field>
						<field name="ofdma" type="NPF_F_wmaxMacCpsSsChangeZoneOfdmaArgs_t">
							<selector>NPF_F_WMAX_MAC_CPS_PHY_TYPE_OFDMA</selector>
						</field>
					</selectunion>
				</struct>
				<func name="NPF_F_wmaxMacCpsSsChangeZone" type="NPF_error_t" brief="SS to Zone Assignment Change" xdrid="RPC_WMAX_MAC_SS_CHG_ZONE">
					<descr>
            This function allows for change of SS to a Zone Assignment.
          </descr>
					<param io="in" type="NPF_callbackHandle_t" name="callbackHandle" xdr="no">
						<descr>
              Identifies the callback function which should be called.
            </descr>
					</param>
					<param io="in" type="NPF_correlator_t" name="correlator" xdr="no">
						<descr>
              A unique application invocation context that will be
              supplied to the asynchronous completion callback routine.
            </descr>
					</param>
					<param io="in" type="NPF_errorReporting_t" name="errorReporting" xdr="no">
						<descr>
              Defines whether a callback will be called after
              completing the action requested by the function call.
            </descr>
					</param>
					<param io="in" type="NPF_FEHandle_t" name="feHandle" xdr="no">
						<descr>
              Identifies the forwarding element where the action will be executed.
            </descr>
					</param>
					<param io="in" class="vector" type="NPF_F_wmaxMacCpsSsChangeZoneArgs_t" name="argsArray" xdr="yes">
						<descr>Array of structures containing argsNum entries. Each entry contains parameters for one request.</descr>
						<length type="NPF_uint32_t" name="argsNum" brief="Number of elements in the argsArray table.">
						</length>
					</param>
					<return>
						<descr>
              Error code indicating if function call was successful.
            </descr>
						<retval name="NPF_NO_ERROR">
							<descr>
                The operation is in progress.
              </descr>
						</retval>
						<retval name="NPF_E_BAD_CALLBACK_HANDLE">
							<descr>
                The callback handle is invalid.
              </descr>
						</retval>
						<retval name="NPF_E_UNKNOWN">
							<descr>
                The operation cannot be completed successfully because
                of problems encountered when handling the input parameters.
              </descr>
						</retval>
					</return>
					<callback>
						<descr>
              If errorReporting is set to ALWAYS, a callback is invoked to
              indicate that the operation has been completed. The callback
              is identified by NPF_F_WMAX_MAC_CPS_CALLBACK_SS_CHG_ZONE.
            </descr>
						<retval name="NPF_NO_ERROR" brief="Operation completed successfully.">
						</retval>
						<retval name="NPF_F_WMAX_MAC_CPS_ERROR_NO_RES" brief="Resources exhausted.">
						</retval>
						<retval name="NPF_F_WMAX_MAC_CPS_ERROR_INVALID_PARAMS" brief="Invalid parameter.">
						</retval>
					</callback>
				</func>
			</section>
			<section name="SS Enabling/disabling">
				<struct type="NPF_F_wmaxMacCpsSsDisableArgs_t" name="" brief="SS Disable arguments">
					<descr>
					This data structure defines parameters of a SS Disable FAPI call. (NOTE: BS ONLY).
					</descr>
					<field type="NPF_F_wmaxMacCpsObjId_t" name="id" brief="SS ID of the SS to be disabled">
					</field>
					<field type="NPF_boolean_t" name="disableDl" brief="When true - disable DL direction for this SS">
					</field>
					<field type="NPF_boolean_t" name="disableUl" brief="When true - disable UL direction for this SS">
					</field>
				</struct>
				<struct type="NPF_F_wmaxMacCpsSsEnableArgs_t" name="" brief="SS Enable arguments">
					<descr>
					This data structure defines parameters of a SS Enable FAPI call. (NOTE: BS ONLY).
					</descr>
					<field type="NPF_F_wmaxMacCpsObjId_t" name="id" brief="SS ID of the SS to be disabled">
					</field>
					<field type="NPF_uint8_t" name="delay" brief="Delay (in ms) between function call and enabling the scheduler. Zero means that scheduling may start immediatly.">
					</field>
					<field type="NPF_boolean_t" name="enableDl" brief="When true - enable DL direction for this SS">
					</field>
					<field type="NPF_boolean_t" name="enableUl" brief="When true - enable UL direction for this SS">
					</field>
				</struct>
				<func name="NPF_F_wmaxMacCpsSsDisable" type="NPF_error_t" brief="SS Disable" xdrid="RPC_WMAX_MAC_SS_DISABLE">
					<descr>
					This function allows to disable scheduling for a given Subscriber Station. It should be used when the subscriber is created
					on the target BS during HO. In such case the scheduling for this subscriber should be suspended until the real subscriber 
					performs the network re-entry.(NOTE: BS ONLY).
					</descr>
					<param io="in" type="NPF_callbackHandle_t" name="callbackHandle" xdr="no">
						<descr>
						Identifies the callback function which should be called.
						</descr>
					</param>
					<param io="in" type="NPF_correlator_t" name="correlator" xdr="no">
						<descr>
						A unique application invocation context that will be
						supplied to the asynchronous completion callback routine.
						</descr>
					</param>
					<param io="in" type="NPF_errorReporting_t" name="errorReporting" xdr="no">
						<descr>
						Defines whether a callback will be called after
						completing the action requested by the function call.
						</descr>
					</param>
					<param io="in" type="NPF_FEHandle_t" name="feHandle" xdr="no">
						<descr>
						Identifies the forwarding element where the action will be executed.
						</descr>
					</param>
					<param io="in" class="vector" type="NPF_F_wmaxMacCpsSsDisableArgs_t" name="argsArray" xdr="yes">
						<descr>Array of structures containing argsNum entries. Each entry contains parameters for one request.</descr>
						<length type="NPF_uint32_t" name="argsNum" brief="Number of elements in the argsArray table.">
						</length>
					</param>
					<return>
						<descr>
						Error code indicating if function call was successful.
						</descr>
						<retval name="NPF_NO_ERROR">
							<descr>
							The operation is in progress.
							</descr>
						</retval>
						<retval name="NPF_E_BAD_CALLBACK_HANDLE">
							<descr>
							The callback handle is invalid.
						</descr>
						</retval>
						<retval name="NPF_E_UNKNOWN">
							<descr>
							The operation cannot be completed successfully because
							of problems encountered when handling the input parameters.
							</descr>
						</retval>
					</return>
					<callback>
						<descr>
						If errorReporting is set to ALWAYS, a callback is invoked to
						indicate that the operation has been completed. The callback
						is identified by NPF_F_WMAX_MAC_CPS_CALLBACK_SS_DISABLE.
						</descr>
						<retval name="NPF_NO_ERROR" brief="Operation completed successfully.">
						</retval>
						<retval name="NPF_F_WMAX_MAC_CPS_ERROR_INVALID_PARAMS" brief="Invalid parameter.">
						</retval>
					</callback>
				</func>
				<func name="NPF_F_wmaxMacCpsSsEnable" type="NPF_error_t" brief="SS Enable" xdrid="RPC_WMAX_MAC_SS_ENABLE">
					<descr>
					This function allows to enable scheduling for a given Subscriber Station. It should be used when the subscriber is created
					on the target BS during HO. In such case the scheduling is initialy suspended and should be activated 
					when the real subscriber performs the network re-entry. A delay time specified in argument structure allows to 
					suspend traffic until the subscriber finish processing signaling messages and is ready for the traffic (NOTE: BS ONLY).
					</descr>
					<param io="in" type="NPF_callbackHandle_t" name="callbackHandle" xdr="no">
						<descr>
						Identifies the callback function which should be called.
						</descr>
					</param>
					<param io="in" type="NPF_correlator_t" name="correlator" xdr="no">
						<descr>
						A unique application invocation context that will be
						supplied to the asynchronous completion callback routine.
						</descr>
					</param>
					<param io="in" type="NPF_errorReporting_t" name="errorReporting" xdr="no">
						<descr>
						Defines whether a callback will be called after
						completing the action requested by the function call.
						</descr>
					</param>
					<param io="in" type="NPF_FEHandle_t" name="feHandle" xdr="no">
						<descr>
						Identifies the forwarding element where the action will be executed.
						</descr>
					</param>
					<param io="in" class="vector" type="NPF_F_wmaxMacCpsSsEnableArgs_t" name="argsArray" xdr="yes">
						<descr>Array of structures containing argsNum entries. Each entry contains parameters for one request.</descr>
						<length type="NPF_uint32_t" name="argsNum" brief="Number of elements in the argsArray table.">
						</length>
					</param>
					<return>
						<descr>
						Error code indicating if function call was successful.
						</descr>
						<retval name="NPF_NO_ERROR">
							<descr>
							The operation is in progress.
							</descr>
						</retval>
						<retval name="NPF_E_BAD_CALLBACK_HANDLE">
							<descr>
							The callback handle is invalid.
						</descr>
						</retval>
						<retval name="NPF_E_UNKNOWN">
							<descr>
							The operation cannot be completed successfully because
							of problems encountered when handling the input parameters.
							</descr>
						</retval>
					</return>
					<callback>
						<descr>
						If errorReporting is set to ALWAYS, a callback is invoked to
						indicate that the operation has been completed. The callback
						is identified by NPF_F_WMAX_MAC_CPS_CALLBACK_SS_ENABLE.
						</descr>
						<retval name="NPF_NO_ERROR" brief="Operation completed successfully.">
						</retval>
						<retval name="NPF_F_WMAX_MAC_CPS_ERROR_INVALID_PARAMS" brief="Invalid parameter.">
						</retval>
					</callback>
				</func>
			</section>
			<section name="SS Deletion">
				<struct type="NPF_F_wmaxMacCpsSsDelArgs_t" name="" brief="SS Delete arguments">
					<descr>
					This data structure defines parameters of a SS Delete FAPI call. (NOTE: BS ONLY).
					</descr>
					<field type="NPF_F_wmaxMacCpsObjId_t" name="id" brief="SS ID of the SS to be deleted">
					</field>
				</struct>
				<func name="NPF_F_wmaxMacCpsSsDel" type="NPF_error_t" brief="SS Delete" xdrid="RPC_WMAX_MAC_SS_DEL">
					<descr>
					This function allows for deletion of a Subscriber Station - a Data Plane MAC SS related data structure. (NOTE: BS ONLY).
					</descr>
					<param io="in" type="NPF_callbackHandle_t" name="callbackHandle" xdr="no">
						<descr>
						Identifies the callback function which should be called.
						</descr>
					</param>
					<param io="in" type="NPF_correlator_t" name="correlator" xdr="no">
						<descr>
						A unique application invocation context that will be
						supplied to the asynchronous completion callback routine.
						</descr>
					</param>
					<param io="in" type="NPF_errorReporting_t" name="errorReporting" xdr="no">
						<descr>
						Defines whether a callback will be called after
						completing the action requested by the function call.
						</descr>
					</param>
					<param io="in" type="NPF_FEHandle_t" name="feHandle" xdr="no">
						<descr>
						Identifies the forwarding element where the action will be executed.
						</descr>
					</param>
					<param io="in" class="vector" type="NPF_F_wmaxMacCpsSsDelArgs_t" name="argsArray" xdr="yes">
						<descr>Array of structures containing argsNum entries. Each entry contains parameters for one request.</descr>
						<length type="NPF_uint32_t" name="argsNum" brief="Number of elements in the argsArray table.">
						</length>
					</param>
					<return>
						<descr>
						Error code indicating if function call was successful.
						</descr>
						<retval name="NPF_NO_ERROR">
							<descr>
							The operation is in progress.
							</descr>
						</retval>
						<retval name="NPF_E_BAD_CALLBACK_HANDLE">
							<descr>
							The callback handle is invalid.
						</descr>
						</retval>
						<retval name="NPF_E_UNKNOWN">
							<descr>
							The operation cannot be completed successfully because
							of problems encountered when handling the input parameters.
							</descr>
						</retval>
					</return>
					<callback>
						<descr>
						If errorReporting is set to ALWAYS, a callback is invoked to
						indicate that the operation has been completed. The callback
						is identified by NPF_F_WMAX_MAC_CPS_CALLBACK_SS_DEL.
						</descr>
						<retval name="NPF_NO_ERROR" brief="Operation completed successfully.">
						</retval>
						<retval name="NPF_F_WMAX_MAC_CPS_ERROR_NO_RES" brief="Resources exhausted.">
						</retval>
						<retval name="NPF_F_WMAX_MAC_CPS_ERROR_INVALID_PARAMS" brief="Invalid parameter.">
						</retval>
					</callback>
				</func>
			</section>
			<section name="Allocate a CQI Channel to SS">
				<!-- ========== PARAMETERS ============ -->
				<enum type="NPF_F_wmaxMacCpsRepetitionNum_t" name="e1">
					<descr>
          Supported number of repetitions of CQI channel allocation.
        </descr>
					<field name="NPF_F_WMAX_MAC_CPS_CQI_REPEAT_1_TIME" value="0" brief="The CQI channel allocation will be given 1 time"></field>
					<field name="NPF_F_WMAX_MAC_CPS_CQI_REPEAT_20_TIMES" brief="The CQI channel allocation will be given 20 times"></field>
					<field name="NPF_F_WMAX_MAC_CPS_CQI_REPEAT_40_TIMES" brief="The CQI channel allocation will be given 40 times"></field>
					<field name="NPF_F_WMAX_MAC_CPS_CQI_REPEAT_80_TIMES" brief="The CQI channel allocation will be given 80 times"></field>
					<field name="NPF_F_WMAX_MAC_CPS_CQI_REPEAT_160_TIMES" brief="The CQI channel allocation will be given 160 times"></field>
					<field name="NPF_F_WMAX_MAC_CPS_CQI_REPEAT_320_TIMES" brief="The CQI channel allocation will be given 320 times"></field>
					<field name="NPF_F_WMAX_MAC_CPS_CQI_REPEAT_640_TIMES" brief="The CQI channel allocation will be given 640 times"></field>
					<field name="NPF_F_WMAX_MAC_CPS_CQI_REPEAT_FOREVER" brief="The CQI channel allocation will be given infinite number of times"></field>
				</enum>
				<struct type="NPF_F_wmaxMacCpsSsSetCqichArgs_t" brief="Allocate a CQICH arguments">
					<descr>The arguments of the NPF_F_wmaxMacCpsSsSetCqich function</descr>
					<field name="ssId" type="NPF_F_wmaxMacCpsObjId_t" brief="SSID of the SS the CQI channel has been assigned to."></field>
					<field name="subAllocId" type="NPF_F_wmaxMacCpsObjId_t" brief="A handle of the Fast Feedback (UIUC=0) region, the SS is to be assigned"></field>
					<field name="slotOffset" type="NPF_uint8_t" brief="The index (offset from the beginning of the UIUC=0 region) of the slot assigned to this CQI channel"></field>
					<field name="freqBitmap" type="NPF_uint8_t">
						<descr>
            A bitmap showing the frequency of the slot. Each bit set to 1 means that the slot is assigned to the SS in
            the frame corresponding to this bit. The MSB represents frame whose frame number last 3 bits is equal to 000,
            while the LSB represents the frame whose frame number last 3 bits is equal to 111.
            For example, a value 0b01010101 means that the slot belongs to a frequency group of [every 2nd frame] starting from
            the frame whose last 3 bits of the frame number is equal to 001 and the slot will be present in frames: 001, 011, 101, and 111.
          </descr>
					</field>
					<selectunion type="NPF_F_wmaxMacCpsUnion3_t" name="repSpecParam" brief="The parameters depending on the number of repetitions">
						<selectfield name="repeat" type="NPF_F_wmaxMacCpsRepetitionNum_t">
							<descr>
              Required number of allocations the SS is to receive in CQICH. It can be one of the following:
            </descr>
							<descr>
              - 1 time;
            </descr>
							<descr>
              -	20 times;
            </descr>
							<descr>
              -	40 times;
            </descr>
							<descr>
              -	80 times;
            </descr>
							<descr>
              -	160 times;
            </descr>
							<descr>
              -	320 times;
            </descr>
							<descr>
              -	640 times;
            </descr>
							<descr>
              -	forever
            </descr>
						</selectfield>
						<field name="subHeaderHandle" type="NPF_uint32_t" brief="A handle to the sub-header to be sent to the SS notifying about the allocation">
							<selector>NPF_F_WMAX_MAC_CPS_CQI_REPEAT_1_TIME</selector>
						</field>
						<field name="ulmapIeHandle" type="NPF_uint32_t" brief="A handle to the information element to be added to the UL-MAP">
							<selector>NPF_F_WMAX_MAC_CPS_CQI_REPEAT_20_TIMES</selector>
							<selector>NPF_F_WMAX_MAC_CPS_CQI_REPEAT_40_TIMES</selector>
							<selector>NPF_F_WMAX_MAC_CPS_CQI_REPEAT_80_TIMES</selector>
							<selector>NPF_F_WMAX_MAC_CPS_CQI_REPEAT_160_TIMES</selector>
							<selector>NPF_F_WMAX_MAC_CPS_CQI_REPEAT_320_TIMES</selector>
							<selector>NPF_F_WMAX_MAC_CPS_CQI_REPEAT_640_TIMES</selector>
							<selector>NPF_F_WMAX_MAC_CPS_CQI_REPEAT_FOREVER</selector>
						</field>
					</selectunion>
					<field name="advance" type="NPF_uint8_t" brief="How many frames in advance the allocation information should be sent (max 7)"></field>
					<field name="rxvIeHandle" type="NPF_uint32_t" brief="A handle to the information element to be added to the RXVECTOR"></field>
				</struct>
				<!-- ========== THE FUNCTION ========== -->
				<func name="NPF_F_wmaxMacCpsSsSetCqich" type="NPF_error_t" brief="Allocate a CQI Channel to a SS" xdrid="RPC_WMAX_MAC_CQI_SET">
					<descr>
          This function allows for assign a SS to a CQI Channel. (NOTE: BS ONLY).
        </descr>
					<param io="in" type="NPF_callbackHandle_t" name="callbackHandle" xdr="no">
						<descr>
            Identifies the callback function which should be called.
          </descr>
					</param>
					<param io="in" type="NPF_correlator_t" name="correlator" xdr="no">
						<descr>
            A unique application invocation context that will be
            supplied to the asynchronous completion callback routine.
          </descr>
					</param>
					<param io="in" type="NPF_errorReporting_t" name="errorReporting" xdr="no">
						<descr>
            Defines whether a callback will be called after
            completing the action requested by the function call.
          </descr>
					</param>
					<param io="in" type="NPF_FEHandle_t" name="feHandle" xdr="no">
						<descr>
            Identifies the forwarding element where the action will be executed.
          </descr>
					</param>
					<param io="in" class="vector" type="NPF_F_wmaxMacCpsSsSetCqichArgs_t" name="argsArray" xdr="yes">
						<descr>Array of structures containing argsNum entries. Each entry contains parameters for one request.</descr>
						<length type="NPF_uint32_t" name="argsNum" brief="Number of elements in the argsArray table.">
						</length>
					</param>
					<return>
						<descr>
            Error code indicating if function call was successful.
          </descr>
						<retval name="NPF_NO_ERROR">
							<descr>
              The operation is in progress.
            </descr>
						</retval>
						<retval name="NPF_E_BAD_CALLBACK_HANDLE">
							<descr>
              The callback handle is invalid.
            </descr>
						</retval>
						<retval name="NPF_E_UNKNOWN">
							<descr>
              The operation cannot be completed successfully because
              of problems encountered when handling the input parameters.
            </descr>
						</retval>
					</return>
					<callback>
						<descr>
            If errorReporting is set to ALWAYS, a callback is invoked to
            indicate that the operation has been completed. The callback
            is identified by NPF_F_WMAX_MAC_CPS_CALLBACK_CQI_SET.
          </descr>
						<retval name="NPF_NO_ERROR" brief="Operation completed successfully.">
						</retval>
						<retval name="NPF_F_WMAX_MAC_CPS_ERROR_NO_RES" brief="Resources exhausted.">
						</retval>
						<retval name="NPF_F_WMAX_MAC_CPS_ERROR_INVALID_PARAMS" brief="Invalid parameter.">
						</retval>
					</callback>
				</func>
			</section>
			<section name="De-allocate a CQI Channel from SS">
				<!-- ========== PARAMETERS ============ -->
				<struct type="NPF_F_wmaxMacCpsSsDelCqichArgs_t" brief="De-allocate a CQICH arguments">
					<descr>The arguments of the NPF_F_wmaxMacCpsSsDelCqich function</descr>
					<field name="ssId" type="NPF_F_wmaxMacCpsObjId_t" brief="SSID of the SS the CQI channel has been assigned to."></field>
					<field name="subAllocId" type="NPF_F_wmaxMacCpsObjId_t" brief="A handle of the Fast Feedback (UIUC=0) region, the SS is assigned to"></field>
					<field name="slotOffset" type="NPF_uint8_t" brief="The index (offset from the beginning of the UIUC=0 region) of the slot assigned to this CQI channel"></field>
					<field name="cqichId" type="NPF_F_wmaxMacCpsObjId_t" brief="CQI channel ID to be de-allocated"></field>
				</struct>
				<!-- ========== THE FUNCTION ========== -->
				<func name="NPF_F_wmaxMacCpsSsDelCqich" type="NPF_error_t" brief="De-allocate a CQI Channel from a SS" xdrid="RPC_WMAX_MAC_CQI_DEL">
					<descr>
          This function allows for remove the association of a SS with a CQI Channel. (NOTE: BS ONLY).
        </descr>
					<param io="in" type="NPF_callbackHandle_t" name="callbackHandle" xdr="no">
						<descr>
            Identifies the callback function which should be called.
          </descr>
					</param>
					<param io="in" type="NPF_correlator_t" name="correlator" xdr="no">
						<descr>
            A unique application invocation context that will be
            supplied to the asynchronous completion callback routine.
          </descr>
					</param>
					<param io="in" type="NPF_errorReporting_t" name="errorReporting" xdr="no">
						<descr>
            Defines whether a callback will be called after
            completing the action requested by the function call.
          </descr>
					</param>
					<param io="in" type="NPF_FEHandle_t" name="feHandle" xdr="no">
						<descr>
            Identifies the forwarding element where the action will be executed.
          </descr>
					</param>
					<param io="in" class="vector" type="NPF_F_wmaxMacCpsSsDelCqichArgs_t" name="argsArray" xdr="yes">
						<descr>Array of structures containing argsNum entries. Each entry contains parameters for one request.</descr>
						<length type="NPF_uint32_t" name="argsNum" brief="Number of elements in the argsArray table.">
						</length>
					</param>
					<return>
						<descr>
            Error code indicating if function call was successful.
          </descr>
						<retval name="NPF_NO_ERROR">
							<descr>
              The operation is in progress.
            </descr>
						</retval>
						<retval name="NPF_E_BAD_CALLBACK_HANDLE">
							<descr>
              The callback handle is invalid.
            </descr>
						</retval>
						<retval name="NPF_E_UNKNOWN">
							<descr>
              The operation cannot be completed successfully because
              of problems encountered when handling the input parameters.
            </descr>
						</retval>
					</return>
					<callback>
						<descr>
            If errorReporting is set to ALWAYS, a callback is invoked to
            indicate that the operation has been completed. The callback
            is identified by NPF_F_WMAX_MAC_CPS_CALLBACK_CQI_DEL.
          </descr>
						<retval name="NPF_NO_ERROR" brief="Operation completed successfully.">
						</retval>
						<retval name="NPF_F_WMAX_MAC_CPS_ERROR_NO_RES" brief="Resources exhausted.">
						</retval>
						<retval name="NPF_F_WMAX_MAC_CPS_ERROR_INVALID_PARAMS" brief="Invalid parameter.">
						</retval>
					</callback>
				</func>
			</section>
		</section>
		<section name="Security Management">
			<section name="Definitions">
				<enum type="NPF_F_wmaxMacCpsEncryptionType_t" brief="Encryption Type">
					<descr>
				  This enum defines possible types of encryption algorithm.
				  </descr>
					<field name="NPF_F_WMAX_MAC_CPS_ENCRYPT_DES" value="0" brief="DES">
					</field>
					<field name="NPF_F_WMAX_MAC_CPS_ENCRYPT_AES" brief="AES">
					</field>
				</enum>
			</section>
			<section name="SA Creation">
				<struct type="NPF_F_wmaxMacCpsSaAddArgs_t" name="" brief="Security Association Add arguments">
					<descr>
					This data structure defines parameters of a Security Association Add FAPI call.
					</descr>
					<field type="NPF_F_wmaxMacCpsObjId_t" name="id" brief="MAC Instance ID">
					</field>
					<field name="encryptionType" type="NPF_F_wmaxMacCpsEncryptionType_t" brief="Encryption type: DES, AES">
					</field>
				</struct>
				<func name="NPF_F_wmaxMacCpsSaAdd" type="NPF_error_t" brief="Security Association Add" xdrid="RPC_WMAX_MAC_SA_ADD">
					<descr>
					This function allows for creation of a Security Association (SA). 
					After creation this SA should be associated with a connection or a group of connections by providing its SAID as a parameter during the connection creation.
					</descr>
					<param io="in" type="NPF_callbackHandle_t" name="callbackHandle" xdr="no">
						<descr>
						Identifies the callback function which should be called.
						</descr>
					</param>
					<param io="in" type="NPF_correlator_t" name="correlator" xdr="no">
						<descr>
						A unique application invocation context that will be
						supplied to the asynchronous completion callback routine.
						</descr>
					</param>
					<param io="in" type="NPF_errorReporting_t" name="errorReporting" xdr="no">
						<descr>
						Defines whether a callback will be called after
						completing the action requested by the function call.
						</descr>
					</param>
					<param io="in" type="NPF_FEHandle_t" name="feHandle" xdr="no">
						<descr>
						Identifies the forwarding element where the action will be executed.
						</descr>
					</param>
					<param io="in" class="vector" type="NPF_F_wmaxMacCpsSaAddArgs_t" name="argsArray" xdr="yes">
						<descr>Array of structures containing argsNum entries. Each entry contains parameters for one request.</descr>
						<length type="NPF_uint32_t" name="argsNum" brief="Number of elements in the argsArray table.">
						</length>
					</param>
					<return>
						<descr>
						Error code indicating if function call was successful.
						</descr>
						<retval name="NPF_NO_ERROR">
							<descr>
							The operation is in progress.
							</descr>
						</retval>
						<retval name="NPF_E_BAD_CALLBACK_HANDLE">
							<descr>
							The callback handle is invalid.
							</descr>
						</retval>
						<retval name="NPF_E_UNKNOWN">
							<descr>
							The operation cannot be completed successfully because
							of problems encountered when handling the input parameters.
							</descr>
						</retval>
					</return>
					<callback>
						<descr>
						If errorReporting is set to ALWAYS, a callback is invoked to
						indicate that the operation has been completed. The callback
						is identified by NPF_F_WMAX_MAC_CPS_CALLBACK_SA_ADD.
						</descr>
						<retval name="NPF_NO_ERROR" brief="Operation completed successfully.">
						</retval>
						<retval name="NPF_F_WMAX_MAC_CPS_ERROR_NO_RES" brief="Resources exhausted.">
						</retval>
						<retval name="NPF_F_WMAX_MAC_CPS_ERROR_INVALID_PARAMS" brief="Invalid parameter.">
						</retval>
					</callback>
				</func>
			</section>
			<section name="SA Deletion">
				<struct type="NPF_F_wmaxMacCpsSaDelArgs_t" name="" brief="Security Association Delete arguments">
					<descr>
					This data structure defines parameters of a Security Association Delete FAPI call.
					</descr>
					<field type="NPF_F_wmaxMacCpsObjId_t" name="id" brief="Security Association ID of the security association to be deleted">
					</field>
				</struct>
				<func name="NPF_F_wmaxMacCpsSaDel" type="NPF_error_t" brief="Security Association Delete" xdrid="RPC_WMAX_MAC_SA_DEL">
					<descr>
					This function allows for deletion of a Security Associacion.
					</descr>
					<param io="in" type="NPF_callbackHandle_t" name="callbackHandle" xdr="no">
						<descr>
						Identifies the callback function which should be called.
						</descr>
					</param>
					<param io="in" type="NPF_correlator_t" name="correlator" xdr="no">
						<descr>
						A unique application invocation context that will be
						supplied to the asynchronous completion callback routine.
						</descr>
					</param>
					<param io="in" type="NPF_errorReporting_t" name="errorReporting" xdr="no">
						<descr>
						Defines whether a callback will be called after
						completing the action requested by the function call.
						</descr>
					</param>
					<param io="in" type="NPF_FEHandle_t" name="feHandle" xdr="no">
						<descr>
						Identifies the forwarding element where the action will be executed.
						</descr>
					</param>
					<param io="in" class="vector" type="NPF_F_wmaxMacCpsSaDelArgs_t" name="argsArray" xdr="yes">
						<descr>Array of structures containing argsNum entries. Each entry contains parameters for one request.</descr>
						<length type="NPF_uint32_t" name="argsNum" brief="Number of elements in the argsArray table.">
						</length>
					</param>
					<return>
						<descr>
						Error code indicating if function call was successful.
						</descr>
						<retval name="NPF_NO_ERROR">
							<descr>
							The operation is in progress.
							</descr>
						</retval>
						<retval name="NPF_E_BAD_CALLBACK_HANDLE">
							<descr>
							The callback handle is invalid.
						</descr>
						</retval>
						<retval name="NPF_E_UNKNOWN">
							<descr>
							The operation cannot be completed successfully because
							of problems encountered when handling the input parameters.
							</descr>
						</retval>
					</return>
					<callback>
						<descr>
						If errorReporting is set to ALWAYS, a callback is invoked to
						indicate that the operation has been completed. The callback
						is identified by NPF_F_WMAX_MAC_CPS_CALLBACK_SA_DEL.
						</descr>
						<retval name="NPF_NO_ERROR" brief="Operation completed successfully.">
						</retval>
						<retval name="NPF_F_WMAX_MAC_CPS_ERROR_NO_RES" brief="Resources exhausted.">
						</retval>
						<retval name="NPF_F_WMAX_MAC_CPS_ERROR_INVALID_PARAMS" brief="Invalid parameter.">
						</retval>
					</callback>
				</func>
			</section>
			<section name="Keying Matherial Changing">
				<struct type="NPF_F_wmaxMacCpsSaDesKeys_t" name="" brief="DES keys">
					<descr>
					This data structure defines keying material for the DES algorithm.
					</descr>
					<field name="key" type="NPF_uint8_t" size="8" brief="New key">
					</field>
					<field name="iv" type="NPF_uint8_t" size="8" brief="New Initialization Vector">
					</field>
				</struct>
				<struct type="NPF_F_wmaxMacCpsSaAesKeys_t" name="" brief="AES keys">
					<descr>
					This data structure defines keying materialfor the AES algorithm.
					</descr>
					<field name="key" type="NPF_uint8_t" size="16" brief="New key">
					</field>
					<field name="iv" type="NPF_uint8_t" size="16" brief="New Initialization Vector">
					</field>
					<field name="dlStartPn" type="NPF_uint32_t" brief="Start value for the downlink packet number counter.">
					</field>
					<field name="ulStartPn" type="NPF_uint32_t" brief="Start value for the uplink packet number counter.">
					</field>
				</struct>
				<struct type="NPF_F_wmaxMacCpsSaKeyChangeArgs_t" name="" brief="Security Association Key Change arguments">
					<field name="id" type="NPF_F_wmaxMacCpsObjId_t" brief="Security Association Id">
					</field>
					<field name="eks" type="NPF_uint8_t" brief="EKS. Only the lowest bits (b1 and b0) are used. The other are reserved.">
					</field>
					<selectunion type="NPF_F_wmaxMacCpsSaKeyConf_t" name="u">
						<descr>
						This data structure defines parameters of a Security Association Key Change FAPI call.
						</descr>
						<selectfield name="encryptionType" type="NPF_F_wmaxMacCpsEncryptionType_t" brief="Encryption type: DES, AES">
						</selectfield>
						<field type="NPF_F_wmaxMacCpsSaDesKeys_t" name="desKey">
							<descr>DES specific parameters</descr>
							<selector>NPF_F_WMAX_MAC_CPS_ENCRYPT_DES</selector>
						</field>
						<field type="NPF_F_wmaxMacCpsSaAesKeys_t" name="aesKey">
							<descr>AES specific parameters</descr>
							<selector>NPF_F_WMAX_MAC_CPS_ENCRYPT_AES</selector>
						</field>
					</selectunion>
				</struct>
				<func name="NPF_F_wmaxMacCpsSaKeyChange" type="NPF_error_t" brief="Security Association Key Change" xdrid="RPC_WMAX_MAC_SA_KEY_ADD">
					<descr>
					This function allows for change of keying material for a Security Association.
					</descr>
					<param io="in" type="NPF_callbackHandle_t" name="callbackHandle" xdr="no">
						<descr>
						Identifies the callback function which should be called.
						</descr>
					</param>
					<param io="in" type="NPF_correlator_t" name="correlator" xdr="no">
						<descr>
						A unique application invocation context that will be
						supplied to the asynchronous completion callback routine.
						</descr>
					</param>
					<param io="in" type="NPF_errorReporting_t" name="errorReporting" xdr="no">
						<descr>
						Defines whether a callback will be called after
						completing the action requested by the function call.
						</descr>
					</param>
					<param io="in" type="NPF_FEHandle_t" name="feHandle" xdr="no">
						<descr>
						Identifies the forwarding element where the action will be executed.
						</descr>
					</param>
					<param io="in" class="vector" type="NPF_F_wmaxMacCpsSaKeyChangeArgs_t" name="argsArray" xdr="yes">
						<descr>Array of structures containing argsNum entries. Each entry contains parameters for one request.</descr>
						<length type="NPF_uint32_t" name="argsNum" brief="Number of elements in the argsArray table.">
						</length>
					</param>
					<return>
						<descr>
						Error code indicating if function call was successful.
						</descr>
						<retval name="NPF_NO_ERROR">
							<descr>
							The operation is in progress.
							</descr>
						</retval>
						<retval name="NPF_E_BAD_CALLBACK_HANDLE">
							<descr>
							The callback handle is invalid.
							</descr>
						</retval>
						<retval name="NPF_E_UNKNOWN">
							<descr>
							The operation cannot be completed successfully because
							of problems encountered when handling the input parameters.
							</descr>
						</retval>
					</return>
					<callback>
						<descr>
						If errorReporting is set to ALWAYS, a callback is invoked to
						indicate that the operation has been completed. The callback
						is identified by NPF_F_WMAX_MAC_CPS_CALLBACK_SA_KEY_CHG.
						</descr>
						<retval name="NPF_NO_ERROR" brief="Operation completed successfully.">
						</retval>
						<retval name="NPF_F_WMAX_MAC_CPS_ERROR_NO_RES" brief="Resources exhausted.">
						</retval>
						<retval name="NPF_F_WMAX_MAC_CPS_ERROR_INVALID_PARAMS" brief="Invalid parameter.">
						</retval>
					</callback>
				</func>
			</section>
			<section name="Getting Current PN Counters">
				<struct type="NPF_F_wmaxMacCpsSaPnGetArgs_t" name="" brief="Current Packet Numbers Get arguments">
					<descr>
            This data structure defines parameters of a Current Packet Numbers Get FAPI call.
          </descr>
					<field type="NPF_F_wmaxMacCpsObjId_t" name="id" brief="SA ID">
					</field>
				</struct>
				<func name="NPF_F_wmaxMacCpsSaPnGet" type="NPF_error_t" brief="Current Packet Numbers Get" xdrid="RPC_WMAX_MAC_SA_PN_GET">
					<descr>
            This function allows for creading the current state of the downlink and uplink packet number counters.
            This function should be called for AES SA only.
          </descr>
					<param io="in" type="NPF_callbackHandle_t" name="callbackHandle" xdr="no">
						<descr>
              Identifies the callback function which should be called.
            </descr>
					</param>
					<param io="in" type="NPF_correlator_t" name="correlator" xdr="no">
						<descr>
              A unique application invocation context that will be
              supplied to the asynchronous completion callback routine.
            </descr>
					</param>
					<param io="in" type="NPF_errorReporting_t" name="errorReporting" xdr="no">
						<descr>
              Defines whether a callback will be called after
              completing the action requested by the function call.
            </descr>
					</param>
					<param io="in" type="NPF_FEHandle_t" name="feHandle" xdr="no">
						<descr>
              Identifies the forwarding element where the action will be executed.
            </descr>
					</param>
					<param io="in" class="vector" type="NPF_F_wmaxMacCpsSaPnGetArgs_t" name="argsArray" xdr="yes">
						<descr>Array of structures containing argsNum entries. Each entry contains parameters for one request.</descr>
						<length type="NPF_uint32_t" name="argsNum" brief="Number of elements in the argsArray table.">
						</length>
					</param>
					<return>
						<descr>
              Error code indicating if function call was successful.
            </descr>
						<retval name="NPF_NO_ERROR">
							<descr>
                The operation is in progress.
              </descr>
						</retval>
						<retval name="NPF_E_BAD_CALLBACK_HANDLE">
							<descr>
                The callback handle is invalid.
              </descr>
						</retval>
						<retval name="NPF_E_UNKNOWN">
							<descr>
                The operation cannot be completed successfully because
                of problems encountered when handling the input parameters.
              </descr>
						</retval>
					</return>
					<callback>
						<descr>
              If errorReporting is set to ALWAYS, a callback is invoked to
              indicate that the operation has been completed. The callback
              is identified by NPF_F_WMAX_MAC_CPS_CALLBACK_SA_PN_GET.
            </descr>
						<retval name="NPF_NO_ERROR" brief="Operation completed successfully.">
						</retval>
						<retval name="NPF_F_WMAX_MAC_CPS_ERROR_NO_RES" brief="Resources exhausted.">
						</retval>
						<retval name="NPF_F_WMAX_MAC_CPS_ERROR_INVALID_PARAMS" brief="Invalid parameter.">
						</retval>
					</callback>
				</func>
			</section>
		</section>
		<section name="Connection Management">
			<section name="Definitions">
				<enum type="NPF_F_wmaxMacCpsConnectionType_t" brief="Connection Type">
					<descr>
            This enum defines possible types of connections.
          </descr>
					<field name="NPF_F_WMAX_MAC_CPS_CONN_TYPE_MANAGEMENT_BASIC" value="0" brief="Basic Management Connection">
					</field>
					<field name="NPF_F_WMAX_MAC_CPS_CONN_TYPE_MANAGEMENT_PRI" brief="Primary Management Connection">
					</field>
					<field name="NPF_F_WMAX_MAC_CPS_CONN_TYPE_MANAGEMENT_SEC" brief="Secondary Management Connection">
					</field>
					<field name="NPF_F_WMAX_MAC_CPS_CONN_TYPE_TRANSPORT" brief="Transport Connection">
					</field>
					<field name="NPF_F_WMAX_MAC_CPS_CONN_TYPE_BROADCAST" brief="Broadcast Connection">
					</field>
					<field name="NPF_F_WMAX_MAC_CPS_CONN_TYPE_INIT_RANGING" brief="Initial Ranging Connection (CID=0)">
					</field>
					<field name="NPF_F_WMAX_MAC_CPS_CONN_TYPE_AAS_INIT_RANGING" brief="AAS Initial Ranging Connection">
					</field>
					<field name="NPF_F_WMAX_MAC_CPS_CONN_TYPE_MCAST_POLL" brief="Multicast polling">
					</field>
					<field name="NPF_F_WMAX_MAC_CPS_CONN_TYPE_MCAST_SLEEP_MODE" brief="Sleep Mode Multicast Connection">
					</field>
					<field name="NPF_F_WMAX_MAC_CPS_CONN_TYPE_MCAST_IDLE_MODE" brief="Idle Mode Multicast Connection">
					</field>
					<field name="NPF_F_WMAX_MAC_CPS_CONN_TYPE_FRAGMENTABLE_BROADCAST" brief="Fragmentable Broadcast Connection">
					</field>
				</enum>
			</section>
			<section name="Connection Creation">
				<enum type="NPF_F_wmaxMacCpsServiceClass_t" brief="Service Class">
					<descr>
					This enum defines possible classes of service.
					</descr>
					<field name="NPF_F_WMAX_MAC_CPS_SERVICE_CLASS_NONE" value="0" brief="None. In 802.16d this Service Class should be used in DL direction">
					</field>
					<field name="NPF_F_WMAX_MAC_CPS_SERVICE_CLASS_UGS" brief="UGS - Unsolicited Grant Service">
					</field>
					<field name="NPF_F_WMAX_MAC_CPS_SERVICE_CLASS_RTPS" brief="rtPS - Real Time Polling Service">
					</field>
					<field name="NPF_F_WMAX_MAC_CPS_SERVICE_CLASS_NRTPS" brief="nrtPS - Non Real Time Polling Service">
					</field>
					<field name="NPF_F_WMAX_MAC_CPS_SERVICE_CLASS_BE" brief="BE - Best Effort">
					</field>
				</enum>
				<enum type="NPF_F_wmaxMacCpsHarqType_t" name="e2">
					<descr>
					HARQ Type.
					Identifies type of HARQ to be used.
					</descr>
					<field name="NPF_F_WMAX_MAC_CPS_HARQ_CC" value="0" brief="Chase Combining HARQ.">
					</field>
					<field name="NPF_F_WMAX_MAC_CPS_HARQ_IR" brief="Incremental Redundancy HARQ.">
					</field>
				</enum>
				<enum type="NPF_F_wmaxMacCpsArqFeedbackType_t" name="e3">
					<descr>
					ARQ Feedback Type.
					Identifies type of ARQ Feedback to be used.
					</descr>
					<field name="NPF_F_WMAX_MAC_CPS_ARQ_FB_SELECTIVE" value="1" brief="Selective ACK">
					</field>
					<field name="NPF_F_WMAX_MAC_CPS_ARQ_FB_CUMULATIVE" value="2" brief="Cumulative ACK">
					</field>
					<field name="NPF_F_WMAX_MAC_CPS_ARQ_FB_CUMULATIVE_WITH_SELECTIVE" value="4" brief="Cumulative with Selective ACK">
					</field>
					<field name="NPF_F_WMAX_MAC_CPS_ARQ_FB_CUMULATIVE_WITH_BLOCK_SEQ" value="8" brief="Cumulative ACK with Block Sequence ACK">
					</field>
				</enum>
				<enum type="NPF_F_wmaxMacCpsCsMode_t" brief="MAC CS Mode">
					<descr>
					This enum defines possible types of the MAC CS layer.
					</descr>
					<field name="NPF_F_WMAX_MAC_CPS_CS_ATM" value="0" brief="ATM">
					</field>
					<field name="NPF_F_WMAX_MAC_CPS_CS_IPV4" brief="Packet, IPv4">
					</field>
					<field name="NPF_F_WMAX_MAC_CPS_CS_IPV6" brief="Packet, IPv6">
					</field>
					<field name="NPF_F_WMAX_MAC_CPS_CS_8023" brief="Packet, 802.3">
					</field>
					<field name="NPF_F_WMAX_MAC_CPS_CS_8021" brief="Packet, 802.1Q VLAN">
					</field>
					<field name="NPF_F_WMAX_MAC_CPS_CS_IPV4_8023" brief="Packet, IPv4 over 802.3">
					</field>
					<field name="NPF_F_WMAX_MAC_CPS_CS_IPV4_8021" brief="Packet, IPv4 over 802.1Q VLAN">
					</field>
					<field name="NPF_F_WMAX_MAC_CPS_CS_IPV6_8023" brief="Packet, IPv6 over 802.3">
					</field>
					<field name="NPF_F_WMAX_MAC_CPS_CS_IPV6_8021" brief="Packet, IPv6 over 802.1Q VLAN">
					</field>
				</enum>
				<enum type="NPF_F_wmaxMacCpsPduSnExtendedSubheader_t">
					<descr> 
                                        PDU SN Extended Subheader for HARQ reordering.
                                        </descr>
					<field name="NPF_F_WMAX_MAC_CPS_PDU_SN_EXT_SH_NONE" value="0" brief="No support for PDU SN.">
					</field>
					<field name="NPF_F_WMAX_MAC_CPS_PDU_SN_EXT_SH_SHORT" brief="PDU SN (short) extended SH.">
					</field>
					<field name="NPF_F_WMAX_MAC_CPS_PDU_SN_EXT_SH_LONG" brief="PDU SN (long) extended SH.">
					</field>
				</enum>
				<struct type="NPF_F_wmaxMacCpsConnHarqConf_t" name="" brief="Parameters of HARQ">
					<descr>
						This data structure defines HARQ-specific parameters.
					</descr>
					<field name="type" type="NPF_F_wmaxMacCpsHarqType_t" brief="Type of the HARQ">
					</field>
					<vector name="acids" type="NPF_uint32_t" brief="">
						<descr>
              List of all ACIDs assigned to the connection.
            </descr>
						<length name="numOfSubChannels" type="NPF_uint32_t" brief="Number of elements in the 'acids' table - the number of HARQ sub-channels to be used by this connection.">
						</length>
					</vector>
					<field name="aiSnStartVal" type="NPF_uint8_t" brief="The initial value (0 or 1) to be used for AI_SN when a ACID is used for the first time ever.">
					</field>
					<field name="retransmitNum" type="NPF_uint8_t" brief="The maximum number of retransmissions.">
					</field>
					<field name="pduSnExtendedSubheader" type="NPF_F_wmaxMacCpsPduSnExtendedSubheader_t" brief="PDU SN Extended Subheader support."></field>
				</struct>
				<struct type="NPF_F_wmaxMacCpsArqConf_t" name="ul" brief="ARQ specific parameters">
					<descr>
					This data structure defines ARQ specific parameters of a connection.
					</descr>
					<field name="arqWindowSize" type="NPF_uint16_t" brief="ARQ Window Size. This value is expressed in bytes">
					</field>
					<field name="arqBlockSize" type="NPF_uint16_t" brief="ARQ Block Size. This value is expressed in bytes">
					</field>
					<field name="arqRetryTimeout" type="NPF_uint32_t" brief="ARQ Window Size. This value is expressed in us">
					</field>
					<field name="arqBlockLifetime" type="NPF_uint32_t" brief="ARQ Block Lifetime. This value is expressed in us. '0' means infinity.">
					</field>
					<field name="arqSyncLossTiemout" type="NPF_uint32_t" brief="ARQ Sync Lost Timeout. This value is expressed in us. '0' means infinity.">
					</field>
					<field name="arqDeliveryInOrder" type="NPF_F_wmaxMacCpsState_t" brief="ARQ Delivery in order state: ON or OFF">
					</field>
					<field name="arqRxPurgeTiemout" type="NPF_uint32_t" brief="ARQ RX Purge Timeout. This value is expressed in us. '0' means infinity.">
					</field>
					<field name="arqAckGenPeriod" type="NPF_uint16_t" brief="ARQ ACK Generation Period. This value is expressed in radio frames. If set to zero, an ACK is generated for each fragment">
					</field>
					<field name="arqAckProcessingTime" type="NPF_uint16_t" brief="ARQ ACK Processing Time. This value is expressed in radio frames.">
					</field>
					<field name="arqFeedbackType" type="NPF_F_wmaxMacCpsArqFeedbackType_t" brief="Types of the ARQ feedback to be used. Note that the feedback types are stored as bits in a bitmask (or'ed)">
					</field>
				</struct>
				<struct type="NPF_F_wmaxMacCpsUlConf_t" name="ul" brief="Uplink specific parameters">
					<descr>
					This structure defines Uplink specific traffic parameters.
					</descr>
					<field name="serviceClass" type="NPF_F_wmaxMacCpsServiceClass_t" brief="Service Class: UGS, rtPS, nrtPS, BE">
					</field>
					<field name="msr" type="NPF_uint32_t" brief="Maximum Sustained Rate in bytes/s">
					</field>
					<field name="mrr" type="NPF_uint32_t" brief="Minimum Reserved Rate in bytes/s">
					</field>
					<field name="mtr" type="NPF_uint32_t" brief="Minimum Tolerable Rate in bytes/s">
					</field>
					<field name="pr" type="NPF_uint32_t" brief="Polling Rate in bytes/s">
					</field>
					<field name="grantInterval" type="NPF_uint32_t" brief="UL Grant Interval in multiples of 0.1 millisecond">
					</field>
					<field name="maxJitter" type="NPF_uint32_t" brief="Maximum Jitter in multiples of 0.1 millisecond">
					</field>
					<field name="prio" type="NPF_uint8_t" brief="Priority">
					</field>
					<field name="maxLatency" type="NPF_uint32_t" brief="Maximum Latency in multiples of 0.1 millisecond">
					</field>
					<field name="maxBurst" type="NPF_uint16_t" brief="Maximum Burst Size in bytes">
					</field>
				</struct>
				<struct type="NPF_F_wmaxMacCpsDlConf_t" name="dl" brief="Downlink specific parameters">
					<descr>
					This structure defines Downlink specific traffic parameters.
					</descr>
					<field name="serviceClass" type="NPF_F_wmaxMacCpsServiceClass_t" brief="Service Class: for 802.16d None; for 802.16e UGS, rtPS, nrtPS, BE">
					</field>
					<field name="msr" type="NPF_uint32_t" brief="Maximum Sustained Rate in bytes/s">
					</field>
					<field name="mrr" type="NPF_uint32_t" brief="Minimum Reserved Rate in bytes/s">
					</field>
					<field name="mtr" type="NPF_uint32_t" brief="Minimum Tolerable Rate in bytes/s">
					</field>
					<field name="maxJitter" type="NPF_uint32_t" brief="Maximum Jitter in multiples of 0.1 millisecond">
					</field>
					<field name="prio" type="NPF_uint8_t" brief="Priority">
					</field>
					<field name="maxLatency" type="NPF_uint32_t" brief="Maximum Latency in multiples of 0.1 millisecond">
					</field>
					<field name="maxBurst" type="NPF_uint16_t" brief="Maximum Burst Size in bytes">
					</field>
				</struct>
				<enum type="NPF_F_wmaxMacCpsConnReqPolicy_t" brief="Bandwidth Request Policy">
					<descr>
					This enum defines possible bandwidth request transmission restrictions.
					</descr>
					<field name="NPF_F_WMAX_MAC_CPS_REQ_POLICY_NO_BCST_BW" value="1" brief="No use of broadcast bandwidth request opportunities">
					</field>
					<field name="NPF_F_WMAX_MAC_CPS_REQ_POLICY_NO_PIGGYBACK" value="2" brief="No use of piggy-back requests">
					</field>
				</enum>
				<struct type="NPF_F_wmaxMacCpsConnectionAddArgs_t" name="" brief="Connection Add arguments">
					<descr>
					This data structure defines parameters of a Connection Add FAPI call.
					</descr>
					<field type="NPF_F_wmaxMacCpsObjId_t" name="id" brief="SS or Multicast Group ID">
					</field>
					<field type="NPF_uint16_t" name="CID" brief="connection ID to be used in communication over the air.">
					</field>
					<field type="NPF_uint32_t" name="flowID" brief="Flow ID associated with this connection.">
					</field>
					<field type="NPF_uint32_t" name="correlator" brief="A correlator allowing for pairing of uplink and downlink flows into one bi-directional connection.">
					</field>
					<field type="NPF_F_wmaxMacCpsConnectionType_t" name="connType" brief="Connection Type.">
					</field>
					<field name="arqState" type="NPF_F_wmaxMacCpsState_t" brief="ARQ state: ON or OFF">
					</field>
					<field name="arqConf" type="NPF_F_wmaxMacCpsArqConf_t" brief="ARQ-specific configuration; valid if ARQ state = ON only.">
					</field>
					<field name="harqState" type="NPF_F_wmaxMacCpsState_t" brief="Defines if HARQ is enabled for this connection.">
					</field>
					<field name="harqConf" type="NPF_F_wmaxMacCpsConnHarqConf_t" brief="HARQ-specific configuration; valid if HARQ state = ON only.">
					</field>
					<field name="extFsnState" type="NPF_F_wmaxMacCpsState_t" brief="Usage of extended Fragment Sequence Number (FSN) state: ON or OFF">
					</field>
					<field name="phsState" type="NPF_F_wmaxMacCpsState_t" brief="Usage of Payload Header Suppression (PHS) state: ON or OFF">
					</field>
					<field name="encryptionState" type="NPF_F_wmaxMacCpsState_t" brief="Encryption state: ON or OFF">
					</field>
					<field type="NPF_F_wmaxMacCpsObjId_t" name="saId" brief="Security Association ID. Valid if encryption state is ON">
					</field>
					<field name="crcState" type="NPF_F_wmaxMacCpsState_t" brief="CRC calculation state: ON or OFF">
					</field>
					<field name="packState" type="NPF_F_wmaxMacCpsState_t" brief="Packing state: ON or OFF">
					</field>
					<field name="piggybackReqState" type="NPF_F_wmaxMacCpsState_t" brief="Usage of piggyback requests: ON or OFF">
					</field>
					<field name="piggybackReqIncrPerAggr" type="NPF_uint8_t" brief="Maximum number of Incremental Bandwidth Request that can be transmitted between two Aggregate Requests.">
					</field>
					<field name="bbroState" type="NPF_F_wmaxMacCpsState_t" brief="Usage of Broadcast Bandwidth Request Opportunities">
					</field>
					<field name="fbroState" type="NPF_F_wmaxMacCpsState_t" brief="Usage of Focused Bandwidth Request Opportunities">
					</field>
					<field name="ubroState" type="NPF_F_wmaxMacCpsState_t" brief="Usage of Unicast Bandwidth Request Opportunities">
					</field>
					<field name="fragState" type="NPF_F_wmaxMacCpsState_t" brief="Fragmentation: ON or OFF">
					</field>
					<field name="csMode" type="NPF_F_wmaxMacCpsCsMode_t" brief="CS mode: ATM, Packet-IPv4, Packet-IPv6, Packet-802.3, Packet-802.1Q-VLAN, etc.">
					</field>
					<field name="fixedSduSizeState" type="NPF_F_wmaxMacCpsState_t" brief="Fixed SDU Size state: ON (fixed) or OFF (variable)">
					</field>
					<field name="sduSize" type="NPF_uint16_t" brief="SDU size in bytes. Valid only if fixedSduSizeState set to ON.">
					</field>
					<field name="nonArqMinFragSize" type="NPF_uint16_t" brief="Minimum SDU Fragment size in bytes. Valid only if arqState set to OFF.">
					</field>
					<selectunion type="NPF_F_wmaxMacCpsConnConf_t" name="u">
						<selectfield type="NPF_F_wmaxMacCpsDirection_t" name="direction" brief="Connection direction: UL or DL.">
						</selectfield>
						<field type="NPF_F_wmaxMacCpsUlConf_t" name="ul">
							<descr>Uplink specific parameters</descr>
							<selector>NPF_F_WMAX_MAC_CPS_DIR_UL</selector>
						</field>
						<field type="NPF_F_wmaxMacCpsDlConf_t" name="dl">
							<descr>Downlink specific parameters</descr>
							<selector>NPF_F_WMAX_MAC_CPS_DIR_DL</selector>
						</field>
					</selectunion>
				</struct>
				<func name="NPF_F_wmaxMacCpsConnectionAdd" type="NPF_error_t" brief="Connection Add" xdrid="RPC_WMAX_MAC_CONN_ADD">
					<descr>
					This function allows for creation of a connection (or a number of connections). 
					During creation the connection is associated with a SS and a SA.
					</descr>
					<param io="in" type="NPF_callbackHandle_t" name="callbackHandle" xdr="no">
						<descr>
						Identifies the callback function which should be called.
						</descr>
					</param>
					<param io="in" type="NPF_correlator_t" name="correlator" xdr="no">
						<descr>
						A unique application invocation context that will be
						supplied to the asynchronous completion callback routine.
						</descr>
					</param>
					<param io="in" type="NPF_errorReporting_t" name="errorReporting" xdr="no">
						<descr>
						Defines whether a callback will be called after
						completing the action requested by the function call.
						</descr>
					</param>
					<param io="in" type="NPF_FEHandle_t" name="feHandle" xdr="no">
						<descr>
						Identifies the forwarding element where the action will be executed.
						</descr>
					</param>
					<param io="in" class="vector" type="NPF_F_wmaxMacCpsConnectionAddArgs_t" name="argsArray" xdr="yes">
						<descr>Array of structures containing argsNum entries. Each entry contains parameters for one request.</descr>
						<length type="NPF_uint32_t" name="argsNum" brief="Number of elements in the argsArray table.">
						</length>
					</param>
					<return>
						<descr>
						Error code indicating if function call was successful.
						</descr>
						<retval name="NPF_NO_ERROR">
							<descr>
							The operation is in progress.
							</descr>
						</retval>
						<retval name="NPF_E_BAD_CALLBACK_HANDLE">
							<descr>
							The callback handle is invalid.
							</descr>
						</retval>
						<retval name="NPF_E_UNKNOWN">
							<descr>
							The operation cannot be completed successfully because
							of problems encountered when handling the input parameters.
							</descr>
						</retval>
					</return>
					<callback>
						<descr>
						If errorReporting is set to ALWAYS, a callback is invoked to
						indicate that the operation has been completed. The callback
						is identified by NPF_F_WMAX_MAC_CPS_CALLBACK_CONN_ADD.
						</descr>
						<retval name="NPF_NO_ERROR" brief="Operation completed successfully.">
						</retval>
						<retval name="NPF_F_WMAX_MAC_CPS_ERROR_NO_RES" brief="Resources exhausted.">
						</retval>
						<retval name="NPF_F_WMAX_MAC_CPS_ERROR_INVALID_PARAMS" brief="Invalid parameter.">
						</retval>
					</callback>
				</func>
			</section>
			<section name="Changing Connection Parameters">
				<struct type="NPF_F_wmaxMacCpsConnectionChangeArgs_t" name="" brief="Connection Change arguments">
					<descr>
					This data structure defines parameters of a Connection Change FAPI call.
					</descr>
					<field type="NPF_F_wmaxMacCpsObjId_t" name="id" brief="Connection ID">
					</field>
					<field name="arqConf" type="NPF_F_wmaxMacCpsArqConf_t" brief="ARQ-specific configuration; valid if ARQ state = ON only.">
					</field>
					<field type="NPF_F_wmaxMacCpsObjId_t" name="saId" brief="Security Association ID. Valid if encryption state is ON">
					</field>
					<field name="packState" type="NPF_F_wmaxMacCpsState_t" brief="Packing state: ON or OFF">
					</field>
					<field name="fragState" type="NPF_F_wmaxMacCpsState_t" brief="Fragmentation: ON or OFF">
					</field>
					<field name="piggybackReqState" type="NPF_F_wmaxMacCpsState_t" brief="Usage of piggyback requests: ON or OFF">
					</field>
					<field name="piggybackReqIncrPerAggr" type="NPF_uint8_t" brief="Maximum number of Incremental Bandwidth Request that can be transmitted between two Aggregate Requests.">
					</field>
					<field name="bbroState" type="NPF_F_wmaxMacCpsState_t" brief="Usage of Broadcast Bandwidth Request Opportunities">
					</field>
					<field name="sduSize" type="NPF_uint16_t" brief="SDU size in bytes. Valid only if fixedSduSizeState set to ON.">
					</field>
					<field name="nonArqMinFragSize" type="NPF_uint16_t" brief="Minimum SDU Fragment size in bytes. Valid only if arqState set to OFF.">
					</field>
					<selectunion type="NPF_F_wmaxMacCpsConnConfChange_t" name="u">
						<selectfield type="NPF_F_wmaxMacCpsDirection_t" name="direction" brief="Connection direction: UL or DL. (NOTE: This must be the same as defined during Connection creation)">
						</selectfield>
						<field type="NPF_F_wmaxMacCpsUlConf_t" name="ul">
							<descr>Uplink specific parameters</descr>
							<selector>NPF_F_WMAX_MAC_CPS_DIR_UL</selector>
						</field>
						<field type="NPF_F_wmaxMacCpsDlConf_t" name="dl">
							<descr>Downlink specific parameters</descr>
							<selector>NPF_F_WMAX_MAC_CPS_DIR_DL</selector>
						</field>
					</selectunion>
                                       	<field name="harqState" type="NPF_F_wmaxMacCpsState_t" brief="Defines if HARQ is enabled for this connection.">
					</field>
					<field name="harqConf" type="NPF_F_wmaxMacCpsConnHarqConf_t" brief="HARQ-specific configuration; valid if HARQ state = ON only.">
                                        </field>
				</struct>
				<func name="NPF_F_wmaxMacCpsConnectionChange" type="NPF_error_t" brief="Connection Change" xdrid="RPC_WMAX_MAC_CONN_CHG">
					<descr>
					This function allows for change of parameters of an existing connection.
					</descr>
					<param io="in" type="NPF_callbackHandle_t" name="callbackHandle" xdr="no">
						<descr>
						Identifies the callback function which should be called.
						</descr>
					</param>
					<param io="in" type="NPF_correlator_t" name="correlator" xdr="no">
						<descr>
						A unique application invocation context that will be
						supplied to the asynchronous completion callback routine.
						</descr>
					</param>
					<param io="in" type="NPF_errorReporting_t" name="errorReporting" xdr="no">
						<descr>
						Defines whether a callback will be called after
						completing the action requested by the function call.
						</descr>
					</param>
					<param io="in" type="NPF_FEHandle_t" name="feHandle" xdr="no">
						<descr>
						Identifies the forwarding element where the action will be executed.
						</descr>
					</param>
					<param io="in" class="vector" type="NPF_F_wmaxMacCpsConnectionChangeArgs_t" name="argsArray" xdr="yes">
						<descr>Array of structures containing argsNum entries. Each entry contains parameters for one request.</descr>
						<length type="NPF_uint32_t" name="argsNum" brief="Number of elements in the argsArray table.">
						</length>
					</param>
					<return>
						<descr>
						Error code indicating if function call was successful.
						</descr>
						<retval name="NPF_NO_ERROR">
							<descr>
							The operation is in progress.
							</descr>
						</retval>
						<retval name="NPF_E_BAD_CALLBACK_HANDLE">
							<descr>
							The callback handle is invalid.
							</descr>
						</retval>
						<retval name="NPF_E_UNKNOWN">
							<descr>
							The operation cannot be completed successfully because
							of problems encountered when handling the input parameters.
							</descr>
						</retval>
					</return>
					<callback>
						<descr>
						If errorReporting is set to ALWAYS, a callback is invoked to
						indicate that the operation has been completed. The callback
						is identified by NPF_F_WMAX_MAC_CPS_CALLBACK_CONN_CHG.
						</descr>
						<retval name="NPF_NO_ERROR" brief="Operation completed successfully.">
						</retval>
						<retval name="NPF_F_WMAX_MAC_CPS_ERROR_NO_RES" brief="Resources exhausted.">
						</retval>
						<retval name="NPF_F_WMAX_MAC_CPS_ERROR_INVALID_PARAMS" brief="Invalid parameter.">
						</retval>
					</callback>
				</func>
			</section>
			<section name="Get DL Queue Empty Status">
				<struct type="NPF_F_wmaxMacCpsConnectionGetDlEmptyStateArgs_t" name="" brief="Arguments to Get DL Conection Empty State function">
					<descr>
						This data structure defines parameters of a Get DL Conection Empty State FAPI call (NPF_F_wmaxMacCpsConnectionGetDlEmptyState).						
					</descr>
					<field type="NPF_F_wmaxMacCpsObjId_t" name="id" brief="Connection ID of the connection to be monitored. Only DL connections can be monitored. ">
					</field>
					<field type="NPF_uint32_t" name="eventCorelator" brief="Event correlator - this value will be returned by the argments of NPF_F_WMAX_MAC_CPS_EVENT_CONN_DL_QUEUE_EMPTY event."></field>
				</struct>
				<func name="NPF_F_wmaxMacCpsConnectionGetDlEmptyState" type="NPF_error_t" brief="Get DL Conection Empty State" xdrid="RPC_WMAX_MAC_CONN_GET_DL_EMPTY_STATE">
					<descr>
						This function triggers sending an event when all DL packets queued for this connection are send. 
						NPF_F_WMAX_MAC_CPS_EVENT_CONN_DL_QUEUE_EMPTY will be always generated after this function.
						The function implementation creates a "snapshot" of the queue state in the moment of the function execution, 
						so the event will be triggered even some packets, queued after the function call, will remain unsend.
					</descr>
					<param io="in" type="NPF_callbackHandle_t" name="callbackHandle" xdr="no">
						<descr>
						Identifies the callback function which should be called.
						</descr>
					</param>
					<param io="in" type="NPF_correlator_t" name="correlator" xdr="no">
						<descr>
						A unique application invocation context that will be
						supplied to the asynchronous completion callback routine.
						</descr>
					</param>
					<param io="in" type="NPF_errorReporting_t" name="errorReporting" xdr="no">
						<descr>
						Defines whether a callback will be called after
						completing the action requested by the function call.
						</descr>
					</param>
					<param io="in" type="NPF_FEHandle_t" name="feHandle" xdr="no">
						<descr>
						Identifies the forwarding element where the action will be executed.
						</descr>
					</param>
					<param io="in" class="vector" type="NPF_F_wmaxMacCpsConnectionGetDlEmptyStateArgs_t" name="argsArray" xdr="yes">
						<descr>Array of structures containing argsNum entries. Each entry contains parameters for one request.</descr>
						<length type="NPF_uint32_t" name="argsNum" brief="Number of elements in the argsArray table.">
						</length>
					</param>
					<return>
						<descr>
						Error code indicating if function call was successful.
						</descr>
						<retval name="NPF_NO_ERROR">
							<descr>
							The operation is in progress.
							</descr>
						</retval>
						<retval name="NPF_E_BAD_CALLBACK_HANDLE">
							<descr>
							The callback handle is invalid.
						</descr>
						</retval>
						<retval name="NPF_E_UNKNOWN">
							<descr>
							The operation cannot be completed successfully because
							of problems encountered when handling the input parameters.
							</descr>
						</retval>
					</return>
					<callback>
						<descr>
						If errorReporting is set to ALWAYS, a callback is invoked to
						indicate that the operation has been completed. The callback
						is identified by NPF_F_WMAX_MAC_CPS_CALLBACK_CONN_GET_DL_EMPTY.
						</descr>
						<retval name="NPF_NO_ERROR" brief="Operation completed successfully.">
						</retval>
						<retval name="NPF_F_WMAX_MAC_CPS_ERROR_NO_RES" brief="Resources exhausted.">
						</retval>
						<retval name="NPF_F_WMAX_MAC_CPS_ERROR_INVALID_PARAMS" brief="Invalid parameter.">
						</retval>
					</callback>
				</func>
			</section>
			<section name="Connection Deletion">
				<struct type="NPF_F_wmaxMacCpsConnectionDelArgs_t" name="" brief="Connection Delete arguments">
					<descr>
					This data structure defines parameters of a Connection Delete FAPI call.
					</descr>
					<field type="NPF_F_wmaxMacCpsObjId_t" name="id" brief="Connection ID of the connection to be deleted">
					</field>
				</struct>
				<func name="NPF_F_wmaxMacCpsConnectionDel" type="NPF_error_t" brief="Connection Delete" xdrid="RPC_WMAX_MAC_CONN_DEL">
					<descr>
					This function allows for deletion of a connection.
					</descr>
					<param io="in" type="NPF_callbackHandle_t" name="callbackHandle" xdr="no">
						<descr>
						Identifies the callback function which should be called.
						</descr>
					</param>
					<param io="in" type="NPF_correlator_t" name="correlator" xdr="no">
						<descr>
						A unique application invocation context that will be
						supplied to the asynchronous completion callback routine.
						</descr>
					</param>
					<param io="in" type="NPF_errorReporting_t" name="errorReporting" xdr="no">
						<descr>
						Defines whether a callback will be called after
						completing the action requested by the function call.
						</descr>
					</param>
					<param io="in" type="NPF_FEHandle_t" name="feHandle" xdr="no">
						<descr>
						Identifies the forwarding element where the action will be executed.
						</descr>
					</param>
					<param io="in" class="vector" type="NPF_F_wmaxMacCpsConnectionDelArgs_t" name="argsArray" xdr="yes">
						<descr>Array of structures containing argsNum entries. Each entry contains parameters for one request.</descr>
						<length type="NPF_uint32_t" name="argsNum" brief="Number of elements in the argsArray table.">
						</length>
					</param>
					<return>
						<descr>
						Error code indicating if function call was successful.
						</descr>
						<retval name="NPF_NO_ERROR">
							<descr>
							The operation is in progress.
							</descr>
						</retval>
						<retval name="NPF_E_BAD_CALLBACK_HANDLE">
							<descr>
							The callback handle is invalid.
						</descr>
						</retval>
						<retval name="NPF_E_UNKNOWN">
							<descr>
							The operation cannot be completed successfully because
							of problems encountered when handling the input parameters.
							</descr>
						</retval>
					</return>
					<callback>
						<descr>
						If errorReporting is set to ALWAYS, a callback is invoked to
						indicate that the operation has been completed. The callback
						is identified by NPF_F_WMAX_MAC_CPS_CALLBACK_CONN_DEL.
						</descr>
						<retval name="NPF_NO_ERROR" brief="Operation completed successfully.">
						</retval>
						<retval name="NPF_F_WMAX_MAC_CPS_ERROR_NO_RES" brief="Resources exhausted.">
						</retval>
						<retval name="NPF_F_WMAX_MAC_CPS_ERROR_INVALID_PARAMS" brief="Invalid parameter.">
						</retval>
					</callback>
				</func>
			</section>
		</section>
		<section name="Multicast Group Management">
			<section name="Mcast Group Creation">
				<struct type="NPF_F_wmaxMacCpsMcastGrpAddArgs_t" name="" brief="Multicast Group Add arguments">
					<descr>
					This data structure defines parameters of a Multicast Group Add FAPI call. (NOTE: BS ONLY).
					</descr>
					<field name="id" type="NPF_F_wmaxMacCpsObjId_t" brief="MAC Instance Id">
					</field>
					<field name="diuc" type="NPF_uint8_t" brief="Burst Profile Index of a burst profile to be used in communication with this Multicast Group in the downlink direction.">
					</field>
					<vector name="ssList" type="NPF_F_wmaxMacCpsObjId_t" brief="Array of SS identifiers containing argsNum entries. SSs listed in the table will be assigned to the multicast group">
						<length name="ssListNum" type="NPF_uint32_t" brief="Number of element in the ssList table">
						</length>
					</vector>
				</struct>
				<func name="NPF_F_wmaxMacCpsMcastGrpAdd" type="NPF_error_t" brief="Multicast Group Add" xdrid="RPC_WMAX_MAC_MCAST_GRP_ADD">
					<descr>
					This function allows for creation of a Multicast Group.
					Note that during creation of a group, in the same call, can be specified a list of SS belonging to this multicast group. 
					(NOTE: BS ONLY).
					</descr>
					<param io="in" type="NPF_callbackHandle_t" name="callbackHandle" xdr="no">
						<descr>
						Identifies the callback function which should be called.
						</descr>
					</param>
					<param io="in" type="NPF_correlator_t" name="correlator" xdr="no">
						<descr>
						A unique application invocation context that will be
						supplied to the asynchronous completion callback routine.
						</descr>
					</param>
					<param io="in" type="NPF_errorReporting_t" name="errorReporting" xdr="no">
						<descr>
						Defines whether a callback will be called after
						completing the action requested by the function call.
						</descr>
					</param>
					<param io="in" type="NPF_FEHandle_t" name="feHandle" xdr="no">
						<descr>
						Identifies the forwarding element where the action will be executed.
						</descr>
					</param>
					<param io="in" class="vector" type="NPF_F_wmaxMacCpsMcastGrpAddArgs_t" name="argsArray" xdr="yes">
						<descr>Array of structures containing argsNum entries. Each entry contains parameters for one request.</descr>
						<length type="NPF_uint32_t" name="argsNum" brief="Number of elements in the argsArray table.">
						</length>
					</param>
					<return>
						<descr>
						Error code indicating if function call was successful.
						</descr>
						<retval name="NPF_NO_ERROR">
							<descr>
							The operation is in progress.
							</descr>
						</retval>
						<retval name="NPF_E_BAD_CALLBACK_HANDLE">
							<descr>
							The callback handle is invalid.
						</descr>
						</retval>
						<retval name="NPF_E_UNKNOWN">
							<descr>
							The operation cannot be completed successfully because
							of problems encountered when handling the input parameters.
							</descr>
						</retval>
					</return>
					<callback>
						<descr>
						If errorReporting is set to ALWAYS, a callback is invoked to
						indicate that the operation has been completed. The callback
						is identified by NPF_F_WMAX_MAC_CPS_CALLBACK_MCAST_GRP_ADD.
						</descr>
						<retval name="NPF_NO_ERROR" brief="Operation completed successfully.">
						</retval>
						<retval name="NPF_F_WMAX_MAC_CPS_ERROR_NO_RES" brief="Resources exhausted.">
						</retval>
						<retval name="NPF_F_WMAX_MAC_CPS_ERROR_INVALID_PARAMS" brief="Invalid parameter.">
						</retval>
					</callback>
				</func>
			</section>
			<section name="Mcast Group Deletion">
				<struct type="NPF_F_wmaxMacCpsMcastGrpDelArgs_t" name="" brief="Multicast Group Delete arguments">
					<descr>
					This data structure defines parameters of a Multicast Group Delete FAPI call. (NOTE: BS ONLY).
					</descr>
					<field type="NPF_F_wmaxMacCpsObjId_t" name="id" brief="Mcast Group ID of the group to be deleted">
					</field>
				</struct>
				<func name="NPF_F_wmaxMacCpsMcastGrpDel" type="NPF_error_t" brief="Multicast Group Delete" xdrid="RPC_WMAX_MAC_MCAST_DEL">
					<descr>
					This function allows for deletion of a Multicast Group. (NOTE: BS ONLY).
					</descr>
					<param io="in" type="NPF_callbackHandle_t" name="callbackHandle" xdr="no">
						<descr>
						Identifies the callback function which should be called.
						</descr>
					</param>
					<param io="in" type="NPF_correlator_t" name="correlator" xdr="no">
						<descr>
						A unique application invocation context that will be
						supplied to the asynchronous completion callback routine.
						</descr>
					</param>
					<param io="in" type="NPF_errorReporting_t" name="errorReporting" xdr="no">
						<descr>
						Defines whether a callback will be called after
						completing the action requested by the function call.
						</descr>
					</param>
					<param io="in" type="NPF_FEHandle_t" name="feHandle" xdr="no">
						<descr>
						Identifies the forwarding element where the action will be executed.
						</descr>
					</param>
					<param io="in" class="vector" type="NPF_F_wmaxMacCpsMcastGrpDelArgs_t" name="argsArray" xdr="yes">
						<descr>Array of structures containing argsNum entries. Each entry contains parameters for one request.</descr>
						<length type="NPF_uint32_t" name="argsNum" brief="Number of elements in the argsArray table.">
						</length>
					</param>
					<return>
						<descr>
						Error code indicating if function call was successful.
						</descr>
						<retval name="NPF_NO_ERROR">
							<descr>
							The operation is in progress.
							</descr>
						</retval>
						<retval name="NPF_E_BAD_CALLBACK_HANDLE">
							<descr>
							The callback handle is invalid.
						</descr>
						</retval>
						<retval name="NPF_E_UNKNOWN">
							<descr>
							The operation cannot be completed successfully because
							of problems encountered when handling the input parameters.
							</descr>
						</retval>
					</return>
					<callback>
						<descr>
						If errorReporting is set to ALWAYS, a callback is invoked to
						indicate that the operation has been completed. The callback
						is identified by NPF_F_WMAX_MAC_CPS_CALLBACK_MCAST_DEL.
						</descr>
						<retval name="NPF_NO_ERROR" brief="Operation completed successfully.">
						</retval>
						<retval name="NPF_F_WMAX_MAC_CPS_ERROR_NO_RES" brief="Resources exhausted.">
						</retval>
						<retval name="NPF_F_WMAX_MAC_CPS_ERROR_INVALID_PARAMS" brief="Invalid parameter.">
						</retval>
					</callback>
				</func>
			</section>
			<section name="Changing Contents of Mcast Group">
				<struct name="" type="NPF_F_wmaxMacCpsMcastGrpChangeArgs_t" brief="Multicast Group Change arguments">
					<descr>
					This data structure defines parameters of a Multicast Group Change FAPI call. (NOTE: BS ONLY).
					</descr>
					<field brief="Multicast Group Id" name="id" type="NPF_F_wmaxMacCpsObjId_t">
					</field>
					<vector brief="Array of SS identifiers containing ssListAddNum entries. SSs listed in the table will be assigned to the multicast group" name="ssListAdd" type="NPF_F_wmaxMacCpsObjId_t">
						<length brief="Number of element in the ssListAdd table" name="ssListAddNum" type="NPF_uint32_t">
						</length>
					</vector>
					<vector brief="Array of SS identifiers containing ssListDelNum entries. SSs listed in the table will be removed from the multicast group" name="ssListDel" type="NPF_F_wmaxMacCpsObjId_t">
						<length brief="Number of element in the ssListDel table" name="ssListDelNum" type="NPF_uint32_t">
						</length>
					</vector>
				</struct>
				<func brief="Multicast Group Change" name="NPF_F_wmaxMacCpsMcastGrpChange" type="NPF_error_t" xdrid="RPC_WMAX_MAC_MCAST_CHG">
					<descr>
					This function allows for modification of the list of SSs belonging to the multicast group. (NOTE: BS ONLY).
					</descr>
					<param io="in" name="callbackHandle" type="NPF_callbackHandle_t" xdr="no">
						<descr>Identifies the callback function which should be called.</descr>
					</param>
					<param io="in" name="correlator" type="NPF_correlator_t" xdr="no">
						<descr>A unique application invocation context that will be supplied to the asynchronous completion callback routine.</descr>
					</param>
					<param io="in" name="errorReporting" type="NPF_errorReporting_t" xdr="no">
						<descr>Defines whether a callback will be called after completing the action requested by the function call.</descr>
					</param>
					<param io="in" name="handle" type="NPF_FEHandle_t" xdr="no">
						<descr>Identifies the forwarding element where the action will be executed.</descr>
					</param>
					<param class="vector" io="in" name="argsArray" type="NPF_F_wmaxMacCpsMcastGrpChangeArgs_t" xdr="yes">
						<descr>Array of structures containing argsNum entries. Each entry contains parameters for one request.</descr>
						<length brief="Number of elements in the argsArray table." name="argsNum" type="NPF_uint32_t"></length>
					</param>
					<return>
						<descr>Error code indicating if function call was successful.</descr>
						<retval name="NPF_NO_ERROR">
							<descr>The operation is in progress.</descr>
						</retval>
						<retval name="NPF_E_BAD_CALLBACK_HANDLE">
							<descr>The callback handle is invalid.</descr>
						</retval>
						<retval name="NPF_E_UNKNOWN">
							<descr>The operation cannot be completed successfully because of problems encountered when handling the input parameters.</descr>
						</retval>
					</return>
					<callback>
						<descr>If errorReporting is set to ALWAYS, a callback is invoked to indicate that the operation has been completed. The callback is identified by NPF_F_WMAX_MAC_CPS_CALLBACK_MCAST_CHG.</descr>
						<retval brief="Operation completed successfully." name="NPF_NO_ERROR"></retval>
						<retval brief="Resources exhausted." name="NPF_F_WMAX_MAC_CPS_ERROR_NO_RES"></retval>
						<retval brief="Invalid parameter." name="NPF_F_WMAX_MAC_CPS_ERROR_INVALID_PARAMS"></retval>
					</callback>
				</func>
			</section>
		</section>
		<section name="Burst Profile Management">
			<section name="Changing of Burst Profile Sets for a whole MAC CPS Instance">
				<struct type="NPF_F_wmaxMacCpsBurstProfileSetsDefineArgs_t" name="" brief="Burst Profile Sets Definition arguments">
					<descr>
					This data structure defines parameters of a Burst Profile Sets Definition FAPI call.
					</descr>
					<field name="id" type="NPF_F_wmaxMacCpsObjId_t" brief="MAC Instance Id">
					</field>
					<field name="dir" type="NPF_F_wmaxMacCpsDirection_t" brief="Direction: uplink or downlink">
					</field>
					<field name="bpSet" type="NPF_F_wmaxMacCpsBurstProfileSetEntry_t" size="16" brief="Burst Profile Set">
					</field>
					<field name="xiucSubmapMapping" type="NPF_F_wmaxMacCpsXiucSubmapMapping_t" brief="Mapping between burst profiles and sub-maps. Valid only if sub-maps are suppported and burst profiles are changed.">
					</field>
					<field name="confChangeCount" type="NPF_uint16_t" brief="">
						<descr>
						On the BS, the Configuration Change Count matching with the one transmitted in the UCD/DCD message.
						On the SS, the value is associated with this set to correctly decode values used in DL-MAP and UL-MAP messages.
						</descr>
					</field>
				</struct>
				<func name="NPF_F_wmaxMacCpsBurstProfileSetsDefine" type="NPF_error_t" brief="Burst Profile Sets Definition" xdrid="RPC_WMAX_MAC_BP_CHGS">
					<descr>
					This function allows for change of definition of Burst Profile Set used by the MAC Instance in runtime. 
					Note that this function should be preceded by transmission of a DCD and/or UCD MAC messages.
					</descr>
					<param io="in" type="NPF_callbackHandle_t" name="callbackHandle" xdr="no">
						<descr>
						Identifies the callback function which should be called.
						</descr>
					</param>
					<param io="in" type="NPF_correlator_t" name="correlator" xdr="no">
						<descr>
						A unique application invocation context that will be
						supplied to the asynchronous completion callback routine.
						</descr>
					</param>
					<param io="in" type="NPF_errorReporting_t" name="errorReporting" xdr="no">
						<descr>
						Defines whether a callback will be called after
						completing the action requested by the function call.
						</descr>
					</param>
					<param io="in" type="NPF_FEHandle_t" name="feHandle" xdr="no">
						<descr>
						Identifies the forwarding element where the action will be executed.
						</descr>
					</param>
					<param io="in" class="vector" type="NPF_F_wmaxMacCpsBurstProfileSetsDefineArgs_t" name="argsArray" xdr="yes">
						<descr>Array of structures containing argsNum entries. Each entry contains parameters for one request.</descr>
						<length type="NPF_uint32_t" name="argsNum" brief="Number of elements in the argsArray table.">
						</length>
					</param>
					<return>
						<descr>
						Error code indicating if function call was successful.
						</descr>
						<retval name="NPF_NO_ERROR">
							<descr>
							The operation is in progress.
							</descr>
						</retval>
						<retval name="NPF_E_BAD_CALLBACK_HANDLE">
							<descr>
							The callback handle is invalid.
						</descr>
						</retval>
						<retval name="NPF_E_UNKNOWN">
							<descr>
							The operation cannot be completed successfully because
							of problems encountered when handling the input parameters.
							</descr>
						</retval>
					</return>
					<callback>
						<descr>
						If errorReporting is set to ALWAYS, a callback is invoked to
						indicate that the operation has been completed. The callback
						is identified by NPF_F_WMAX_MAC_CPS_CALLBACK_BP_SETS_DEF.
						</descr>
						<retval name="NPF_NO_ERROR" brief="Operation completed successfully.">
						</retval>
						<retval name="NPF_F_WMAX_MAC_CPS_ERROR_NO_RES" brief="Resources exhausted.">
						</retval>
						<retval name="NPF_F_WMAX_MAC_CPS_ERROR_INVALID_PARAMS" brief="Invalid parameter.">
						</retval>
					</callback>
				</func>
			</section>
			<section name="Changing Active DL/UL Burst Profile for a SS">
				<struct type="NPF_F_wmaxMacCpsActiveBurstProfileChangeArgs_t" name="" brief="Active Burst Profile Change arguments">
					<descr>
					This data structure defines parameters of a Active Burst Profile Change FAPI call. (NOTE: BS ONLY).
					</descr>
					<field name="id" type="NPF_F_wmaxMacCpsObjId_t" brief="SS Id or Multicast Group Id">
					</field>
					<field name="dir" type="NPF_F_wmaxMacCpsDirection_t" brief="Direction: uplink or downlink">
					</field>
					<field name="xiuc" type="NPF_uint16_t" brief="Burst Profile Index: UIUC or DIUC">
					</field>
					<field name="repetition" type="NPF_F_wmaxMacCpsRepetitionType_t" brief="Repetition to be used">
					</field>
					<field name="maxSsTxPwr" type="NPF_uint8_t" brief="Maximum SS TX power allowed with this burst profile. Valid for UL only.">
						<descr>
              This field stores the value coded as follows: '0' means -64dBm, '1' means -63.5dBm, ..., and '255' means +63.5dBm.
            </descr>
					</field>
					<vector name="acceptableCinrRssiValues" type="NPF_F_wmaxCpsActiveBurstProfileVertex_t" brief="">
						<descr>
              List of all vertexes defining a convex polygon containing all acceptable CINR/RSSI values. 
              Reception of signal with unspecified CINR/RSSI values triggers notification to the Control Plane.
            </descr>
						<length name="acceptableCinrRssiValuesNum" type="NPF_uint32_t" brief="Number of elements in the 'acceptableCinrRssiValues' table"></length>
					</vector>
				</struct>
				<func name="NPF_F_wmaxMacCpsActiveBurstProfileChange" type="NPF_error_t" brief="Active Burst Profile Change" xdrid="RPC_WMAX_MAC_ACTIVE_BP_CHG">
					<descr>
					This function allows for changing active burst profile which is used in communication with specified Subscriber Station
					or Multicast Group. This change is done separately for the downlink and the uplink directions.
					 (NOTE: BS ONLY).
					</descr>
					<param io="in" type="NPF_callbackHandle_t" name="callbackHandle" xdr="no">
						<descr>
						Identifies the callback function which should be called.
						</descr>
					</param>
					<param io="in" type="NPF_correlator_t" name="correlator" xdr="no">
						<descr>
						A unique application invocation context that will be
						supplied to the asynchronous completion callback routine.
						</descr>
					</param>
					<param io="in" type="NPF_errorReporting_t" name="errorReporting" xdr="no">
						<descr>
						Defines whether a callback will be called after
						completing the action requested by the function call.
						</descr>
					</param>
					<param io="in" type="NPF_FEHandle_t" name="feHandle" xdr="no">
						<descr>
						Identifies the forwarding element where the action will be executed.
						</descr>
					</param>
					<param io="in" class="vector" type="NPF_F_wmaxMacCpsActiveBurstProfileChangeArgs_t" name="argsArray" xdr="yes">
						<descr>Array of structures containing argsNum entries. Each entry contains parameters for one request.</descr>
						<length type="NPF_uint32_t" name="argsNum" brief="Number of elements in the argsArray table.">
						</length>
					</param>
					<return>
						<descr>
						Error code indicating if function call was successful.
						</descr>
						<retval name="NPF_NO_ERROR">
							<descr>
							The operation is in progress.
							</descr>
						</retval>
						<retval name="NPF_E_BAD_CALLBACK_HANDLE">
							<descr>
							The callback handle is invalid.
						</descr>
						</retval>
						<retval name="NPF_E_UNKNOWN">
							<descr>
							The operation cannot be completed successfully because
							of problems encountered when handling the input parameters.
							</descr>
						</retval>
					</return>
					<callback>
						<descr>
						If errorReporting is set to ALWAYS, a callback is invoked to
						indicate that the operation has been completed. The callback
						is identified by NPF_F_WMAX_MAC_CPS_CALLBACK_ACTIVE_BP_CHG.
						</descr>
						<retval name="NPF_NO_ERROR" brief="Operation completed successfully.">
						</retval>
						<retval name="NPF_F_WMAX_MAC_CPS_ERROR_NO_RES" brief="Resources exhausted.">
						</retval>
						<retval name="NPF_F_WMAX_MAC_CPS_ERROR_INVALID_PARAMS" brief="Invalid parameter.">
						</retval>
					</callback>
				</func>
			</section>
		</section>
		<section name="DFS Management">
			<!--
			<descr>TBD</descr>
      -->
		</section>
	</section>
	<section name="Monitoring">
		<section name="Global MAC CPS Statistics">
			<define>
				<descr>
					Global MAC CPS statistics list.
					Bits defined here shall be used to construct bitmasks passed in
					NPF_F_wmaxMacCpsStatsGet and NPF_F_wmaxMacCpsStatsConfig functions.
				</descr>
				<field name="NPF_F_WMAX_MAC_CPS_STAT_MPDU_UL_DROPPED_NO_RES" brief="Number of received and then dropped MAC PDUs due to lack of resources">
					<value>(1 &lt;&lt; 0)</value>
				</field>
				<field name="NPF_F_WMAX_MAC_CPS_STAT_MSDU_CTRL_UL_DROPPED_NO_RES" brief="Number of received and then dropped MAC SDUs containing MAC Control Messages due to lack of resources">
					<value>(1 &lt;&lt; 1)</value>
				</field>
				<field name="NPF_F_WMAX_MAC_CPS_STAT_MSDU_UL_DROPPED_NO_RES" brief="Number of received and then dropped MAC SDUs due to lack of resources">
					<value>(1 &lt;&lt; 2)</value>
				</field>
				<field name="NPF_F_WMAX_MAC_CPS_STAT_MPDU_DL_DROPPED_NO_RES" brief="Number of MAC PDUs not transmitted due to lack of resources">
					<value>(1 &lt;&lt; 3)</value>
				</field>
				<field name="NPF_F_WMAX_MAC_CPS_STAT_MSDU_CTRL_DL_DROPPED_NO_RES" brief="Number of MAC SDUs containing MAC control messages not transmitted due to lack of resources.">
					<value>(1 &lt;&lt; 4)</value>
				</field>
				<field name="NPF_F_WMAX_MAC_CPS_STAT_MSDU_DL_DROPPED_NO_RES" brief="Number of MAC SDUs not transmitted due to lack of resources">
					<value>(1 &lt;&lt; 5)</value>
				</field>
			</define>
			<func name="NPF_F_wmaxMacCpsStatsConfig" type="NPF_error_t" xdrid="RPC_WMAX_MAC_CPS_STATS_CFG">
				<descr>
					MAC CPS Statistics Configure.
					This function allows to configure what Global MAC CPS statistics should be 
					collected by MACs and to reset selected statistics.
					The associated callback type is NPF_F_WMAX_MAC_CPS_CALLBACK_STATS_CONFIG.
				</descr>
				<param io="in" type="NPF_callbackHandle_t" name="callbackHandle" xdr="no">
					<descr>
						The unique identifier provided to the application when the 
						completion callback routine was registered.
					</descr>
				</param>
				<param io="in" type="NPF_correlator_t" name="correlator" xdr="no">
					<descr>
						A unique application invocation context that will be 
						supplied to the asynchronous completion callback routine.
					</descr>
				</param>
				<param io="in" type="NPF_errorReporting_t" name="errorReporting" xdr="no">
					<descr>
						An indication of whether the application desires to receive 
						an asynchronous completion callback for this API function 
						call.
					</descr>
				</param>
				<param io="in" type="NPF_FEHandle_t" name="feHandle" xdr="no">
					<descr>
						Forwarding Element handle.
					</descr>
				</param>
				<param io="in" type="NPF_F_statsConfig_t" name="statsConfig">
					<descr>
						Specification of what statistics should be added to or 
						deleted from current set and what statistics should be 
						reset.
					</descr>
				</param>
				<return>
					<descr>
						Error code indicating if function call is accepted.
					</descr>
					<retval name="NPF_NO_ERROR">
						<descr>The operation is in progress.</descr>
					</retval>
					<retval name="NPF_E_UNKNOWN">
						<descr>
							Problems encountered when handling the input parameters.
						</descr>
					</retval>
				</return>
				<callback>
					<descr>
						If errorReporting is set to ALWAYS, a callback is invoked to
						indicate that the operation has been completed. 
					</descr>
					<retval name="NPF_NO_ERROR" brief="Operation completed successfully.">
					</retval>
					<retval name="NPF_F_WMAX_MAC_CPS_ERROR_NO_RES" brief="Resources exhausted.">
					</retval>
					<retval name="NPF_F_WMAX_MAC_CPS_ERROR_INVALID_PARAMS" brief="Invalid parameter.">
					</retval>
				</callback>
			</func>
			<func name="NPF_F_wmaxMacCpsStatsGet" type="NPF_error_t" brief="Global MAC CPS Statistics Get" xdrid="RPC_WMAX_MAC_CPS_STATS_GET">
				<descr>
					This function allows for retrieving Global MAC CPS Statistics.
				</descr>
				<param io="in" type="NPF_callbackHandle_t" name="callbackHandle" xdr="no">
					<descr>
						Identifies the callback function which should be called.
					</descr>
				</param>
				<param io="in" type="NPF_correlator_t" name="correlator" xdr="no">
					<descr>
						A unique application invocation context that will be
						supplied to the asynchronous completion callback routine.
					</descr>
				</param>
				<param io="in" type="NPF_errorReporting_t" name="errorReporting" xdr="no">
					<descr>
						Defines whether a callback will be called after
						completing the action requested by the function call.
					</descr>
				</param>
				<param io="in" type="NPF_FEHandle_t" name="feHandle" xdr="no">
					<descr>
						Identifies the forwarding element where the action will be executed.
					</descr>
				</param>
				<param io="in" type="NPF_uint64_t" name="resetMask">
					<descr>
						Specification of what global MAC CPS statistics will be reset after read operation.
					</descr>
				</param>
				<return>
					<descr>
						Error code indicating if function call was successful.
					</descr>
					<retval name="NPF_NO_ERROR">
						<descr>
							The operation is in progress.
						</descr>
					</retval>
					<retval name="NPF_E_BAD_CALLBACK_HANDLE">
						<descr>
							The callback handle is invalid.
						</descr>
					</retval>
					<retval name="NPF_E_UNKNOWN">
						<descr>
							The operation cannot be completed successfully because
							of problems encountered when handling the input parameters.
						</descr>
					</retval>
				</return>
				<callback>
					<descr>
						If errorReporting is set to ALWAYS, a callback is invoked to
						indicate that the operation has been completed. 
					</descr>
					<retval name="NPF_NO_ERROR" brief="Operation completed successfully.">
					</retval>
					<retval name="NPF_F_WMAX_MAC_CPS_ERROR_NO_RES" brief="Resources exhausted.">
					</retval>
					<retval name="NPF_F_WMAX_MAC_CPS_ERROR_INVALID_PARAMS" brief="Invalid parameter.">
					</retval>
				</callback>
			</func>
		</section>
		<section name="MAC CPS Instance Statistics">
			<define>
				<descr>
				MAC Instance statistics list.
				Bits defined here shall be used to construct bitmasks passed in
				NPF_F_wmaxMacCpsInstanceStatsGet and NPF_F_wmaxMacCpsInstanceStatsConfig functions.
				</descr>
				<field name="NPF_F_WMAX_MAC_CPS_INSTANCE_STAT_MPDU_UL_DROPPED_HCS_ERR" brief="Number of received and then dropped MAC PDUs due to invalid HCS">
					<value>(1 &lt;&lt; 0)</value>
				</field>
				<field name="NPF_F_WMAX_MAC_CPS_INSTANCE_STAT_MPDU_UL_DROPPED_BAD_CID" brief="Number of received and then dropped MAC PDUs due to invalid CID">
					<value>(1 &lt;&lt; 1)</value>
				</field>
				<field name="NPF_F_WMAX_MAC_CPS_INSTANCE_STAT_MPDU_UL_ACCEPTED" brief="Number of received and then accepted MAC PDUs">
					<value>(1 &lt;&lt; 2)</value>
				</field>
				<field name="NPF_F_WMAX_MAC_CPS_INSTANCE_STAT_MPDU_DL_ACCEPTED" brief="Number of transmitted MAC PDUs">
					<value>(1 &lt;&lt; 3)</value>
				</field>
				<field name="NPF_F_WMAX_MAC_CPS_INSTANCE_STAT_MSDU_CTRL_UL_ACCEPTED" brief="Number of received and then accepted MAC SDUs containing MAC Control Messages">
					<value>(1 &lt;&lt; 4)</value>
				</field>
				<field name="NPF_F_WMAX_MAC_CPS_INSTANCE_STAT_MSDU_CTRL_DL_ACCEPTED" brief="Number of transmitted MAC SDUs containing MAC Control Messages">
					<value>(1 &lt;&lt; 5)</value>
				</field>
				<field name="NPF_F_WMAX_MAC_CPS_INSTANCE_STAT_DL_SLOTS_TOTAL" brief="Total cumulative number of DL allocations slots (symbols * subchannels) which were available.">
					<value>(1 &lt;&lt; 6)</value>
				</field>
				<field name="NPF_F_WMAX_MAC_CPS_INSTANCE_STAT_DL_SLOTS_USED" brief="Cumulative number of DL allocations slots (symbols * subchannels) which were used by the DL scheduler for data transmission.">
					<value>(1 &lt;&lt; 7)</value>
				</field>
				<field name="NPF_F_WMAX_MAC_CPS_INSTANCE_STAT_UL_SLOTS_TOTAL" brief="Total cumulative number of UL allocations slots (symbols * subchannels) which were available.">
					<value>(1 &lt;&lt; 8)</value>
				</field>
				<field name="NPF_F_WMAX_MAC_CPS_INSTANCE_STAT_UL_SLOTS_USED" brief="Cumulative number of DL allocations slots (symbols * subchannels) which were used by the UL scheduler for data transmission.">
					<value>(1 &lt;&lt; 9)</value>
				</field>
			</define>
			<struct type="NPF_F_wmaxMacCpsInstanceStatsConfigArgs_t" name="" brief="MAC Instance Statistics Config arguments">
				<descr>
				This data structure defines parameters of a MAC Instance Statistics Config FAPI call.
				</descr>
				<field type="NPF_F_statsConfig_t" name="statsConfig" brief="Statistics configuration">
					<descr>
						Specification of what statistics should be added to or deleted from current set and what statistics should be 
						reset.
						</descr>
				</field>
				<field type="NPF_F_wmaxMacCpsObjId_t" name="id" brief="MAC Instance Id">
				</field>
			</struct>
			<func name="NPF_F_wmaxMacCpsInstanceStatsConfig" type="NPF_error_t" xdrid="RPC_WMAX_MAC_INST_STATS_CFG">
				<descr>
				MAC Instance statistics configuration.
				This function allows to configure what MAC Instance statistics should be 
				collected by MAC and to reset selected statistics.
				The associated callback type is NPF_F_WMAX_MAC_CPS_CALLBACK_INSTANCE_STATS_CONFIG.
				</descr>
				<param io="in" type="NPF_callbackHandle_t" name="callbackHandle" xdr="no">
					<descr>
						The unique identifier provided to the application when the 
						completion callback routine was registered.
						</descr>
				</param>
				<param io="in" type="NPF_correlator_t" name="correlator" xdr="no">
					<descr>
						A unique application invocation context that will be 
						supplied to the asynchronous completion callback routine.
						</descr>
				</param>
				<param io="in" type="NPF_errorReporting_t" name="errorReporting" xdr="no">
					<descr>
						An indication of whether the application desires to receive 
						an asynchronous completion callback for this API function 
						call.
						</descr>
				</param>
				<param io="in" type="NPF_FEHandle_t" name="feHandle" xdr="no">
					<descr>
						Forwarding Element handle.
						</descr>
				</param>
				<param io="in" class="vector" type="NPF_F_wmaxMacCpsInstanceStatsConfigArgs_t" name="argsArray" xdr="yes">
					<descr>Array of structures containing argsNum entries. Each entry contains parameters for one request.</descr>
					<length type="NPF_uint32_t" name="argsNum" brief="Number of elements in the argsArray table.">
					</length>
				</param>
				<return>
					<descr>
						Error code indicating if function call is accepted.
						</descr>
					<retval name="NPF_NO_ERROR">
						<descr>The operation is in progress.</descr>
					</retval>
					<retval name="NPF_E_UNKNOWN">
						<descr>
							Problems encountered when handling the input parameters.
							</descr>
					</retval>
				</return>
				<callback>
					<descr>
					If errorReporting is set to ALWAYS, a callback is invoked to
					indicate that the operation has been completed. 
					</descr>
					<retval name="NPF_NO_ERROR" brief="Operation completed successfully.">
					</retval>
					<retval name="NPF_F_WMAX_MAC_CPS_ERROR_NO_RES" brief="Resources exhausted.">
					</retval>
					<retval name="NPF_F_WMAX_MAC_CPS_ERROR_INVALID_PARAMS" brief="Invalid parameter.">
					</retval>
				</callback>
			</func>
			<struct type="NPF_F_wmaxMacCpsInstanceStatsGetArgs_t" name="" brief="MAC Instance Statistics Get arguments">
				<descr>
				This data structure defines parameters of a MAC Instance Statistics Get FAPI call.
				</descr>
				<field type="NPF_F_wmaxMacCpsObjId_t" name="id" brief="MAC Instance Id">
				</field>
				<field type="NPF_uint64_t" name="resetMask" brief="Specification of what statistics will be reset after read operation.">
				</field>
			</struct>
			<func name="NPF_F_wmaxMacCpsInstanceStatsGet" type="NPF_error_t" brief="MAC Instance Statistics Get" xdrid="RPC_WMAX_MAC_INST_STATS_GET">
				<descr>			
				This function allows to read MAC Instance statistics.
				The associated callback type is NPF_F_WMAX_MAC_CPS_CALLBACK_INSTANCE_STATS_GET.
				</descr>
				<param io="in" type="NPF_callbackHandle_t" name="callbackHandle" xdr="no">
					<descr>
					Identifies the callback function which should be called.
					</descr>
				</param>
				<param io="in" type="NPF_correlator_t" name="correlator" xdr="no">
					<descr>
					A unique application invocation context that will be
					supplied to the asynchronous completion callback routine.
					</descr>
				</param>
				<param io="in" type="NPF_errorReporting_t" name="errorReporting" xdr="no">
					<descr>
					Defines whether a callback will be called after
					completing the action requested by the function call.
					</descr>
				</param>
				<param io="in" type="NPF_FEHandle_t" name="feHandle" xdr="no">
					<descr>
					Identifies the forwarding element where the action will be executed.
					</descr>
				</param>
				<param io="in" class="vector" type="NPF_F_wmaxMacCpsInstanceStatsGetArgs_t" name="argsArray" xdr="yes">
					<descr>Array of structures containing argsNum entries. Each entry contains parameters for one request.</descr>
					<length type="NPF_uint32_t" name="argsNum" brief="Number of elements in the argsArray table.">
					</length>
				</param>
				<return>
					<descr>
					Error code indicating if function call was successful.
					</descr>
					<retval name="NPF_NO_ERROR">
						<descr>
						The operation is in progress.
						</descr>
					</retval>
					<retval name="NPF_E_BAD_CALLBACK_HANDLE">
						<descr>
						The callback handle is invalid.
					</descr>
					</retval>
					<retval name="NPF_E_UNKNOWN">
						<descr>
						The operation cannot be completed successfully because
						of problems encountered when handling the input parameters.
						</descr>
					</retval>
				</return>
				<callback>
					<descr>
					If errorReporting is set to ALWAYS, a callback is invoked to
					indicate that the operation has been completed. 
					</descr>
					<retval name="NPF_NO_ERROR" brief="Operation completed successfully.">
					</retval>
					<retval name="NPF_F_WMAX_MAC_CPS_ERROR_NO_RES" brief="Resources exhausted.">
					</retval>
					<retval name="NPF_F_WMAX_MAC_CPS_ERROR_INVALID_PARAMS" brief="Invalid parameter.">
					</retval>
				</callback>
			</func>
		</section>
		<section name="SS Statistics">
			<define>
				<descr>
					SS statistics list.
					Bits defined here shall be used to construct bitmasks passed in
					NPF_F_wmaxMacSsStatsGet and NPF_F_wmaxMacSsStatsConfig functions.
				</descr>
				<field name="NPF_F_WMAX_MAC_SS_STAT_UL_AVG_RSSI" brief="Avarage RSSI value calculated on uplink for this SS">
					<value>(1 &lt;&lt; 0)</value>
				</field>
				<field name="NPF_F_WMAX_MAC_SS_STAT_UL_AVG_CINR" brief="Avarage CINR value calculated on uplink for this SS">
					<value>(1 &lt;&lt; 1)</value>
				</field>
				<field name="NPF_F_WMAX_MAC_SS_STAT_UL_HARQ_BURST_RCVD" brief="Number of successfully received uplink HARQ bursts.">
					<value>(1 &lt;&lt; 2)</value>
				</field>
				<field name="NPF_F_WMAX_MAC_SS_STAT_UL_HARQ_BURST_DROPPED" brief="Number of uplink HARQ bursts that were not successfully received.">
					<value>(1 &lt;&lt; 3)</value>
				</field>
				<field name="NPF_F_WMAX_MAC_SS_STAT_UL_HARQ_BURST_RETRANSMIT" brief="Number of uplink HARQ retransmissions.">
					<value>(1 &lt;&lt; 4)</value>
				</field>
				<field name="NPF_F_WMAX_MAC_SS_STAT_DL_HARQ_BURST_TRANSMIT" brief="Number of acknowledged transmitted downlink HARQ bursts.">
					<value>(1 &lt;&lt; 5)</value>
				</field>
				<field name="NPF_F_WMAX_MAC_SS_STAT_DL_HARQ_BURST_DROPPED" brief="Number of downlink HARQ bursts that were not acknowledged.">
					<value>(1 &lt;&lt; 6)</value>
				</field>
				<field name="NPF_F_WMAX_MAC_SS_STAT_DL_HARQ_BURST_RETRANSMIT" brief="Number of downlink HARQ retransmissions.">
					<value>(1 &lt;&lt; 7)</value>
				</field>
			</define>
			<struct type="NPF_F_wmaxMacCpsSsStatsConfigArgs_t" name="" brief="SS Statistics Config arguments">
				<descr>
					This data structure defines parameters of a SS Statistics Config FAPI call.
				</descr>
				<field type="NPF_F_statsConfig_t" name="statsConfig" brief="Statistics configuration">
					<descr>
						Specification of what statistics should be added to or deleted from current set and what statistics should be
						reset.
					</descr>
				</field>
				<field type="NPF_F_wmaxMacCpsObjId_t" name="id" brief="SS Id">
				</field>
			</struct>
			<func name="NPF_F_wmaxMacCpsSsStatsConfig" type="NPF_error_t" xdrid="RPC_WMAX_SS_STATS_CFG">
				<descr>
					SS statistics configuration.
					This function allows to configure what SS statistics should be
					collected by MAC and to reset selected statistics.
					The associated callback type is NPF_F_WMAX_MAC_CPS_CALLBACK_SS_STATS_CONFIG.
				</descr>
				<param io="in" type="NPF_callbackHandle_t" name="callbackHandle" xdr="no">
					<descr>
						The unique identifier provided to the application when the
						completion callback routine was registered.
					</descr>
				</param>
				<param io="in" type="NPF_correlator_t" name="correlator" xdr="no">
					<descr>
						A unique application invocation context that will be
						supplied to the asynchronous completion callback routine.
					</descr>
				</param>
				<param io="in" type="NPF_errorReporting_t" name="errorReporting" xdr="no">
					<descr>
						An indication of whether the application desires to receive
						an asynchronous completion callback for this API function
						call.
					</descr>
				</param>
				<param io="in" type="NPF_FEHandle_t" name="feHandle" xdr="no">
					<descr>
						Forwarding Element handle.
					</descr>
				</param>
				<param io="in" class="vector" type="NPF_F_wmaxMacCpsSsStatsConfigArgs_t" name="argsArray" xdr="yes">
					<descr>Array of structures containing argsNum entries. Each entry contains parameters for one request.</descr>
					<length type="NPF_uint32_t" name="argsNum" brief="Number of elements in the argsArray table.">
					</length>
				</param>
				<return>
					<descr>
						Error code indicating if function call is accepted.
					</descr>
					<retval name="NPF_NO_ERROR">
						<descr>The operation is in progress.</descr>
					</retval>
					<retval name="NPF_E_UNKNOWN">
						<descr>
							Problems encountered when handling the input parameters.
						</descr>
					</retval>
				</return>
				<callback>
					<descr>
						If errorReporting is set to ALWAYS, a callback is invoked to
						indicate that the operation has been completed.
					</descr>
					<retval name="NPF_NO_ERROR" brief="Operation completed successfully.">
					</retval>
					<retval name="NPF_F_WMAX_MAC_CPS_ERROR_NO_RES" brief="Resources exhausted.">
					</retval>
					<retval name="NPF_F_WMAX_MAC_CPS_ERROR_INVALID_PARAMS" brief="Invalid parameter.">
					</retval>
				</callback>
			</func>
			<struct type="NPF_F_wmaxMacCpsSsStatsGetArgs_t" name="" brief="SS Statistics Get arguments">
				<descr>
					This data structure defines parameters of a SS Statistics Get FAPI call.
				</descr>
				<field type="NPF_F_wmaxMacCpsObjId_t" name="id" brief="SS Id">
				</field>
				<field type="NPF_uint64_t" name="resetMask" brief="Specification of what statistics will be reset after read operation.">
				</field>
			</struct>
			<func name="NPF_F_wmaxMacCpsSsStatsGet" type="NPF_error_t" brief="SS Statistics Get" xdrid="RPC_WMAX_SS_STATS_GET">
				<descr>
					This function allows to read MAC Instance statistics.
					The associated callback type is NPF_F_WMAX_MAC_CPS_CALLBACK_SS_STATS_GET.
				</descr>
				<param io="in" type="NPF_callbackHandle_t" name="callbackHandle" xdr="no">
					<descr>
						Identifies the callback function which should be called.
					</descr>
				</param>
				<param io="in" type="NPF_correlator_t" name="correlator" xdr="no">
					<descr>
						A unique application invocation context that will be
						supplied to the asynchronous completion callback routine.
					</descr>
				</param>
				<param io="in" type="NPF_errorReporting_t" name="errorReporting" xdr="no">
					<descr>
						Defines whether a callback will be called after
						completing the action requested by the function call.
					</descr>
				</param>
				<param io="in" type="NPF_FEHandle_t" name="feHandle" xdr="no">
					<descr>
						Identifies the forwarding element where the action will be executed.
					</descr>
				</param>
				<param io="in" class="vector" type="NPF_F_wmaxMacCpsSsStatsGetArgs_t" name="argsArray" xdr="yes">
					<descr>Array of structures containing argsNum entries. Each entry contains parameters for one request.</descr>
					<length type="NPF_uint32_t" name="argsNum" brief="Number of elements in the argsArray table.">
					</length>
				</param>
				<return>
					<descr>
						Error code indicating if function call was successful.
					</descr>
					<retval name="NPF_NO_ERROR">
						<descr>
							The operation is in progress.
						</descr>
					</retval>
					<retval name="NPF_E_BAD_CALLBACK_HANDLE">
						<descr>
							The callback handle is invalid.
						</descr>
					</retval>
					<retval name="NPF_E_UNKNOWN">
						<descr>
							The operation cannot be completed successfully because
							of problems encountered when handling the input parameters.
						</descr>
					</retval>
				</return>
				<callback>
					<descr>
						If errorReporting is set to ALWAYS, a callback is invoked to
						indicate that the operation has been completed.
					</descr>
					<retval name="NPF_NO_ERROR" brief="Operation completed successfully.">
					</retval>
					<retval name="NPF_F_WMAX_MAC_CPS_ERROR_NO_RES" brief="Resources exhausted.">
					</retval>
					<retval name="NPF_F_WMAX_MAC_CPS_ERROR_INVALID_PARAMS" brief="Invalid parameter.">
					</retval>
				</callback>
			</func>
		</section>
		<section name="Connection Statistics">
			<define>
				<descr>
				Connection statistics list.
				Bits defined here shall be used to construct bitmasks passed in
				NPF_F_wmaxMacCpsConnectionStatsGet and NPF_F_wmaxMacCpsConnectionStatsConfig functions.
				</descr>
				<field name="NPF_F_WMAX_MAC_CPS_CONN_STAT_UL_SDU_DROPPED_DUPLICATED" brief="Number of uplink and then dropped MAC-CPS SDUs due to duplication.">
					<value>(1 &lt;&lt; 0)</value>
				</field>
				<field name="NPF_F_WMAX_MAC_CPS_CONN_STAT_UL_SDU_DROPPED_ARQ_PURGE_TIMEOUT" brief="Number of uplink and then dropped MAC-CPS SDUs due to ARQ Purge Timeout expiration.">
					<value>(1 &lt;&lt; 1)</value>
				</field>
				<field name="NPF_F_WMAX_MAC_CPS_CONN_STAT_SDU_ARQ_FEEDBACK" brief="Number of generated ARQ Feedbacks for the connection.">
					<value>(1 &lt;&lt; 2)</value>
				</field>
				<field name="NPF_F_WMAX_MAC_CPS_CONN_STAT_UL_SDU_ARQ_REQUESTS" brief="Number of uplink ARQ Resets.">
					<value>(1 &lt;&lt; 3)</value>
				</field>
				<field name="NPF_F_WMAX_MAC_CPS_CONN_STAT_UL_SDU_ARQ_DISCARD" brief="Number of uplink ARQ Discard messages received.">
					<value>(1 &lt;&lt; 4)</value>
				</field>
				<field name="NPF_F_WMAX_MAC_CPS_CONN_STAT_UL_ARQ_BLOCKS" brief="Number of uplink ARQ blocks.">
					<value>(1 &lt;&lt; 5)</value>
				</field>
				<field name="NPF_F_WMAX_MAC_CPS_CONN_STAT_UL_SDU_FRAGMENTS" brief="Number of uplink MAC-CPS SDU fragments.">
					<value>(1 &lt;&lt; 6)</value>
				</field>
				<field name="NPF_F_WMAX_MAC_CPS_CONN_STAT_UL_SDU_TOTAL_BYTES" brief="_TOTAL number of bytes in received and then accepted MAC-CPS SDUs.">
					<value>(1 &lt;&lt; 7)</value>
				</field>
				<field name="NPF_F_WMAX_MAC_CPS_CONN_STAT_UL_SDU_TOTAL_PKTS" brief="Number of successfully processed UL MAC-CPS SDUs (delivered to CS).">
					<value>(1 &lt;&lt; 8)</value>
				</field>
				<field name="NPF_F_WMAX_MAC_CPS_CONN_STAT_UL_PDU_DROPPED_NO_DECRYPT" brief="Number of uplink and then dropped MAC-CPS PDUs due to inability to decrypt.">
					<value>(1 &lt;&lt; 9)</value>
				</field>
				<field name="NPF_F_WMAX_MAC_CPS_CONN_STAT_UL_PDU_DROPPED_BAD_TYPE" brief="Number of uplink and then dropped MAC-CPS PDUs due to invalid type.">
					<value>(1 &lt;&lt; 10)</value>
				</field>
				<field name="NPF_F_WMAX_MAC_CPS_CONN_STAT_UL_PDU_DROPPED_BAD_CRC" brief="Number of uplink and then dropped MAC-CPS PDUs due to invalid CRC.">
					<value>(1 &lt;&lt; 11)</value>
				</field>
				<field name="NPF_F_WMAX_MAC_CPS_CONN_STAT_UL_PDU_DROPPED_BAD_PACK_SUBHDR" brief="Number of uplink and then dropped MAC-CPS PDUs due to invalid packing sub-header.">
					<value>(1 &lt;&lt; 12)</value>
				</field>
				<field name="NPF_F_WMAX_MAC_CPS_CONN_STAT_UL_PDU_DROPPED_BAD_FRAG_SUBHDR" brief="Number of uplink and then dropped MAC-CPS PDUs due to invalid fragmentation sub-header.">
					<value>(1 &lt;&lt; 13)</value>
				</field>
				<field name="NPF_F_WMAX_MAC_CPS_CONN_STAT_UL_PDU_DROPPED_OTHER" brief="Number of uplink and then dropped MAC-CPS PDUs due to other reasons.">
					<value>(1 &lt;&lt; 14)</value>
				</field>
				<field name="NPF_F_WMAX_MAC_CPS_CONN_STAT_UL_PDU_TOTAL_BYTES" brief="_TOTAL number of bytes in received and then accepted MAC-CPS PDUs.">
					<value>(1 &lt;&lt; 15)</value>
				</field>
				<field name="NPF_F_WMAX_MAC_CPS_CONN_STAT_UL_PDU_TOTAL_PKTS" brief="Number of MAC-CPS PDUs received from PHY.">
					<value>(1 &lt;&lt; 16)</value>
				</field>
				<field name="NPF_F_WMAX_MAC_CPS_CONN_STAT_DL_SDU_DROPPED_QOS_CONSTRAINT" brief="Number of dropped DL packets due to QOS constraints (ie: max delay).">
					<value>(1 &lt;&lt; 17)</value>
				</field>
				<field name="NPF_F_WMAX_MAC_CPS_CONN_STAT_DL_SDU_DROPPED_ARQ_BLOCK_LIFETIME" brief="Number of downlink and then dropped MAC-CPS SDUs due to ARQ Block Lifetime expiration.">
					<value>(1 &lt;&lt; 18)</value>
				</field>
				<field name="NPF_F_WMAX_MAC_CPS_CONN_STAT_DL_SDU_ARQ_RETRANSMIT" brief="Number of MAC-CPS SDU fragments retransmitted on ARQ retransmit requests.">
					<value>(1 &lt;&lt; 19)</value>
				</field>
				<field name="NPF_F_WMAX_MAC_CPS_CONN_STAT_DL_SDU_ARQ_FEEDBACK_ACCEPTED" brief="Number of received and accepted ARQ feedbacks for the connection.">
					<value>(1 &lt;&lt; 20)</value>
				</field>
				<field name="NPF_F_WMAX_MAC_CPS_CONN_STAT_DL_SDU_ARQ_FEEDBACK_REJECTED" brief="Number of received and dropped ARQ feedbacks for the connection.">
					<value>(1 &lt;&lt; 21)</value>
				</field>
				<field name="NPF_F_WMAX_MAC_CPS_CONN_STAT_DL_SDU_ARQ_RESETS" brief="Number of downlink ARQ resets.">
					<value>(1 &lt;&lt; 22)</value>
				</field>
				<field name="NPF_F_WMAX_MAC_CPS_CONN_STAT_DL_ARQ_BLOCKS" brief="Number of downlink ARQ blocks.">
					<value>(1 &lt;&lt; 23)</value>
				</field>
				<field name="NPF_F_WMAX_MAC_CPS_CONN_STAT_DL_SDU_FRAGMENTS" brief="Number of MAC-CPS SDU fragments.">
					<value>(1 &lt;&lt; 24)</value>
				</field>
				<field name="NPF_F_WMAX_MAC_CPS_CONN_STAT_DL_SDU_TOTAL_BYTES" brief="_TOTAL number of bytes in transmitted MAC-CPS SDUs.">
					<value>(1 &lt;&lt; 25)</value>
				</field>
				<field name="NPF_F_WMAX_MAC_CPS_CONN_STAT_DL_SDU_TOTAL_PKTS" brief="Number of successfully processed MAC-CPS SDUs delivered to lower layers.">
					<value>(1 &lt;&lt; 26)</value>
				</field>
				<field name="NPF_F_WMAX_MAC_CPS_CONN_STAT_DL_PDU_DROPPED_NO_ENCRYPT" brief="Number of MAC-CPS PDUs not transmitted due to inability to encrypt.">
					<value>(1 &lt;&lt; 27)</value>
				</field>
				<field name="NPF_F_WMAX_MAC_CPS_CONN_STAT_DL_PDU_DROPPED_OTHER" brief="Number of MAC-CPS PDUs not transmitted due to other reasons.">
					<value>(1 &lt;&lt; 28)</value>
				</field>
				<field name="NPF_F_WMAX_MAC_CPS_CONN_STAT_DL_PDU_TOTAL_BYTES" brief="_TOTAL number of bytes in transmitted MAC-CPS PDUs.">
					<value>(1 &lt;&lt; 29)</value>
				</field>
				<field name="NPF_F_WMAX_MAC_CPS_CONN_STAT_DL_PDU_TOTAL_PKTS" brief="Number of MAC-CPS PDUs delivered to PHY.">
					<value>(1 &lt;&lt; 30)</value>
				</field>
			</define>
			<struct type="NPF_F_wmaxMacCpsConnectionStatsConfigArgs_t" name="" brief="Connection Statistics Config arguments">
				<descr>
				This data structure defines parameters of a Connection Statistics Config FAPI call.
				</descr>
				<field type="NPF_F_statsConfig_t" name="statsConfig" brief="Statistics configuration">
					<descr>
						Specification of what statistics should be added to or deleted from current set and what statistics should be 
						reset.
						</descr>
				</field>
				<field type="NPF_F_wmaxMacCpsObjId_t" name="id" brief="Connection Id">
				</field>
			</struct>
			<func name="NPF_F_wmaxMacCpsConnectionStatsConfig" type="NPF_error_t" xdrid="RPC_WMAX_MAC_CONN_STATS_CFG">
				<descr>
				Connection statistics configuration.
				This function allows to configure what connection statistics should be 
				collected by MAC and to reset selected statistics.
				The associated callback type is NPF_F_WMAX_MAC_CPS_CALLBACK_CONN_STATS_CONFIG.
				</descr>
				<param io="in" type="NPF_callbackHandle_t" name="callbackHandle" xdr="no">
					<descr>
						The unique identifier provided to the application when the 
						completion callback routine was registered.
						</descr>
				</param>
				<param io="in" type="NPF_correlator_t" name="correlator" xdr="no">
					<descr>
						A unique application invocation context that will be 
						supplied to the asynchronous completion callback routine.
						</descr>
				</param>
				<param io="in" type="NPF_errorReporting_t" name="errorReporting" xdr="no">
					<descr>
						An indication of whether the application desires to receive 
						an asynchronous completion callback for this API function 
						call.
						</descr>
				</param>
				<param io="in" type="NPF_FEHandle_t" name="feHandle" xdr="no">
					<descr>
						Forwarding Element handle.
						</descr>
				</param>
				<param io="in" class="vector" type="NPF_F_wmaxMacCpsConnectionStatsConfigArgs_t" name="argsArray" xdr="yes">
					<descr>Array of structures containing argsNum entries. Each entry contains parameters for one request.</descr>
					<length type="NPF_uint32_t" name="argsNum" brief="Number of elements in the argsArray table.">
					</length>
				</param>
				<return>
					<descr>
						Error code indicating if function call is accepted.
						</descr>
					<retval name="NPF_NO_ERROR">
						<descr>The operation is in progress.</descr>
					</retval>
					<retval name="NPF_E_UNKNOWN">
						<descr>
							Problems encountered when handling the input parameters.
							</descr>
					</retval>
				</return>
				<callback>
					<descr>
					If errorReporting is set to ALWAYS, a callback is invoked to
					indicate that the operation has been completed. 
					</descr>
					<retval name="NPF_NO_ERROR" brief="Operation completed successfully.">
					</retval>
					<retval name="NPF_F_WMAX_MAC_CPS_ERROR_NO_RES" brief="Resources exhausted.">
					</retval>
					<retval name="NPF_F_WMAX_MAC_CPS_ERROR_INVALID_PARAMS" brief="Invalid parameter.">
					</retval>
				</callback>
			</func>
			<struct type="NPF_F_wmaxMacCpsConnectionStatsGetArgs_t" name="" brief="Connection Statistics Get arguments">
				<descr>
				This data structure defines parameters of a Connection Statistics Get FAPI call.
				</descr>
				<field type="NPF_F_wmaxMacCpsObjId_t" name="id" brief="Connection Id">
				</field>
				<field type="NPF_uint64_t" name="resetMask" brief="Specification of what statistics will be reset after read operation.">
				</field>
			</struct>
			<func name="NPF_F_wmaxMacCpsConnectionStatsGet" type="NPF_error_t" brief="Connection Statistics Get" xdrid="RPC_WMAX_MAC_CON_STATS_GET">
				<descr>			
				This function allows to read connection statistics.
				The associated callback type is NPF_F_WMAX_MAC_CPS_CALLBACK_CONN_STATS_GET.
				</descr>
				<param io="in" type="NPF_callbackHandle_t" name="callbackHandle" xdr="no">
					<descr>
					Identifies the callback function which should be called.
					</descr>
				</param>
				<param io="in" type="NPF_correlator_t" name="correlator" xdr="no">
					<descr>
					A unique application invocation context that will be
					supplied to the asynchronous completion callback routine.
					</descr>
				</param>
				<param io="in" type="NPF_errorReporting_t" name="errorReporting" xdr="no">
					<descr>
					Defines whether a callback will be called after
					completing the action requested by the function call.
					</descr>
				</param>
				<param io="in" type="NPF_FEHandle_t" name="feHandle" xdr="no">
					<descr>
					Identifies the forwarding element where the action will be executed.
					</descr>
				</param>
				<param io="in" class="vector" type="NPF_F_wmaxMacCpsConnectionStatsGetArgs_t" name="argsArray" xdr="yes">
					<descr>Array of structures containing argsNum entries. Each entry contains parameters for one request.</descr>
					<length type="NPF_uint32_t" name="argsNum" brief="Number of elements in the argsArray table.">
					</length>
				</param>
				<return>
					<descr>
					Error code indicating if function call was successful.
					</descr>
					<retval name="NPF_NO_ERROR">
						<descr>
						The operation is in progress.
						</descr>
					</retval>
					<retval name="NPF_E_BAD_CALLBACK_HANDLE">
						<descr>
						The callback handle is invalid.
					</descr>
					</retval>
					<retval name="NPF_E_UNKNOWN">
						<descr>
						The operation cannot be completed successfully because
						of problems encountered when handling the input parameters.
						</descr>
					</retval>
				</return>
				<callback>
					<descr>
					If errorReporting is set to ALWAYS, a callback is invoked to
					indicate that the operation has been completed. 
					</descr>
					<retval name="NPF_NO_ERROR" brief="Operation completed successfully.">
					</retval>
					<retval name="NPF_F_WMAX_MAC_CPS_ERROR_NO_RES" brief="Resources exhausted.">
					</retval>
					<retval name="NPF_F_WMAX_MAC_CPS_ERROR_INVALID_PARAMS" brief="Invalid parameter.">
					</retval>
				</callback>
			</func>
		</section>
	</section>
	<section name="Diagnostics">
		<section name="Enabling Traces">
			<struct type="NPF_F_wmaxMacCpsTraceEnableArgs_t" name="" brief="Trace Enable arguments">
				<descr>
				This data structure defines parameters of a Trace Enable FAPI call.
				</descr>
				<field type="NPF_uint16_t" name="blockId" brief="Block ID of a block the trace will be enabled for.">
				</field>
				<field type="NPF_uint16_t" name="level" brief="Minimum level of a trace which will be presented.">
				</field>
				<field type="NPF_uint16_t" name="n" brief="Number of traces which have to be collected before being presented together.">
				</field>
			</struct>
			<func name="NPF_F_wmaxMacCpsTraceEnable" type="NPF_error_t" brief="Trace Enable" xdrid="RPC_WMAX_MAC_TRACE_ENABLE">
				<descr>
				This function allows for starting the Trace mechanism.
				</descr>
				<param io="in" type="NPF_callbackHandle_t" name="callbackHandle" xdr="no">
					<descr>
					Identifies the callback function which should be called.
					</descr>
				</param>
				<param io="in" type="NPF_correlator_t" name="correlator" xdr="no">
					<descr>
					A unique application invocation context that will be
					supplied to the asynchronous completion callback routine.
					</descr>
				</param>
				<param io="in" type="NPF_errorReporting_t" name="errorReporting" xdr="no">
					<descr>
					Defines whether a callback will be called after
					completing the action requested by the function call.
					</descr>
				</param>
				<param io="in" type="NPF_FEHandle_t" name="feHandle" xdr="no">
					<descr>
					Identifies the forwarding element where the action will be executed.
					</descr>
				</param>
				<param io="in" class="vector" type="NPF_F_wmaxMacCpsTraceEnableArgs_t" name="argsArray" xdr="yes">
					<descr>Array of structures containing argsNum entries. Each entry contains parameters for one request.</descr>
					<length type="NPF_uint32_t" name="argsNum" brief="Number of elements in the argsArray table.">
					</length>
				</param>
				<return>
					<descr>
					Error code indicating if function call was successful.
					</descr>
					<retval name="NPF_NO_ERROR">
						<descr>
						The operation is in progress.
						</descr>
					</retval>
					<retval name="NPF_E_BAD_CALLBACK_HANDLE">
						<descr>
						The callback handle is invalid.
					</descr>
					</retval>
					<retval name="NPF_E_UNKNOWN">
						<descr>
						The operation cannot be completed successfully because
						of problems encountered when handling the input parameters.
						</descr>
					</retval>
				</return>
				<callback>
					<descr>
					If errorReporting is set to ALWAYS, a callback is invoked to
					indicate that the operation has been completed. 
					</descr>
					<retval name="NPF_NO_ERROR" brief="Operation completed successfully.">
					</retval>
					<retval name="NPF_F_WMAX_MAC_CPS_ERROR_NO_RES" brief="Resources exhausted.">
					</retval>
					<retval name="NPF_F_WMAX_MAC_CPS_ERROR_INVALID_PARAMS" brief="Invalid parameter.">
					</retval>
				</callback>
			</func>
		</section>
		<section name="Disabling Traces">
			<struct type="NPF_F_wmaxMacCpsTraceDisableArgs_t" name="" brief="Trace Disable arguments">
				<descr>
				This data structure defines parameters of a Trace Disable FAPI call.
				</descr>
				<field type="NPF_uint16_t" name="blockId" brief="Block ID of a block the trace will be disabled for.">
				</field>
			</struct>
			<func name="NPF_F_wmaxMacCpsTraceDisable" type="NPF_error_t" brief="Trace Disable" xdrid="RPC_WMAX_MAC_TRACE_DISABLE">
				<descr>
				This function allows for stopping the Trace mechanism.
				</descr>
				<param io="in" type="NPF_callbackHandle_t" name="callbackHandle" xdr="no">
					<descr>
					Identifies the callback function which should be called.
					</descr>
				</param>
				<param io="in" type="NPF_correlator_t" name="correlator" xdr="no">
					<descr>
					A unique application invocation context that will be
					supplied to the asynchronous completion callback routine.
					</descr>
				</param>
				<param io="in" type="NPF_errorReporting_t" name="errorReporting" xdr="no">
					<descr>
					Defines whether a callback will be called after
					completing the action requested by the function call.
					</descr>
				</param>
				<param io="in" type="NPF_FEHandle_t" name="feHandle" xdr="no">
					<descr>
					Identifies the forwarding element where the action will be executed.
					</descr>
				</param>
				<param io="in" class="vector" type="NPF_F_wmaxMacCpsTraceDisableArgs_t" name="argsArray" xdr="yes">
					<descr>Array of structures containing argsNum entries. Each entry contains parameters for one request.</descr>
					<length type="NPF_uint32_t" name="argsNum" brief="Number of elements in the argsArray table.">
					</length>
				</param>
				<return>
					<descr>
					Error code indicating if function call was successful.
					</descr>
					<retval name="NPF_NO_ERROR">
						<descr>
						The operation is in progress.
						</descr>
					</retval>
					<retval name="NPF_E_BAD_CALLBACK_HANDLE">
						<descr>
						The callback handle is invalid.
					</descr>
					</retval>
					<retval name="NPF_E_UNKNOWN">
						<descr>
						The operation cannot be completed successfully because
						of problems encountered when handling the input parameters.
						</descr>
					</retval>
				</return>
				<callback>
					<descr>
					If errorReporting is set to ALWAYS, a callback is invoked to
					indicate that the operation has been completed. 
					</descr>
					<retval name="NPF_NO_ERROR" brief="Operation completed successfully.">
					</retval>
					<retval name="NPF_F_WMAX_MAC_CPS_CPS_ERROR_NO_RES" brief="Resources exhausted.">
					</retval>
					<retval name="NPF_F_WMAX_MAC_CPS_CPS_ERROR_INVALID_PARAMS" brief="Invalid parameter.">
					</retval>
				</callback>
			</func>
		</section>
	</section>
	<section name="Callbacks">
		<section name="Definitions">
			<struct type="NPF_F_wmaxMacCpsStats_t" name="NPF_F_wmaxMacCpsStats_n">
				<descr>
          Global MAC CPS statistics structure.
          Container for statistics collected by all MAC CPS instances, used
          in callback for NPF_F_wmaxMacCpsStatsGet function. The structure
          contains all statistics defined for MAC CPS; if collecting is disabled
          for the selected counters the corresponding values are undefined.
        </descr>
				<see>NPF_F_wmaxMacCpsStatsGet</see>
				<see>NPF_F_wmaxMacCpsStatsConfig</see>
				<field type="NPF_uint64_t" name="mpduUlDroppedNoRes" brief="Number of received and then dropped MAC PDUs due to lack of resources"></field>
				<field type="NPF_uint64_t" name="msduCtrlUlDroppedNoRes" brief="Number of received and then dropped MAC SDUs containing MAC Control Messages due to lack of resources"></field>
				<field type="NPF_uint64_t" name="msduUlDroppedNoRes" brief="Number of received and then dropped MAC SDUs due to lack of resources"></field>
				<field type="NPF_uint64_t" name="mpduDlDroppedNoRes" brief="Number of MAC PDUs not transmitted due to lack of resources"></field>
				<field type="NPF_uint64_t" name="msduCtrlDlDroppedNoRes" brief="Number of MAC SDUs containing MAC control messages not transmitted due to lack of resources."></field>
				<field type="NPF_uint64_t" name="msduDlDroppedNoRes" brief="Number of MAC SDUs not transmitted due to lack of resources"></field>
			</struct>
			<struct type="NPF_F_wmaxMacCpsInstanceStats_t" name="NPF_F_wmaxMacCpsInstanceStats_n">
				<descr>
          MAC CPS Instance statistics structure.
          Container for statistics collected by MAC CPS functionality on per MAC CPS Instance basis, used
          in callback for NPF_F_wmaxMacCpsInstanceStatsGet function. The structure
          contains all statistics defined for MAC CPS Instance; if collecting some of
          them is not enabled the corresponding values are undefined.
        </descr>
				<see>NPF_F_wmaxMacCpsInstanceStatsGet</see>
				<see>NPF_F_wmaxMacCpsInstanceStatsConfig</see>
				<field type="NPF_uint64_t" name="mpduUlDroppedHcsErr" brief="Number of received and then dropped MAC PDUs due to invalid HCS"></field>
				<field type="NPF_uint64_t" name="mpduUlDroppedBadCid" brief="Number of received and then dropped MAC PDUs due to invalid CID"></field>
				<field type="NPF_uint64_t" name="mpduUlAccepted" brief="Number of received and then accepted MAC PDUs"></field>
				<field type="NPF_uint64_t" name="mpduDlAccepted" brief="Number of transmitted MAC PDUs"></field>
				<field type="NPF_uint64_t" name="msduCtrlUlAccepted" brief="Number of received and then accepted MAC SDUs containing MAC Control Messages"></field>
				<field type="NPF_uint64_t" name="msduCtrlDlAccepted" brief="Number of transmitted MAC SDUs containing MAC Control Messages"></field>
				<field type="NPF_uint64_t" name="dlSlotsTotal" brief="Total cumulative number of DL allocations slots (symbols * subchannels) which were available."></field>
				<field type="NPF_uint64_t" name="dlSlotsUsed" brief="Cumulative number of DL allocations slots (symbols * subchannels) which were used by the DL scheduler for data transmission."></field>
				<field type="NPF_uint64_t" name="ulSlotsTotal" brief="Total cumulative number of UL allocations slots (symbols * subchannels) which were available."></field>
				<field type="NPF_uint64_t" name="ulSlotsUsed" brief="Cumulative number of DL allocations slots (symbols * subchannels) which were used by the UL scheduler for data transmission."></field>
			</struct>
			<struct type="NPF_F_wmaxMacCpsSsStats_t" name="NPF_F_wmaxMacCpsSsStats_n">
				<descr>
          SS statistics structure.
          Container for statistics collected by MAC CPS functionality on per SS basis, used
          in callback for NPF_F_wmaxMacSsStatsGet function. The structure
          contains all statistics defined for SS; if collecting some of
          them is not enabled values returned for them are undefined and
          the caller should not use them.
        </descr>
				<see>NPF_F_wmaxMacCpsSsStatsGet</see>
				<see>NPF_F_wmaxMacCpsSsStatsConfig</see>
				<field type="NPF_uint8_t" name="ulRssiAvg" brief="Avarage RSSI value as calculated on uplink for this SS"></field>
				<field type="NPF_int8_t" name="ulCinrAvg" brief="Avarage CINR value as calculated on uplink for this SS"></field>
				<field type="NPF_uint64_t" name="ulHarqBurstReceived" brief="Number of successfully received uplink HARQ bursts."></field>
				<field type="NPF_uint64_t" name="ulHarqBurstDropped" brief="Number of uplink HARQ bursts that were not successfully received."></field>
				<field type="NPF_uint64_t" name="ulHarqBurstRetransmit" brief="Number of uplink HARQ retransmissions."></field>
				<field type="NPF_uint64_t" name="dlHarqBurstTransmit" brief="Number of acknowledged transmitted downlink HARQ bursts."></field>
				<field type="NPF_uint64_t" name="dlHarqBurstDropped" brief="Number of downlink HARQ bursts that were not acknowledged."></field>
				<field type="NPF_uint64_t" name="dlHarqBurstRetransmit" brief="Number of downlink HARQ retransmissions."></field>
			</struct>
			<struct type="NPF_F_wmaxMacCpsUlConnectionStats_t" name="NPF_F_wmaxMacCpsUlConnectionStats_n">
				<descr>
          Uplink Connection statistics structure.
          Container for statistics collected by MAC CPS functionality on per uplink connection basis, used
          in callback for NPF_F_wmaxMacCpsConnectionStatsGet function. The structure
          contains all statistics defined for uplink connection; if collecting some of
          them is not enabled values returned for them are undefined and
          the caller should not use them.
        </descr>
				<see>NPF_F_wmaxMacCpsConnectionStatsGet</see>
				<see>NPF_F_wmaxMacCpsConnectionStatsConfig</see>
				<field name="msduDroppedDuplicated" type="NPF_uint64_t" brief="Number of uplink and then dropped MAC-CPS SDUs due to duplication."></field>
				<field name="msduDroppedARQPurgeTimeout" type="NPF_uint64_t" brief="Number of uplink and then dropped MAC-CPS SDUs due to ARQ Purge Timeout expiration."></field>
				<field name="msduArqFeedback" type="NPF_uint64_t" brief="Number of generated ARQ Feedbacks for the connection."></field>
				<field name="msduArqResets" type="NPF_uint64_t" brief="Number of uplink ARQ Resets."></field>
				<field name="msduArqDiscard" type="NPF_uint64_t" brief="Number of uplink ARQ Discard messages received."></field>
				<field name="msduArqBlocks" type="NPF_uint64_t" brief="Number of uplink ARQ blocks."></field>
				<field name="msduFragments" type="NPF_uint64_t" brief="Number of uplink MAC-CPS SDU fragments."></field>
				<field name="msduTotalBytes" type="NPF_uint64_t" brief="Total number of bytes in received and then accepted MAC-CPS SDUs."></field>
				<field name="msduTotalPkts" type="NPF_uint64_t" brief="Number of successfully processed UL MAC-CPS SDUs (delivered to CS)."></field>
				<field name="mpduDroppedNoDecrypt" type="NPF_uint64_t" brief="Number of uplink and then dropped MAC-CPS PDUs due to inability to decrypt."></field>
				<field name="mpduDroppedBadType" type="NPF_uint64_t" brief="Number of uplink and then dropped MAC-CPS PDUs due to invalid type."></field>
				<field name="mpduDroppedBadCrc" type="NPF_uint64_t" brief="Number of uplink and then dropped MAC-CPS PDUs due to invalid CRC."></field>
				<field name="mpduDroppedBadPackSubhdr" type="NPF_uint64_t" brief="Number of uplink and then dropped MAC-CPS PDUs due to invalid packing sub-header."></field>
				<field name="mpduDroppedBadFragSubhdr" type="NPF_uint64_t" brief="Number of uplink and then dropped MAC-CPS PDUs due to invalid fragmentation sub-header."></field>
				<field name="mpduDroppedOther" type="NPF_uint64_t" brief="Number of uplink and then dropped MAC-CPS PDUs due to other reasons."></field>
				<field name="mpduTotalBytes" type="NPF_uint64_t" brief="Total number of bytes in received and then accepted MAC-CPS PDUs."></field>
				<field name="mpduTotalPkts" type="NPF_uint64_t" brief="Number of MAC-CPS PDUs received from PHY."></field>
			</struct>
			<struct type="NPF_F_wmaxMacCpsDlConnectionStats_t" name="NPF_F_wmaxMacCpsDlConnectionStats_n">
				<descr>
          Downlink Connection statistics structure.
          Container for statistics collected by MAC CPS functionality on per downlink connection basis, used
          in callback for NPF_F_wmaxMacCpsConnectionStatsGet function. The structure
          contains all statistics defined for downlink connection; if collecting some of
          them is not enabled values returned for them are undefined and
          the caller should not use them.
        </descr>
				<see>NPF_F_wmaxMacCpsConnectionStatsGet</see>
				<see>NPF_F_wmaxMacCpsConnectionStatsConfig</see>
				<field name="msduDroppedQoSConstraint" type="NPF_uint64_t" brief="Number of dropped DL packets due to QOS constraints (ie: max delay)."></field>
				<field name="msduDroppedArqBlockLifetime" type="NPF_uint64_t" brief="Number of downlink and then dropped MAC-CPS SDUs due to ARQ Block Lifetime expiration."></field>
				<field name="msduArqRetransmit" type="NPF_uint64_t" brief="Number of MAC-CPS SDU fragments retransmitted on ARQ retransmit requests."></field>
				<field name="msduArqFeedbackAccepted" type="NPF_uint64_t" brief="Number of received and accepted ARQ feedbacks for the connection."></field>
				<field name="msduArqFeedbackRejected" type="NPF_uint64_t" brief="Number of received and dropped ARQ feedbacks for the connection."></field>
				<field name="msduArqResets" type="NPF_uint64_t" brief="Number of transmitted ARQ resets."></field>
				<field name="msduArqBlocks" type="NPF_uint64_t" brief="Number of transmitted ARQ blocks."></field>
				<field name="msduFragments" type="NPF_uint64_t" brief="Number of transmitted MAC-CPS SDU fragments."></field>
				<field name="msduTotalBytes" type="NPF_uint64_t" brief="Total number of bytes in transmitted MAC-CPS SDUs."></field>
				<field name="msduTotalPkts" type="NPF_uint64_t" brief="Number of successfully processed MAC-CPS SDUs delivered to lower layers."></field>
				<field name="mpduDroppedNoEncrypt" type="NPF_uint64_t" brief="Number of MAC-CPS PDUs not transmitted due to inability to encrypt."></field>
				<field name="mpduDroppedOther" type="NPF_uint64_t" brief="Number of MAC-CPS PDUs not transmitted due to other reasons."></field>
				<field name="mpduTotalBytes" type="NPF_uint64_t" brief="Total number of bytes in transmitted MAC-CPS PDUs."></field>
				<field name="mpduTotalPkts" type="NPF_uint64_t" brief="Number of MAC-CPS PDUs delivered to PHY."></field>
			</struct>
			<struct type="NPF_F_wmaxMacCpsConnectionStats_t" name="NPF_F_wmaxMacCpsConnectionStats_n">
				<descr>
          Connection statistics structure.
          Container for statistics collected by MAC CPS functionality on per connection basis, used
          in callback for NPF_F_wmaxMacCpsConnectionStatsGet function. The structure
          contains all statistics defined for connection; if collecting some of
          them is not enabled values returned for them are undefined and
          the caller should not use them.
        </descr>
				<see>NPF_F_wmaxMacCpsConnectionStatsGet</see>
				<see>NPF_F_wmaxMacCpsConnectionStatsConfig</see>
				<selectunion type="NPF_F_wmaxMacCpsConnectionSpecStats_t" name="u">
					<selectfield type="NPF_F_wmaxMacCpsDirection_t" name="dir" brief="Direction of the connection.">
					</selectfield>
					<field type="NPF_F_wmaxMacCpsDlConnectionStats_t" name="dl">
						<descr>Downlink connection specific statistics.</descr>
						<selector>NPF_F_WMAX_MAC_CPS_DIR_DL</selector>
					</field>
					<field type="NPF_F_wmaxMacCpsUlConnectionStats_t" name="ul">
						<descr>Uplink connection specific statistics.</descr>
						<selector>NPF_F_WMAX_MAC_CPS_DIR_UL</selector>
					</field>
				</selectunion>
			</struct>
			<enum type="NPF_F_wmaxMacCpsErrorType_t" name="e5">
				<descr>
          MAC Error Type.
          Defines the MAC specific error types.
          This data type is used to indicate the presences and type of an error
          that occurred while processing an asynchronous operation.
        </descr>
				<field name="NPF_F_WMAX_MAC_CPS_ERROR_NO_ERROR" value="NPF_NO_ERROR" brief="The operation completed successfully.">
				</field>
				<field name="NPF_F_WMAX_MAC_CPS_ERROR_OBJ_EXISTS" value="NPF_F_WMAX_BASE_ERR" brief="MAC object creation failed since the requested MAC object already exists.">
				</field>
				<field name="NPF_F_WMAX_MAC_CPS_ERROR_NO_RES" brief="The operation failed since there are no free resources (for example memory).">
				</field>
				<field name="NPF_F_WMAX_MAC_CPS_ERROR_INVALID_PARAMS" brief="The operation failed since the specified parameters are invalid.">
				</field>
				<field name="NPF_F_WMAX_MAC_CPS_ERROR_OBJ_NONEXISTANT" brief="The operation on the MAC object failed since the MAC object does not exist.">
				</field>
				<field name="NPF_F_WMAX_MAC_CPS_ERROR_OBJ_INVALID_STATE" brief="The operation on an MAC object failed since the object state does not allow for the operation.">
				</field>
				<field name="NPF_F_WMAX_MAC_CPS_ERROR_TIME_OUT" brief="The operation failed due to time out.">
				</field>
				<field name="NPF_F_WMAX_MAC_CPS_ERROR_INTERRUPTED" brief="The operation has been interrupted due to another FAPI call (for example the MAC object has been deleted).">
				</field>
			</enum>
			<struct type="NPF_F_wmaxMacCpsDfsReportResult_t" name="s1">
				<descr>
          The result for a MAC DFS Report request.
        </descr>
				<see>NPF_F_wmaxMacCpsDfsReportRequest</see>
				<field type="NPF_uint32_t" name="data" brief="">
				</field>
			</struct>
			<define brief="MAC Common Part Sublayer PHY Capabilities">
				<descr>
          These bits are returned in NPF_F_wmaxMacCpsCapabilitiesGetResult_t.phyCapsMask.
        </descr>
				<field name="NPF_F_WMAX_MAC_CPS_PHY_CAPS_OFDM" brief="MAC-CPS supports IEEE 802.16-2004 OFDM PHY.">
					<value>(1 &lt;&lt; 0)</value>
				</field>
				<field name="NPF_F_WMAX_MAC_CPS_PHY_CAPS_OFDMA" brief="MAC-CPS supports P802.16e/D7 OFDMA PHY.">
					<value>(1 &lt;&lt; 1)</value>
				</field>
			</define>
			<struct type="NPF_F_wmaxMacCpsCapabilitiesGetResult_t" name="s1">
				<descr>
          The result of a MAC Capabilities Get request.
        </descr>
				<see>NPF_F_wmaxMacCpsCapabilitiesGet</see>
				<field name="swVer" type="NPF_F_wmaxMacCpsSwVer_t" brief="MAC software version.">
				</field>
				<field name="phyCapsMask" type="NPF_uint8_t" brief="Mask indicating which PHYs are supported.">
				</field>
				<field name="maxMacInstance" type="NPF_uint16_t" brief="Maximum number of supported MAC entities.">
				</field>
				<field name="maxSS" type="NPF_uint16_t" brief="Maximum number of supported SSs across all MAC entities. NOTE: in the case of SS this value will allways be equal to maxMacInstance.">
				</field>
				<field name="maxConn" type="NPF_uint16_t" brief="Maximum number of supported connections across all MAC entities.">
				</field>
				<field name="maxSA" type="NPF_uint16_t" brief="Maximum number of supported security associations across all MAC instances.">
				</field>
				<field name="maxPduSize" type="NPF_uint16_t" brief="Maximum size of MAC PDU">
				</field>
				<field name="maxSduSize" type="NPF_uint16_t" brief="Maximum size of MAC SDU">
				</field>
				<field name="maxFragSize" type="NPF_uint16_t" brief="Maximum fragment size">
				</field>
				<field name="minFragSize" type="NPF_uint16_t" brief="Minimum fragment size">
				</field>
			</struct>
			<struct type="NPF_F_wmaxMacCpsRadioFrameNumGetResult_t" name="n2">
				<descr>
          The result of a MAC Radio Frame Number Get request.
        </descr>
				<see>NPF_F_wmaxMacCpsRadioFrameNumGet</see>
				<field type="NPF_F_wmaxMacCpsObjId_t" name="id" brief="MAC Instance ID">
				</field>
				<field name="num" type="NPF_uint32_t" brief="Radio Frame Number.">
				</field>
			</struct>
			<struct type="NPF_F_wmaxMacCpsOfdmaZoneAddResults_t" name="" brief="OFDMA PHY Zone Specific objects">
				<descr>
          This data structure returns the OFDMA PHY Zone Specific objects created during the zone creation.
        </descr>
				<field name="zoneID" type="NPF_F_wmaxMacCpsObjId_t" brief="ID of the zone.">
				</field>
				<vector type="NPF_F_wmaxMacCpsSubAllocId_t" name="areas">
					<descr>
            This table contains Sub-allocations created for this zones.
          </descr>
					<length type="NPF_uint32_t" name="areasNum">
					</length>
				</vector>
			</struct>
		</section>
		<section name="Result of MAC CPS Instance Creation request">
			<struct type="NPF_F_wmaxMacCpsOfdmObjs_t" name="" brief="OFDM PHY Specific Objects">
				<descr>
				This data structure contains the OFDM PHY Specific objects created during MAC CPS Instance creation.
				</descr>
				<field name="tbd" type="NPF_uint32_t" brief="TBD">
				</field>
			</struct>
			<struct type="NPF_F_wmaxMacCpsOfdmaObjs_t" name="" brief="OFDMA PHY Specific Objects">
				<descr>
				This data structure contains the OFDMA PHY Specific objects created during MAC CPS Instance creation.
				</descr>
				<vector type="NPF_F_wmaxMacCpsOfdmaZoneAddResults_t" name="dlZones">
					<descr>
						This table contains DL OFDMA zones created during MAC CPS Instance creation.
					</descr>
					<length type="NPF_uint32_t" name="dlZonesNum">
					</length>
				</vector>
				<vector type="NPF_F_wmaxMacCpsOfdmaZoneAddResults_t" name="ulZones">
					<descr>
						This table contains UL OFDMA zones created during MAC CPS Instance creation.
					</descr>
					<length type="NPF_uint32_t" name="ulZonesNum">
					</length>
				</vector>
			</struct>
			<struct type="NPF_F_wmaxMacCpsInstanceAddResult_t" name="s2">
				<descr>
				The result for a MAC Instance Add request.
				</descr>
				<see>NPF_F_wmaxMacCpsInstanceAdd</see>
				<field type="NPF_F_wmaxMacCpsObjId_t" name="macId">
					<descr>Identifier of the created MAC Instance.</descr>
				</field>
				<field type="NPF_F_wmaxMacCpsObjId_t" name="ssId">
					<descr>
					On the BS, the identifier of the automaticaly created special SS object used for management of the UL Initial Ranging Connection and the DL Broadcast Connection.
					On the SS, the identifier of the automaticaly created SS object representing this SS, which should be used always when SS object ID is needed.
					</descr>
				</field>
				<field type="NPF_F_wmaxMacCpsObjId_t" name="initRangingUlConnId">
					<descr>Identifier of the created UL Initial Ranging Connection. 
					In the case of BS, over this connection the BS Control Plane will receive incoming Range Requests.
					In the case of SS, the SS Control Plane will use this connection to transmit Range Requests.
					</descr>
				</field>
				<field type="NPF_F_wmaxMacCpsObjId_t" name="broadcastDlConnId">
					<descr>Identifier of the created DL Broadcast Connection. 
					In the case of BS, this connection will be used by the BS Control Plane to transmit DCD and UCD messages.
					In the case of SS, over this connection the SS Control Plane will receive incoming DCD and UCD messages.
					</descr>
				</field>
				<field type="NPF_F_wmaxMacCpsObjId_t" name="initRangingDlConnId">
					<descr>Identifier of the created DL Initial Ranging Connection. 
					In the case of BS, the BS Control Plane will use this connection to transmit Range Responses.
					In the case of SS, over this connection the SS Control Plane will recieve incoming Range Responses.
					</descr>
				</field>
				<field type="NPF_F_wmaxMacCpsObjId_t" name="sleepModeMulticastDlConnId">
					<descr> 
						Identifier of the created Sleep Mode Multicast Connection (DL). 
						In the case of BS, the BS Control Plane will use this connection to
						transmit traffic indication messages (MOB_TRF-IND). 
						In the case of SS, the SS Control Plane will recieve incoming traffic indication requests.
						Used only for 802.16-2005-compilant version.
					</descr>
				</field>
				<field type="NPF_F_wmaxMacCpsObjId_t" name="idleModeMulticastDlConnId">
					<descr> 
						Identifier of the created Idle Mode Multicast Connection (DL). 
						In the case of BS, the BS Control Plane will use this connection to
						transmit paging messages (MOB_PAG-ADV). 
						In the case of SS, over this connection the SS Control Plane will recieve incoming paging requests.
						Used only for 802.16-2005-compilant version.
					</descr>
				</field>
				<field type="NPF_F_wmaxMacCpsObjId_t" name="fragmBroadcastDlConnId">
					<descr> Used by the BS for transmission of management broadcast information
					with fragmentation. The fragment sub header shall use 11-bit long FSN on this connection.
					802.16-2005-compilant version.
					</descr>
				</field>
				<selectunion type="NPF_F_wmaxMacCpsPhySpecificObjsUnion_t" name="u">
					<selectfield type="NPF_F_wmaxMacCpsPhyType_t" name="phyType" brief="Type of PHY.">
					</selectfield>
					<field type="NPF_F_wmaxMacCpsOfdmaObjs_t" name="ofdma">
						<descr>OFDMA specific objects.</descr>
						<selector>NPF_F_WMAX_MAC_CPS_PHY_TYPE_OFDMA</selector>
					</field>
					<field type="NPF_F_wmaxMacCpsOfdmObjs_t" name="ofdm">
						<descr>OFDM specific objects.</descr>
						<selector>NPF_F_WMAX_MAC_CPS_PHY_TYPE_OFDM</selector>
					</field>
				</selectunion>
			</struct>
			<struct type="NPF_F_wmaxMacCpsSaPnGetResult_t" name="s2">
				<descr>
          The result of a Current Packet Numbers Get request.
        </descr>
				<see>NPF_F_wmaxMacCpsSaPnGet</see>
				<field name="oldDlPn" type="NPF_uint32_t" brief="Downlink Packet Number Counter contents for old TEK.">
				</field>
				<field name="oldUlPn" type="NPF_uint32_t" brief="Uplink Packet Number Counter contents for old TEK.">
				</field>
				<field name="newDlPn" type="NPF_uint32_t" brief="Downlink Packet Number Counter contents for new TEK.">
				</field>
				<field name="newUlPn" type="NPF_uint32_t" brief="Uplink Packet Number Counter contents for new TEK.">
				</field>
				<field type="NPF_F_wmaxMacCpsSaId_t" name="dpId" brief="Security Association ID.">
				</field>
			</struct>
		</section>
		<enum type="NPF_F_wmaxMacCpsCallbackType_t" name="e1">
			<descr>
			MAC Callback Type.
			Used to identify which FAPI call triggered the callback being invoked.
			The user then de-multiplexes this type to identify which routine should
			handle the callback.
			</descr>
			<field name="NPF_F_WMAX_MAC_CPS_CALLBACK_INSTANCE_ADD" value="0" brief="Callback after NPF_F_wmaxMacCpsInstanceAdd.">
			</field>
			<field name="NPF_F_WMAX_MAC_CPS_CALLBACK_SET_PHY_SAP_ADDR" brief="Callback after NPF_F_wmaxMacCpsSetPhySapAddr.">
			</field>
			<field name="NPF_F_WMAX_MAC_CPS_CALLBACK_INSTANCE_DEL" brief="Callback after NPF_F_wmaxMacCpsInstanceDel.">
			</field>
			<field name="NPF_F_WMAX_MAC_CPS_CALLBACK_INSTANCE_STATE_CHG" brief="Callback after NPF_F_wmaxMacCpsInstanceStateChange.">
			</field>
			<field name="NPF_F_WMAX_MAC_CPS_CALLBACK_STATS_CONFIG" brief="Callback after NPF_F_wmaxMacCpsStatsConfig.">
			</field>
			<field name="NPF_F_WMAX_MAC_CPS_CALLBACK_STATS_GET" brief="Callback after NPF_F_wmaxMacCpsStatsGet.">
			</field>
			<field name="NPF_F_WMAX_MAC_CPS_CALLBACK_INSTANCE_STATS_CONFIG" brief="Callback after NPF_F_wmaxMacCpsInstanceStatsConfig.">
			</field>
			<field name="NPF_F_WMAX_MAC_CPS_CALLBACK_INSTANCE_STATS_GET" brief="Callback after NPF_F_wmaxMacCpsInstanceStatsGet.">
			</field>
			<field name="NPF_F_WMAX_MAC_CPS_CALLBACK_ZONE_ADD" brief="Callback after NPF_F_wmaxMacCpsZoneAdd.">
			</field>
			<field name="NPF_F_WMAX_MAC_CPS_CALLBACK_ZONE_DEL" brief="Callback after NPF_F_wmaxMacCpsZoneDel.">
			</field>
			<field name="NPF_F_WMAX_MAC_CPS_CALLBACK_SUBALLOC_ADD" brief="Callback after NPF_F_wmaxMacCpsSubAllocAdd.">
			</field>
			<field name="NPF_F_WMAX_MAC_CPS_CALLBACK_SUBALLOC_DEL" brief="Callback after NPF_F_wmaxMacCpsSubAllocDel.">
			</field>
			<field name="NPF_F_WMAX_MAC_CPS_CALLBACK_SS_ADD" brief="Callback after NPF_F_wmaxMacCpsSsAdd.">
			</field>
			<field name="NPF_F_WMAX_MAC_CPS_CALLBACK_SS_CHG_CFG" brief="Callback after NPF_F_wmaxMacCpsSsChangeCfg.">
			</field>
			<field name="NPF_F_WMAX_MAC_CPS_CALLBACK_SS_CHG_RT" brief="Callback after NPF_F_wmaxMacCpsSsChangeRunTime.">
			</field>
			<field name="NPF_F_WMAX_MAC_CPS_CALLBACK_SS_CHG_ZONE" brief="Callback after NPF_F_wmaxMacCpsSsChangeZone.">
			</field>
			<field name="NPF_F_WMAX_MAC_CPS_CALLBACK_SS_ENABLE" brief="Callback after NPF_F_wmaxMacCpsSsEnable.">
			</field>
			<field name="NPF_F_WMAX_MAC_CPS_CALLBACK_SS_DISABLE" brief="Callback after NPF_F_wmaxMacCpsSsDisable.">
			</field>
			<field name="NPF_F_WMAX_MAC_CPS_CALLBACK_SS_DEL" brief="Callback after NPF_F_wmaxMacCpsSsDel.">
			</field>
			<field name="NPF_F_WMAX_MAC_CPS_CALLBACK_SS_STATS_CONFIG" brief="Callback after NPF_F_wmaxMacCpsSsStatsConfig.">
			</field>
			<field name="NPF_F_WMAX_MAC_CPS_CALLBACK_SS_STATS_GET" brief="Callback after NPF_F_wmaxMacCpsSsStatsGet.">
			</field>
			<field name="NPF_F_WMAX_MAC_CPS_CALLBACK_SA_ADD" brief="Callback after NPF_F_wmaxMacCpsSaAdd.">
			</field>
			<field name="NPF_F_WMAX_MAC_CPS_CALLBACK_SA_DEL" brief="Callback after NPF_F_wmaxMacCpsSaDel.">
			</field>
			<field name="NPF_F_WMAX_MAC_CPS_CALLBACK_SA_KEY_CHG" brief="Callback after NPF_F_wmaxMacCpsSecKeyAdd.">
			</field>
			<field name="NPF_F_WMAX_MAC_CPS_CALLBACK_SA_PN_GET" brief="Callback after NPF_F_wmaxMacCpsSaPnGet.">
			</field>
			<field name="NPF_F_WMAX_MAC_CPS_CALLBACK_ALL_SEC_KEY_DEL" brief="Callback after NPF_F_wmaxMacCpsAllSecKeysDel.">
			</field>
			<field name="NPF_F_WMAX_MAC_CPS_CALLBACK_CONN_ADD" brief="Callback after NPF_F_wmaxMacCpsConnectionAdd.">
			</field>
			<field name="NPF_F_WMAX_MAC_CPS_CALLBACK_CONN_CHG" brief="Callback after NPF_F_wmaxMacCpsConnectionChange.">
			</field>
			<field name="NPF_F_WMAX_MAC_CPS_CALLBACK_CONN_GET_DL_EMPTY" brief="Callback after NPF_F_wmaxMacCpsConnectionGedDleEmptyState.">
			</field>
			<field name="NPF_F_WMAX_MAC_CPS_CALLBACK_CONN_DEL" brief="Callback after NPF_F_wmaxMacCpsConnectionDel.">
			</field>
			<field name="NPF_F_WMAX_MAC_CPS_CALLBACK_CONN_STATS_CONFIG" brief="Callback after NPF_F_wmaxMacCpsConnectionStatsConfig.">
			</field>
			<field name="NPF_F_WMAX_MAC_CPS_CALLBACK_CONN_STATS_GET" brief="Callback after NPF_F_wmaxMacCpsConnectionStatsGet.">
			</field>
			<field name="NPF_F_WMAX_MAC_CPS_CALLBACK_MCAST_GRP_ADD" brief="Callback after NPF_F_wmaxMacCpsMcastGrpAdd.">
				<descr>
				(NOTE: BS only).
				</descr>
			</field>
			<field name="NPF_F_WMAX_MAC_CPS_CALLBACK_MCAST_GRP_DEL" brief="Callback after NPF_F_wmaxMacCpsMcastGrpDel.">
				<descr>
				(NOTE: BS only).
				</descr>
			</field>
			<field name="NPF_F_WMAX_MAC_CPS_CALLBACK_MCAST_GRP_CHG" brief="Callback after NPF_F_wmaxMacCpsMcastGrpChange.">
				<descr>
				(NOTE: BS only).
				</descr>
			</field>
			<field name="NPF_F_WMAX_MAC_CPS_CALLBACK_SIGNALING_REQUEST" brief="Callback after NPF_F_wmaxMacCpsSignalingRequest.">
			</field>
			<field name="NPF_F_WMAX_MAC_CPS_CALLBACK_DFS_REP_REQUEST" brief="Callback after NPF_F_wmaxMacCpsDfsReportRequest.">
			</field>
			<field name="NPF_F_WMAX_MAC_CPS_CALLBACK_SCHEDULER_STATE_CHG" brief="Callback after NPF_F_wmaxMacCpsSchedulingStateChange.">
			</field>
			<field name="NPF_F_WMAX_MAC_CPS_CALLBACK_SCHEDULER_PARAMS_CHG" brief="Callback after NPF_F_wmaxMacCpsSchedulerParamsChange.">
				<descr>
				(NOTE: BS only).
				</descr>
			</field>
			<field name="NPF_F_WMAX_MAC_CPS_CALLBACK_CAPABILITIES_GET" brief="Callback after NPF_F_wmaxMacCpsCapabilitiesGet.">
			</field>
			<field name="NPF_F_WMAX_MAC_CPS_CALLBACK_BP_SETS_DEF" brief="Callback after NPF_F_wmaxMacCpsBurstProfileSetsDefine.">
			</field>
			<field name="NPF_F_WMAX_MAC_CPS_CALLBACK_ACTIVE_BP_CHG" brief="Callback after NPF_F_wmaxMacCpsActiveBurstProfileChange.">
				<descr>
				(NOTE: BS only).
				</descr>
			</field>
			<field name="NPF_F_WMAX_MAC_CPS_CALLBACK_TRACE_ENABLE" brief="Callback after NPF_F_wmaxMacCpsTraceEnable.">
			</field>
			<field name="NPF_F_WMAX_MAC_CPS_CALLBACK_TRACE_DISABLE" brief="Callback after NPF_F_wmaxMacCpsTraceDisable.">
			</field>
			<field name="NPF_F_WMAX_MAC_CPS_CALLBACK_RADIO_FRAME_NUM_GET" brief="Callback after NPF_F_wmaxMacCpsRadioFrameNumGet.">
			</field>
			<field name="NPF_F_WMAX_MAC_CPS_CALLBACK_CQI_SET" brief="Callback after NPF_F_wmaxMacCpsSsSetCqich.">
			</field>
			<field name="NPF_F_WMAX_MAC_CPS_CALLBACK_CQI_DEL" brief="Callback after NPF_F_wmaxMacCpsSsDelCqich.">
			</field>
			<field name="NPF_F_WMAX_MAC_CPS_CALLBACK_SLEEP_DEACTIVATE" brief="Callback after NPF_F_wmaxMacCpsSleepDeactivate.">
			</field>
			
		</enum>
		<struct type="NPF_F_wmaxMacCpsAsyncRespData_t">
			<selectunion type="NPF_F_wmaxMacCpsAsyncRespDataUnion_t" name="u">
				<selectfield type="NPF_F_wmaxMacCpsCallbackType_t" name="type" brief="Response data type.">
				</selectfield>
				<field type="NPF_F_wmaxMacCpsObjId_t" name="objResp">
					<descr>Identifier of the created object. This field has meaning in the case of callback being a response to one of the following functions:
					NPF_F_wmaxMacCpsSsAdd, NPF_F_wmaxMacCpsSaAdd, NPF_F_wmaxMacCpsConnectionAdd or NPF_F_wmaxMacCpsMcastGrpAdd.</descr>
					<selector>NPF_F_WMAX_MAC_CPS_CALLBACK_SS_ADD</selector>
					<selector>NPF_F_WMAX_MAC_CPS_CALLBACK_SA_ADD</selector>
					<selector>NPF_F_WMAX_MAC_CPS_CALLBACK_CONN_ADD</selector>
					<selector>NPF_F_WMAX_MAC_CPS_CALLBACK_MCAST_GRP_ADD</selector>
				</field>
				<field type="NPF_F_wmaxMacCpsInstanceAddResult_t" name="instanceAddResp">
					<descr>Response to NPF_F_wmaxMacCpsInstanceAdd function.</descr>
					<selector>NPF_F_WMAX_MAC_CPS_CALLBACK_INSTANCE_ADD</selector>
				</field>
				<field type="NPF_F_wmaxMacCpsOfdmaZoneAddResults_t" name="zoneAddResp">
					<descr>Response to NPF_F_wmaxMacCpsZoneAdd function.</descr>
					<selector>NPF_F_WMAX_MAC_CPS_CALLBACK_ZONE_ADD</selector>
				</field>
				<field type="NPF_F_wmaxMacCpsStats_t" name="statsGetResp">
					<descr>Response to NPF_F_wmaxMacCpsStatsGet function.</descr>
					<selector>NPF_F_WMAX_MAC_CPS_CALLBACK_STATS_GET</selector>
				</field>
				<field type="NPF_F_wmaxMacCpsInstanceStats_t" name="instanceStatsGetResp">
					<descr>Response to NPF_F_wmaxMacCpsInstanceStatsGet function.</descr>
					<selector>NPF_F_WMAX_MAC_CPS_CALLBACK_INSTANCE_STATS_GET</selector>
				</field>
				<field type="NPF_F_wmaxMacCpsSsStats_t" name="ssStatsGetResp">
					<descr>Response to NPF_F_wmaxMacCpsSsStatsGet function.</descr>
					<selector>NPF_F_WMAX_MAC_CPS_CALLBACK_SS_STATS_GET</selector>
				</field>
				<field type="NPF_F_wmaxMacCpsConnectionStats_t" name="connStatsGetResp">
					<descr>Response to NPF_F_wmaxMacCpsConnectionStatsGet function.</descr>
					<selector>NPF_F_WMAX_MAC_CPS_CALLBACK_CONN_STATS_GET</selector>
				</field>
				<field type="NPF_F_wmaxMacCpsDfsReportResult_t" name="dfsResp">
					<descr>Response to NPF_F_wmaxMacCpsDfsReportRequest function.</descr>
					<selector>NPF_F_WMAX_MAC_CPS_CALLBACK_DFS_REP_REQUEST</selector>
				</field>
				<field type="NPF_F_wmaxMacCpsCapabilitiesGetResult_t" name="capabilitiesGetResp">
					<descr>Response to NPF_F_wmaxMacCpsCapabilitiesGet function.</descr>
					<selector>NPF_F_WMAX_MAC_CPS_CALLBACK_CAPABILITIES_GET</selector>
				</field>
				<field type="NPF_F_wmaxMacCpsRadioFrameNumGetResult_t" name="radioFrameNumGetResp">
					<descr>Response to NPF_F_wmaxMacCpsRadioFrameNumGet function.</descr>
					<selector>NPF_F_WMAX_MAC_CPS_CALLBACK_RADIO_FRAME_NUM_GET</selector>
				</field>
				<field type="NPF_F_wmaxMacCpsSaPnGetResult_t" name="saPnGetResp">
					<descr>Response to NPF_F_wmaxMacCpsSaPnGet function.</descr>
					<selector>NPF_F_WMAX_MAC_CPS_CALLBACK_SA_PN_GET</selector>
				</field>
				<field type="NPF_uint32_t" name="unusedResp" brief="Unused variable, associated with all callbacks not returning any value.">
					<descr>
					</descr>
					<selector>NPF_F_WMAX_MAC_CPS_CALLBACK_SET_PHY_SAP_ADDR</selector>
					<selector>NPF_F_WMAX_MAC_CPS_CALLBACK_CONN_DEL</selector>
					<selector>NPF_F_WMAX_MAC_CPS_CALLBACK_CONN_CHG</selector>
					<selector>NPF_F_WMAX_MAC_CPS_CALLBACK_SS_CHG_CFG</selector>
					<selector>NPF_F_WMAX_MAC_CPS_CALLBACK_SS_CHG_RT</selector>
					<selector>NPF_F_WMAX_MAC_CPS_CALLBACK_SS_CHG_ZONE</selector>
					<selector>NPF_F_WMAX_MAC_CPS_CALLBACK_SS_DEL</selector>
					<selector>NPF_F_WMAX_MAC_CPS_CALLBACK_SA_DEL</selector>
					<selector>NPF_F_WMAX_MAC_CPS_CALLBACK_MCAST_GRP_DEL</selector>
					<selector>NPF_F_WMAX_MAC_CPS_CALLBACK_MCAST_GRP_CHG</selector>
					<selector>NPF_F_WMAX_MAC_CPS_CALLBACK_SA_KEY_CHG</selector>
					<selector>NPF_F_WMAX_MAC_CPS_CALLBACK_ALL_SEC_KEY_DEL</selector>
					<selector>NPF_F_WMAX_MAC_CPS_CALLBACK_SIGNALING_REQUEST</selector>
					<selector>NPF_F_WMAX_MAC_CPS_CALLBACK_INSTANCE_DEL</selector>
					<selector>NPF_F_WMAX_MAC_CPS_CALLBACK_SCHEDULER_PARAMS_CHG</selector>
					<selector>NPF_F_WMAX_MAC_CPS_CALLBACK_BP_SETS_DEF</selector>
					<selector>NPF_F_WMAX_MAC_CPS_CALLBACK_ACTIVE_BP_CHG</selector>
					<selector>NPF_F_WMAX_MAC_CPS_CALLBACK_STATS_CONFIG</selector>
					<selector>NPF_F_WMAX_MAC_CPS_CALLBACK_INSTANCE_STATS_CONFIG</selector>
					<selector>NPF_F_WMAX_MAC_CPS_CALLBACK_SS_STATS_CONFIG</selector>
					<selector>NPF_F_WMAX_MAC_CPS_CALLBACK_CONN_STATS_CONFIG</selector>
					<selector>NPF_F_WMAX_MAC_CPS_CALLBACK_CONN_GET_DL_EMPTY</selector>
					<selector>NPF_F_WMAX_MAC_CPS_CALLBACK_TRACE_ENABLE</selector>
					<selector>NPF_F_WMAX_MAC_CPS_CALLBACK_TRACE_DISABLE</selector>
					<selector>NPF_F_WMAX_MAC_CPS_CALLBACK_SCHEDULER_STATE_CHG</selector>
					<selector>NPF_F_WMAX_MAC_CPS_CALLBACK_INSTANCE_STATE_CHG</selector>
					<selector>NPF_F_WMAX_MAC_CPS_CALLBACK_CQI_SET</selector>
					<selector>NPF_F_WMAX_MAC_CPS_CALLBACK_CQI_DEL</selector>
				</field>
			</selectunion>
		</struct>
		<struct type="NPF_F_wmaxMacCpsAsyncResponse_t" name="s1">
			<descr>
			MAC Asynchronous FAPI Call Response.
			This data structure contains results of an asynchronous FAPI operation.
			</descr>
			<field type="NPF_F_wmaxMacCpsErrorType_t" name="error" brief="Operation results.">
			</field>
			<field type="NPF_F_wmaxMacCpsObjId_t" name="calledObj" brief="Identifier of an object the function call was called for.">
			</field>
			<field type="NPF_F_wmaxMacCpsAsyncRespData_t" name="respData" brief="Operation result data.">
			</field>
		</struct>
		<struct type="NPF_F_wmaxMacCpsCallbackData_t" brief="MAC request callback data">
			<descr>
			The data structure contains asynchronous operation results
			passed to FAPI clients using callbacks. The callback function
			receives this structure containing one or more asynchronous
			responses from a single function call.
			There is one element for each completed request, regardless
			of whether they were successful: the respArray contains respNum pointers
			to structures of the type NPF_F_wmaxMacCpsAsyncResponse_t.
			Callback function invocations are repeated until all requests 
			are complete. Responses are not repeated for request elements
			already indicated as complete in earlier callback function invocations.
			</descr>
			<field type="NPF_F_wmaxMacCpsCallbackType_t" name="type" brief="Asynchronous procedure type.">
			</field>
			<field type="NPF_boolean_t" name="allOK" brief="TRUE if all requests completed OK.">
			</field>
			<vector type="NPF_F_wmaxMacCpsAsyncResponse_t" name="respArray">
				<descr>
				Array of response structures containing respNum entries.
				</descr>
				<length type="NPF_uint32_t" name="respNum" brief="Number of responses in respArray.">
				</length>
			</vector>
		</struct>
		<functype name="NPF_F_wmaxMacCpsRequestCallback_t" type="void" class="callback">
			<descr>
			Request Callback Prototype.
			This function is used for handling request confirmation notifications.
			The callback function is for the application to register a request confirmation notifications
			handling routine to the 802.16 MAC FAPI implementation. It is intended to be
			implemented by the application, and to be registered to the 802.16 FAPI 
			implementation through the NPF_F_wmaxMacCpsCallbackRegister function.
			</descr>
			<param io="in" type="NPF_userContext_t" name="context">
				<descr>
					The context item that was supplied by the application 
					when the 802.16 MAC FAPI function call was invoked.
				</descr>
			</param>
			<param io="in" type="NPF_correlator_t" name="correlator">
				<descr>
				A unique application invocation context that was supplied during calling a function call.
				</descr>
			</param>
			<param io="in" type="NPF_F_wmaxMacCpsCallbackData_t" name="data">
				<descr>
				The callback notification data. 
				</descr>
			</param>
		</functype>
		<func name="NPF_F_wmaxMacCpsRequestRegister" type="NPF_error_t" class="cback_register">
			<descr>
			Request Callback Registration.
			This function is used to register a status callback notification handler to receive
			callback notifications of MAC protocol requests.
			This function operates in a synchronous manner.	
			The function allows the application
			to register a completion callback function for the related callback category,
			and to associate a unique callback handle and application context.
			Upper layers can register multiple callback functions using this function.
			The callback function is identified by a userContext and requestCallbackFunc pair.
			For each pair, a unique callbackHandle is assigned for future
			reference. Because the callback function is identified by both userContext and
			requestCallbackFunc, duplicate registration of the same callback function with a different
			userContext is allowed. Also, the same userContext can be shared among different
			callback functions. Duplicate registration of the same pair of userContext and requestCallbackFunc
			has no effect; it will output a handle that is already assigned to the pair
			and return NPF_E_ALREADY_REGISTERED.
			</descr>
			<param name="userContext" io="in" type="NPF_userContext_t">
				<descr>
				The context item provided to the request callback routine 
				when it is invoked.
				</descr>
			</param>
			<param name="requestCallbackFunc" io="in" type="NPF_F_wmaxMacCpsRequestCallback_t">
				<descr>
				The function pointer to the notification callback function 
				to be called for events.
				</descr>
			</param>
			<param name="callbackHandle" io="out" type="NPF_callbackHandle_t*">
				<descr>
				A unique identifier related to this registration.
				</descr>
			</param>
			<return>
				<descr>Error code indicating function success.</descr>
				<retval name="NPF_NO_ERROR">
					<descr>The registration completed successfully.</descr>
				</retval>
				<retval name="NPF_E_BAD_CALLBACK_FUNCTION">
					<descr>
					The registration was invoked with a function pointer parameter that was invalid.
					</descr>
				</retval>
				<retval name="NPF_E_CALLBACK_ALREADY_REGISTERED">
					<descr>
					The registration was invoked with 
					a pair composed of a function pointer and a user context which was previously 
					used for an identical registration.
					</descr>
				</retval>
				<retval name="NPF_E_UNKNOWN">
					<descr>Used to indicate other errors not listed above.</descr>
				</retval>
			</return>
		</func>
		<func name="NPF_F_wmaxMacCpsRequestDeregister" type="NPF_error_t" xdrid="RPC_WMAX_MAC_REQ_DEREG" class="cback_deregister">
			<descr>
			Request Callback De-registration.
			This function is used to deregister a request callback handler, which was previously
			registered to receive callback notifications of MAC protocol request statuses.
			It may be invoked by any application no longer interested in receiving status notifications.
			Note: This function operates in a synchronous manner. There may be a timing window where
			outstanding callback continue to be delivered to the callback routine after the de-registration
			function has been invoked. It is the responsibility of implementation to guarantee that the request callback
			function is not called after the deregister function has returned.
			</descr>
			<param io="in" type="NPF_callbackHandle_t" name="callbackHandle">
				<descr>
				The unique identifier returned to the application when the
				request callback routine was registered.
				</descr>
			</param>
			<return>
				<descr>
				Error code indicating function success.
				</descr>
				<retval name="NPF_NO_ERROR">
					<descr>The operation completed successfully.</descr>
				</retval>
				<retval name="NPF_E_BAD_CALLBACK_HANDLE">
					<descr>
					A function was invoked with a callback handle that did not
					correspond to a valid NPF callback handle as returned by a registration function.
					</descr>
				</retval>
				<retval name="NPF_E_UNKNOWN">
					<descr>
					Indicates other errors.
					</descr>
				</retval>
			</return>
		</func>
	</section>
	<section name="Events">
		<enum type="NPF_F_wmaxMacCpsEventType_t" name="e5">
			<descr>
			MAC Event Type.
			Defines the MAC Event types.
			This data type is used to indicate type of an event that occurred.
			</descr>
			<field name="NPF_F_WMAX_MAC_CPS_EVENT_SIGNALING" value="0" brief="A MAC Signaling Protocol message.">
			</field>
			<field name="NPF_F_WMAX_MAC_CPS_EVENT_CINR_RSSI_OUT_OF_RANGE" brief="The CINR and/or RSSI parameter for a SS is out of range.">
			</field>
			<field name="NPF_F_WMAX_MAC_CPS_EVENT_CDMA_REQ" brief="A CDMA request message.">
			</field>
			<field name="NPF_F_WMAX_MAC_CPS_EVENT_OVERCOMMITED" brief="The MAC layer detected a permanent queue overflow. (NOTE: BS ONLY).">
			</field>
			<field name="NPF_F_WMAX_MAC_CPS_EVENT_INVALID_EKS" brief="The MAC layer detected invalid EKS usage.">
			</field>
			<field name="NPF_F_WMAX_MAC_CPS_EVENT_TRACE" brief="A MAC layer trace.">
			</field>
			<field name="NPF_F_WMAX_MAC_CPS_EVENT_SS_INACTIVE" brief="A predefined number of empty burst has been received from a SS. (NOTE: BS ONLY).">
			</field>
			<field name="NPF_F_WMAX_MAC_CPS_EVENT_PHY_DOWN" brief="PHY State changed to down for a given MAC Instance.">
			</field>
			<field name="NPF_F_WMAX_MAC_CPS_EVENT_PHY_UP" brief="PHY State changed to up for a given MAC Instance.">
			</field>
			<field name="NPF_F_WMAX_MAC_CPS_EVENT_PHY_MAC_UP" brief="PHY and MAC State changed to up for a given MAC Instance.">
			</field>
			<field name="NPF_F_WMAX_MAC_CPS_EVENT_CONN_UP" brief="Connection state changed to up (it has been taken out of sleep mode).">
			</field>
			<field name="NPF_F_WMAX_MAC_CPS_EVENT_SA_PN_EXCEEDED" brief="Packet Number for a SA exceeded allowed value.">
			</field>
			<field name="NPF_F_WMAX_MAC_CPS_EVENT_SA_INVALID_KEY" brief="Transport key (TEK) become invalid due to wrap-around od the Packet Number.">
			</field>
			<field name="NPF_F_WMAX_MAC_CPS_EVENT_AAS_HANDLE" brief="The AAS handle for a SS has changed">
			</field>
			<field name="NPF_F_WMAX_MAC_CPS_EVENT_CONN_DL_QUEUE_EMPTY" brief="All packets for the given connection queued before NPF_F_wmaxMacCpsConnectionGetDlEmptyState() are transmited.">
			</field>
			<field name="NPF_F_WMAX_MAC_CPS_EVENT_CONN_DL_QUEUE_NOT_EMPTY" brief="New packets queued for the given DL connection">
				<descr>
				This event is generated when the connection belongs to active Power Saving Class with trafic wakening flag enabled -
				see NPF_F_wimaxMacCpsSleepPscParamsTypeI_t. 
				</descr>
			</field>
			<field name="NPF_F_WMAX_MAC_CPS_EVENT_CONN_UL_QUEUE_NOT_EMPTY" brief="New grant requests recieved for the given UL connection">
				<descr>
				This event is generated when the connection belongs to active Power Saving Class with trafic wakening flag enabled -
				see NPF_F_wimaxMacCpsSleepPscParamsTypeI_t. 
				</descr>
			</field>
			<field name="NPF_F_WMAX_MAC_CPS_EVENT_CQI_DATA" brief="Feedback data sent via a CQI channel.">
			</field>
			<field name="NPF_F_WMAX_MAC_CPS_EVENT_CQI_EXPIRED" brief="CQI channel allocation has expired.">
			</field>
      <field name="NPF_F_WMAX_MAC_CPS_EVENT_SCANNING_ENDED" brief="The scanning process has ended.">
        <descr>
          The event is generated when a SS which has been put into the scanning mode returned to active state. 
          This may happen either when after exhosting the retry counter the requested scanning procedure has ended or
          when either the BSCP or the SS itself has requested stopping of the scanning procedure.
        </descr>
      </field>
    </enum>
		<struct type="NPF_F_wmaxMacCpsMsg_t" brief="MAC protocol message.">
			<descr>
			A data structure encapsulating MAC protocol messages.
			</descr>
			<vector type="NPF_uint8_t" name="ptr" brief="Array of octets.">
				<length type="NPF_uint32_t" name="length" brief="Total length of the MAC Protocol message in bytes.">
				</length>
			</vector>
		</struct>
		<struct type="NPF_F_wmaxMacCpsRxStatus_t" brief="RX Status">
			<descr>
			A data structure containing a RX Status as defined in the PHY SAP document. Note, that this structure combines both OFDM and OFDMA statuses.
			</descr>
			<field name="integrity" type="NPF_uint8_t" brief="Data integrity: 0 - valid data, 1 - invalid data.">
			</field>
			<field name="bytes" type="NPF_uint32_t" brief="Number of bytes recieved (including possible padding).">
			</field>
			<field name="currFramNum" type="NPF_uint8_t" brief="Current frame number (4 bits lsb).">
			</field>
			<field name="bitErrNum" type="NPF_uint32_t" brief="Estimated number of bit errors">
			</field>
			<field name="rssi" type="NPF_uint8_t" brief="RSSI level (-157.5dBm, coded as 0xFF, to -30 dBm, coded as 0x00) in dBm with 0.5 dBm step">
			</field>
			<field name="cinr" type="NPF_int8_t" brief="CINR (-10 dB to 53 dB) in dB with 0.5 dB step">
			</field>
			<field name="snr" type="NPF_int8_t" brief="Obsolete (not used): SNR in dB (-10 dB to 53.5 dB with 0.5 dB step)">
			</field>
			<field name="powerOffset" type="NPF_int8_t" brief="Power Offser (-31.75 dB to +31.75 dB with 0.25 dB step)">
			</field>
			<field name="updateAasHandle" type="NPF_int8_t" brief="A flag: if set to '1' then update AAS handle in MAC.">
			</field>
			<field name="aasHandle" type="NPF_int16_t" brief="AAS handle (position index within fixed grid)">
			</field>
			<field name="timeDev" type="NPF_int32_t" brief="Time deviation. In sample time units [1/Fs]. This value is exactly the same as reported by the PHY.">
			</field>
			<field name="freqDev" type="NPF_int32_t" brief="Frequency deviation [in Hz]. This value is exactly the same as reported by the PHY.">
			</field>
		</struct>
		<struct type="NPF_F_wmaxMacCpsTxStatus_t" name="" brief="Transmition Specific parameters">
			<descr>This data structure is used to pass Transmission Specific parameters.</descr>
			<field name="count" type="NPF_uint16_t " brief="Specifies how many times this messages was already transmitted. '0' means the first time. This value is then used by the DP to perform randomization.">
			</field>
		</struct>
		<struct type="NPF_F_wmaxMacCpsEventSignalingData_t" name="" brief="MAC Signaling Event data">
			<descr>
			This data structure is used to pass received from a SS the MAC management message.
			</descr>
			<field type="NPF_F_wmaxMacCpsObjId_t" name="id" brief="MAC Instance or SS or Connection Identifier of a source of this message.">
			</field>
			<field type="NPF_F_wmaxMacCpsMsg_t" name="macMsg" brief="MAC Protocol message as a stream of bytes.">
			</field>
			<field type="NPF_F_wmaxMacCpsRxStatus_t" name="rxStatus" brief="RX Status">
			</field>
		</struct>
		<struct type="NPF_F_wmaxMacCpsEventCinrRssiData_t" name="" brief="CINR/RSSI Is Out Of Range Event data">
			<descr>
			This data structure is used to pass information specific to the CINR/RSSI Is Out Of Range Event.
			</descr>
			<field type="NPF_F_wmaxMacCpsObjId_t" name="id" brief="MAC Instance or SS or Connection Identifier of an object which caused the event.">
			</field>
			<field type="NPF_F_wmaxMacCpsDirection_t" name="dir" brief="Direction which caused the event.">
			</field>
			<field type="NPF_F_wmaxMacCpsRxStatus_t" name="status" brief="Detailed information about the current avaraged CINR/RSSI values">
			</field>
		</struct>
		<struct type="NPF_F_wmaxMacCpsCdmaId_t" name="" brief="Identification of a CDMA code">
			<descr>(NOTE: BS ONLY).</descr>
			<field name="code" type="NPF_uint8_t" brief="CDMA code"></field>
			<field name="symbol" type="NPF_uint16_t" brief="Slot number identifying the moment when the CDMA code was transmitted"></field>
			<field name="subChannel" type="NPF_uint8_t" brief="Sub-channel number used to transmit the CDMA code"></field>
			<field name="frame" type="NPF_uint8_t" brief="Frame number when the CDMA code was transmitted"></field>
			<field name="aasInfo" type="NPF_uint16_t" brief="AAS Info provided by PHY"></field>
			<field type="NPF_uint16_t" name="xid" brief="An identifier of the CDMA zone the CDMA code was transmitted in."></field>
		</struct>
		<struct type="NPF_F_wmaxMacCpsEventCdmaReqData_t" name="" brief="CDMA Request Message Event data">
			<descr>
			This data structure is used to pass information specific to the CDMA Request Message Event.
			</descr>
			<field type="NPF_F_wmaxMacCpsObjId_t" name="id" brief="The identifier of the MAC Instance which caused this event.">
			</field>
			<field type="NPF_F_wmaxMacCpsCdmaId_t" name="cdmaCode" brief="CDMA code identification.">
			</field>
			<field type="NPF_F_wmaxMacCpsRxStatus_t" name="rxStatus" brief="RX Status">
			</field>
		</struct>
		<struct type="NPF_F_wmaxMacCpsEventOvercommitedData_t" name="" brief="Overflow Event data">
			<descr>
			This data structure is used to pass information specific to the Overflow Event.
			</descr>
			<field type="NPF_F_wmaxMacCpsObjId_t" name="id" brief="The identifier of the MAC Instance which caused this event.">
			</field>
			<field name="dir" type="NPF_F_wmaxMacCpsDirection_t" brief="Direction which is overcommitted.">
			</field>
		</struct>
		<struct type="NPF_F_wmaxMacCpsEventInvalidEksData_t" name="" brief="Invalid EKS Event data">
			<descr>
			This data structure is used to pass information specific to the Invalid EKS Event.
			</descr>
			<field name="id" type="NPF_F_wmaxMacCpsObjId_t" brief="Identifier of a connection which caused event.">
			</field>
		</struct>
		<struct type="NPF_F_wmaxMacCpsEventTraceData_t" name="" brief="Trace Event data">
			<descr>
			This data structure is used to pass information specific to the Trace Event.
			</descr>
			<field name="origin" type="NPF_uint16_t" brief="Originator of the trace">
			</field>
			<field name="level" type="NPF_uint16_t" brief="Level of the trace">
			</field>
			<vector type="NPF_uint8_t" name="traceStr" brief="A pointer to a zero ended string containing trace message.">
				<length type="NPF_uint32_t" name="traceLen" brief="Lenght of a zero ended string containing trace message">
				</length>
			</vector>
		</struct>
		<struct type="NPF_F_wmaxMacCpsEventSsInactiveData_t" name="" brief="SS Inactive Event data">
			<descr>
			This data structure is used to pass information specific to the SS Inactive Event. (NOTE: BS ONLY).
			</descr>
			<field name="id" type="NPF_F_wmaxMacCpsObjId_t" brief="SS Identifier of a SS which caused event.">
			</field>
		</struct>
		<struct type="NPF_F_wmaxMacCpsEventPhyStateDownData_t" name="" brief="PHY State Down Event data">
			<descr>
			This data structure is used to pass information specific to the PHY State Down Event.
			</descr>
			<field name="id" type="NPF_F_wmaxMacCpsObjId_t" brief="Identifier of a MAC Instance which caused event.">
			</field>
		</struct>
		<struct type="NPF_F_wmaxMacCpsEventPhyStateUpData_t" name="" brief="PHY State Up Event data">
			<descr>
			This data structure is used to pass information specific to the PHY State Up Event.
			</descr>
			<field name="id" type="NPF_F_wmaxMacCpsObjId_t" brief="Identifier of a MAC Instance which caused event.">
			</field>
		</struct>
		<struct type="NPF_F_wmaxMacCpsEventPhyMacStateUpData_t" name="" brief="PHY and MAC State Up Event data">
			<descr>
			This data structure is used to pass information specific to the PHY and MAC State Up Event.
			</descr>
			<field name="id" type="NPF_F_wmaxMacCpsObjId_t" brief="Identifier of a MAC Instance which caused event.">
			</field>
		</struct>
		<struct type="NPF_F_wmaxMacCpsEventConnStateUpData_t" name="" brief="Connection State Up Event data">
			<descr>
			This data structure is used to pass information specific to the Connection State Up Event.
			</descr>
			<field name="id" type="NPF_F_wmaxMacCpsObjId_t" brief="Identifier of a connection which caused event.">
			</field>
		</struct>
		<struct type="NPF_F_wmaxMacCpsEventConnDlEmptyData_t" name="" brief="Connection DL Queue Empty Event data">
			<descr>
			This data structure is used to pass information specific to the Connection DL Queue Empty Event.
			</descr>
			<field name="id" type="NPF_F_wmaxMacCpsObjId_t" brief="Identifier of a connection which caused event.">
			</field>
			<field type="NPF_uint32_t" name="eventCorelator" brief="Event correlator - returned value that was provided as an argument to NPF_F_wmaxMacCpsConnectionGetDlEmptyState function.">
			</field>
		</struct>
		<struct type="NPF_F_wmaxMacCpsEventConnDlNotEmptyData_t" name="" brief="Connection DL Queue Not Empty Event data">
			<descr>
			This data structure is used to pass information specific to the Connection DL Queue Not Empty Event.
			</descr>
			<field name="id" type="NPF_F_wmaxMacCpsObjId_t" brief="Identifier of a connection which caused event.">
			</field>
		</struct>
		<struct type="NPF_F_wmaxMacCpsEventConnUlNotEmptyData_t" name="" brief="Connection UL Queue Not Empty Event data">
			<descr>
			This data structure is used to pass information specific to the Connection UL Queue Not Empty Event.
			</descr>
			<field name="id" type="NPF_F_wmaxMacCpsObjId_t" brief="Identifier of a connection which caused event.">
			</field>
		</struct>
		<struct type="NPF_F_wmaxMacCpsEventCqiData_t" name="" brief="Recieved feedback data via CQI channel">
			<descr>
			  This data structure is used to pass information specific to the Recieved CQI Data Message Event.
			 </descr>
			<field type="NPF_F_wmaxMacCpsObjId_t" name="id" brief="MAC Instance ID of the instance which caused the event."></field>
			<field type="NPF_F_wmaxMacCpsObjId_t" name="cqichId" brief="CQICH_ID uniquely identifying the feedback">
			</field>
			<field type="NPF_uint8_t" name="feedbackType" brief="">
				<descr>
            Feedback type. It can be on of the following:
          </descr>
				<descr>
            - 00000001: 3 bit-MIMO Fast-feedback;
          </descr>
				<descr>
            - 00000010: Enhanced FAST_FEEDBACK;
          </descr>
				<descr>
            - 00000100: reserved;
          </descr>
				<descr>
            - 00001000: reserved;
          </descr>
				<descr>
            - 00010000: UEP fast-feedback;
          </descr>
				<descr>
            - 00100000: A measurement report performed on the last DL burst;
          </descr>
				<descr>
            - 01000000: Primary/Secondary FAST_FEEDBACK;
          </descr>
				<descr>
            - 10000000: DIUC-CQI Fast-feedback.
          </descr>
			</field>
			<field type="NPF_F_wmaxMacCpsObjId_t" name="issId" brief="ISSID identyfying the originating SS"></field>
			<field type="NPF_uint8_t" name="feedbackVal" brief="Feedback value."></field>
		</struct>

    <struct type="NPF_F_wmaxMacCpsEventScanningEnded_t" name="" brief="The scanning procedure has been ended.">
      <descr>
        This data structure is used to pass information specific to the Scanning Procedure Ended Message Event.
      </descr>
      <field type="NPF_F_wmaxMacCpsObjId_t" name="issId" brief="ISSID identyfying the affected SS"></field>
    </struct>
    
    <struct type="NPF_F_wmaxMacCpsEventCqiExpired_t" name="" brief="CQI channel allocation has expired.">
			<descr>
			  This data structure is used to pass information specific to the Recieved CQI Expired Message Event.
			 </descr>
			<field type="NPF_F_wmaxMacCpsObjId_t" name="issId" brief="ISSID identyfying the affected SS"></field>
			<field type="NPF_F_wmaxMacCpsObjId_t" name="cqichId" brief="CQICH_ID uniquely identifying the expired feedback channel">
			</field>
		</struct>
		<!-- below is a definition of an event to be sent when a AAS handle is changed for a SS. This is for BSCP information -->
		<struct type="NPF_F_wmaxMacCpsEventAasHandleData_t" name="" brief="AAS Handle Has Changed Event data">
			<descr>
        This data structure is used to pass information specific to the AAS Handle Has Changed Event.
      </descr>
			<field name="id" type="NPF_F_wmaxMacCpsObjId_t" brief="Identifier of the SS which caused event.">
			</field>
			<field name="aasHandle" type="NPF_uint16_t" brief="New AAS Handle">
			</field>
		</struct>
		<enum type="NPF_F_wmaxMacCpsKeyAge_t" name="e1">
			<descr>
			TEK Key Age.
			To distinguish old or new key.
		</descr>
			<field name="NPF_F_WMAX_MAC_CPS_TEK_OLD" value="1" brief="Old TEK key."></field>
			<field name="NPF_F_WMAX_MAC_CPS_TEK_NEW" brief="New TEK key."></field>
		</enum>
		<struct type="NPF_F_wmaxMacCpsEventSaPnExceededData_t" name="" brief="PN Exceeded Event data">
			<descr>
        This data structure is used to pass information specific to the PN Exceeded Event.
      </descr>
			<field name="id" type="NPF_F_wmaxMacCpsObjId_t" brief="Identifier of a SA which caused this event.">
			</field>
			<field name="keyAge" type="NPF_F_wmaxMacCpsKeyAge_t" brief="Old or new key that caused this event.">
			</field>
		</struct>
		<struct type="NPF_F_wmaxMacCpsEventSaInvalidKeyData_t" name="" brief="Transport key (TEK) Invalid Event data">
			<descr>
        This data structure is used to pass event information when transport key (TEK) become invalid due 
        to wrap-around od the Packet Number.        
      </descr>
			<field name="id" type="NPF_F_wmaxMacCpsObjId_t" brief="Identifier of a connection which caused this event.">
			</field>
		</struct>
		<struct type="NPF_F_wmaxMacCpsEventData_t" name="" brief="Event data">
			<descr>
			This data structure is used to pass information associated with an event.
			</descr>
			<selectunion type="NPF_F_wmaxMacCpsEvent_t" name="eventData">
				<selectfield type="NPF_F_wmaxMacCpsEventType_t" name="eventType" brief="Event data type.">
				</selectfield>
				<field type="NPF_F_wmaxMacCpsEventSignalingData_t" name="sigEvent">
					<descr>A MAC Signaling Protocol message.</descr>
					<selector>NPF_F_WMAX_MAC_CPS_EVENT_SIGNALING</selector>
				</field>
				<field type="NPF_F_wmaxMacCpsEventCinrRssiData_t" name="cinrRssiData">
					<descr>CINR/RSSI is out of range event.</descr>
					<selector>NPF_F_WMAX_MAC_CPS_EVENT_CINR_RSSI_OUT_OF_RANGE</selector>
				</field>
				<field type="NPF_F_wmaxMacCpsEventCdmaReqData_t" name="cdmaReqData">
					<descr>CDMA Request Message event.</descr>
					<selector>NPF_F_WMAX_MAC_CPS_EVENT_CDMA_REQ</selector>
				</field>
				<field type="NPF_F_wmaxMacCpsEventOvercommitedData_t" name="overcommitedData">
					<descr>Permanent queue overflow event.</descr>
					<selector>NPF_F_WMAX_MAC_CPS_EVENT_OVERCOMMITED</selector>
				</field>
				<field type="NPF_F_wmaxMacCpsEventInvalidEksData_t" name="invalidEksData">
					<descr>Change invalid usage of EKS of detected. The frequency of this event is limited.</descr>
					<selector>NPF_F_WMAX_MAC_CPS_EVENT_INVALID_EKS</selector>
				</field>
				<field type="NPF_F_wmaxMacCpsEventTraceData_t" name="traceData">
					<descr>Trace.</descr>
					<selector>NPF_F_WMAX_MAC_CPS_EVENT_TRACE</selector>
				</field>
				<field type="NPF_F_wmaxMacCpsEventSsInactiveData_t" name="inactiveData">
					<descr>Inactive SS event. (NOTE: BS ONLY).</descr>
					<selector>NPF_F_WMAX_MAC_CPS_EVENT_SS_INACTIVE</selector>
				</field>
				<field type="NPF_F_wmaxMacCpsEventPhyStateDownData_t" name="phyDownData">
					<descr>PHY State Down event.</descr>
					<selector>NPF_F_WMAX_MAC_CPS_EVENT_PHY_DOWN</selector>
				</field>
				<field type="NPF_F_wmaxMacCpsEventPhyStateUpData_t" name="phyUpData">
					<descr>PHY State Up event.</descr>
					<selector>NPF_F_WMAX_MAC_CPS_EVENT_PHY_UP</selector>
				</field>
				<field type="NPF_F_wmaxMacCpsEventPhyMacStateUpData_t" name="phyMacUpData">
					<descr>PHY and MAC State Up event.</descr>
					<selector>NPF_F_WMAX_MAC_CPS_EVENT_PHY_MAC_UP</selector>
				</field>
				<field type="NPF_F_wmaxMacCpsEventConnStateUpData_t" name="connUpData">
					<descr>Connection State Up event.</descr>
					<selector>NPF_F_WMAX_MAC_CPS_EVENT_CONN_UP</selector>
				</field>
				<field type="NPF_F_wmaxMacCpsEventConnDlEmptyData_t" name="connDlEmptyData">
					<descr>Connection DL Queue Empty event.</descr>
					<selector>NPF_F_WMAX_MAC_CPS_EVENT_CONN_DL_QUEUE_EMPTY</selector>
				</field>
				<field type="NPF_F_wmaxMacCpsEventConnDlNotEmptyData_t" name="connDlNotEmptyData">
					<descr>Connection DL Queue Not Empty event.</descr>
					<selector>NPF_F_WMAX_MAC_CPS_EVENT_CONN_DL_QUEUE_NOT_EMPTY</selector>
				</field>
				<field type="NPF_F_wmaxMacCpsEventConnUlNotEmptyData_t" name="connUlNotEmptyData">
					<descr>Connection UL Queue Not Empty event.</descr>
					<selector>NPF_F_WMAX_MAC_CPS_EVENT_CONN_UL_QUEUE_NOT_EMPTY</selector>
				</field>
				<field type="NPF_F_wmaxMacCpsEventSaPnExceededData_t" name="pnExceededData">
					<descr>Packet Number for a SA exceeded allowed value.</descr>
					<selector>NPF_F_WMAX_MAC_CPS_EVENT_SA_PN_EXCEEDED</selector>
				</field>
				<field type="NPF_F_wmaxMacCpsEventSaInvalidKeyData_t" name="invalidKeyData">
					<descr>Transport key become invalid event.</descr>
					<selector>NPF_F_WMAX_MAC_CPS_EVENT_SA_INVALID_KEY</selector>
				</field>
				<field type="NPF_F_wmaxMacCpsEventAasHandleData_t" name="aasHandleData">
					<descr>AAS Handle has changed event.</descr>
					<selector>NPF_F_WMAX_MAC_CPS_EVENT_AAS_HANDLE</selector>
				</field>
				<field type="NPF_F_wmaxMacCpsEventCqiData_t" name="cqiChannelData">
					<descr>Feedback data sent via a CQI channel event.</descr>
					<selector>NPF_F_WMAX_MAC_CPS_EVENT_CQI_DATA</selector>
				</field>
				<field type="NPF_F_wmaxMacCpsEventCqiExpired_t" name="cqiChannelExpired">
					<descr>CQI channel allocation has expiredevent.</descr>
					<selector>NPF_F_WMAX_MAC_CPS_EVENT_CQI_EXPIRED</selector>
				</field>
        <field type="NPF_F_wmaxMacCpsEventScanningEnded_t" name="scanningEndedData">
          <descr>The scanning procedure has been ended.</descr>
          <selector>NPF_F_WMAX_MAC_CPS_EVENT_SCANNING_ENDED</selector>
        </field>
      </selectunion>
		</struct>
		<struct type="NPF_F_wmaxMacCpsEventArray_t" name="" brief="Event data array">
			<descr>
			This data structure allows for passing a number of events to the Control Plane in one FAPI call.
			</descr>
			<vector type="NPF_F_wmaxMacCpsEventData_t" name="eventArray" brief="Array of events.">
				<length type="NPF_uint32_t" name="eventNum" brief="Number of events in the array.">
				</length>
			</vector>
		</struct>
		<functype name="NPF_F_wmaxMacCpsEventCallback_t" type="void" class="event" brief="Event Callback Prototype">
			<descr>
				This function is used to handle various events generated by the Data Plane MAC (including received 802.16 MAC protocol messages) 
				- unsolicited event notifications. It is intended to be
				implemented by the FAPI Client application, and to be registered to the 802.16 MAC FAPI 
				implementation through the NPF_F_wmaxMacCpsEventRegister function.
 				</descr>
			<param io="in" type="NPF_userContext_t" name="context">
				<descr>
				The context item that was supplied by the application
				when the event callback routine was registered.
 			</descr>
			</param>
			<param io="in" type="NPF_F_wmaxMacCpsEventArray_t" name="eventArray">
				<descr>
 				 A data structure containing the event data. 
				 </descr>
			</param>
		</functype>
		<func type="NPF_error_t" name="NPF_F_wmaxMacCpsEventRegister" xdrid="RPC_WMAX_MAC_EVENT_REG" class="event_register" brief="Event Callback Registration.">
			<descr>
			This function is used to register an event handler to receive
			notifications of 802.16 MAC protocol messages (events) .
			This function operates in a synchronous manner.	
			</descr>
			<param io="in" type="NPF_FEHandle_t" name="feHandle" xdr="no">
				<descr>
                            Forwarding Element handle.
                            </descr>
			</param>
			<param io="in" type="NPF_userContext_t" name="userContext" xdr="no">
				<descr>
				The context item provided to the event callback routine 
				when it is invoked.
				</descr>
			</param>
			<param io="in" type="NPF_F_wmaxMacCpsEventCallback_t" name="eventCallFunc" xdr="no">
				<descr>
				The function pointer to the event callback function 
				to be called for events.
				</descr>
			</param>
			<param io="out" type="NPF_callbackHandle_t*" name="callbackHandle" xdr="no">
				<descr>
				A unique identifier related to this registration.
				</descr>
			</param>
			<return>
				<descr>Error code indicating function success.</descr>
				<retval name="NPF_NO_ERROR">
					<descr>The registration completed successfully.</descr>
				</retval>
				<retval name="NPF_E_BAD_CALLBACK_FUNCTION">
					<descr>
					The registration was invoked with a function pointer parameter that was invalid.
					</descr>
				</retval>
				<retval name="NPF_E_CALLBACK_ALREADY_REGISTERED">
					<descr>
					The registration was invoked with 
					a pair composed of a function pointer and a user context which was previously 
					used for an identical registration.
					</descr>
				</retval>
				<retval name="NPF_E_UNKNOWN">
					<descr>Used to indicate other errors not listed above.</descr>
				</retval>
			</return>
		</func>
		<func type="NPF_error_t" name="NPF_F_wmaxMacCpsEventDeregister" xdrid="RPC_WMAX_MAC_EVENT_DEREG" class="event_deregister">
			<descr>
			Event Callback De-registration.
			This function is used to deregister an event handler, which was previously
			registered to receive notifications of MAC protocol messages (events).
			It may be invoked by any application no longer interested in receiving status events.
			Note: This function operates in a synchronous manner. There may be a timing window where
			outstanding events continue to be delivered to the event routine after the de-registration
			function has been invoked. It is the responsibility of implementation to guarantee that the event
				function is not called after the deregister function has returned.
				</descr>
			<param io="in" type="NPF_callbackHandle_t" name="callbackHandle" xdr="no">
				<descr>
					The unique identifier returned to the application when the
					event callback routine was registered.
					</descr>
			</param>
			<return>
				<descr>
					Error code indicating function success.
					</descr>
				<retval name="NPF_NO_ERROR">
					<descr>The operation completed successfully.</descr>
				</retval>
				<retval name="NPF_E_BAD_CALLBACK_HANDLE">
					<descr>
						A function was invoked with a callback handle that did not
						correspond to a valid NPF callback handle as returned by a registration function.
						</descr>
				</retval>
				<retval name="NPF_E_UNKNOWN">
					<descr>
						Indicates other errors.
						</descr>
				</retval>
			</return>
		</func>
	</section>
	<section name="Requests">
		<enum type="NPF_F_wmaxMacCpsSignaligRequestType_t" name="e1">
			<descr>
			    Signaling Request Type.
        	Identifies type of message that is contained in the Signaling Request message field.
		    </descr>
			<field name="NPF_F_WMAX_MAC_CPS_SIGNALING_REQUEST_GENERIC_TYPE" value="0" brief="Generic Signaling Request type.">
			</field>
			<field name="NPF_F_WMAX_MAC_CPS_SIGNALING_REQUEST_UCD_TYPE" brief="UCD Signaling Request type. (NOTE: BS ONLY).">
			</field>
			<field name="NPF_F_WMAX_MAC_CPS_SIGNALING_REQUEST_DCD_TYPE" brief="DCD Signaling Request type. (NOTE: BS ONLY).">
			</field>
			<field name="NPF_F_WMAX_MAC_CPS_SIGNALING_REQUEST_MOB_NBR_ADV_TYPE" brief="MOB_NBR-ADV Signaling Request type. (NOTE: BS ONLY).">
			</field>
			<field name="NPF_F_WMAX_MAC_CPS_SIGNALING_REQUEST_MOB_SCN_RSP_TYPE" brief="MOB_SCN-RSP Signaling Request type. (NOTE: BS ONLY).">
			</field>
			<field name="NPF_F_WMAX_MAC_CPS_SIGNALING_REQUEST_CDMA_RNG_RSP_TYPE" brief="RNG-RSP Signaling Response for CDMA Ranging Request type. (NOTE: BS ONLY).">
			</field>
			<field name="NPF_F_WMAX_MAC_CPS_SIGNALING_REQUEST_MOB_PAG_ADV_TYPE" brief="MOB_PAG-ADV Signaling Request type. (NOTE: BS ONLY).">
			</field>
			<field name="NPF_F_WMAX_MAC_CPS_SIGNALING_REQUEST_NO_CDMA_RNG_RSP_TYPE" brief="RNG-RSP signaling response for non-CDMA Ranging Request with a request for bandwidth for expected response. (NOTE: BS ONLY).">
			</field>
			<field name="NPF_F_WMAX_MAC_CPS_SIGNALING_REQUEST_SLEEP_ACTIVATE_TYPE" brief="MOB_SLP-RSP message to activate Power Saving Class. (NOTE: BS ONLY).">
			</field>
			<field name="NPF_F_WMAX_MAC_CPS_SIGNALING_REQUEST_SLEEP_DEACTIVATE_TYPE" brief="MOB_SLP-RSP message to deactivate Power Saving Class. (NOTE: BS ONLY).">
			</field>
		</enum>
		<struct type="NPF_F_wmaxMacCpsSignalingRequestGeneric_t" name="" brief="Signaling Request arguments">
			<descr>This request is used for all messages which do not have special type of request</descr>
			<field name="id" type="NPF_F_wmaxMacCpsObjId_t" brief="Connection ID">
			</field>
			<field name="msg" type="NPF_F_wmaxMacCpsMsg_t" brief="MAC Protocol Message to be transmitted">
			</field>
			<field name="txStatus" type="NPF_F_wmaxMacCpsTxStatus_t" brief="Transmission Specific Parameters">
			</field>
		</struct>
		<struct type="NPF_F_wmaxMacCpsSignalingRequestUcdDcd_t" name="" brief="UCD/DCD Signaling Request arguments">
			<descr>This request is used for UCD/DCD messages. (NOTE: BS ONLY).</descr>
			<field name="id" type="NPF_F_wmaxMacCpsObjId_t" brief="Connection ID">
			</field>
			<field name="msg" type="NPF_F_wmaxMacCpsMsg_t" brief="UCD/DCD MAC Protocol Message to be transmitted">
			</field>
			<field name="frameNumTlvOffset" type="NPF_uint16_t" brief="Number of bytes between start of the MAC message and the V field of the Frame Count TLV">
			</field>
			<field name="period" type="NPF_uint32_t" brief="Number of frames between the frame in which last message was sent and the next frame the message will be sent">
			</field>
		</struct>
		<struct type="NPF_F_wmaxMacCpsSignalingRequestMobNbrAdv_t" name="" brief="MOB_NBR-ADV Signaling Request arguments">
			<descr>This request is used for MOB_NBR-ADV messages. (NOTE: BS ONLY).</descr>
			<field name="id" type="NPF_F_wmaxMacCpsObjId_t" brief="Connetion ID of the broadcast connection to be used to transmit the message.">
			</field>
			<field name="msg" type="NPF_F_wmaxMacCpsMsg_t" brief="MOB_NBR-ADV MAC Protocol Message to be transmitted">
			</field>
			<field name="period" type="NPF_int32_t" brief="Number of frames between the frame in which last message was sent and the next frame the message will be sent">
				<descr>
            Value '-1' means request to cancel the previous request.
          </descr>
			</field>
		</struct>
		<struct type="NPF_F_wmaxMacCpsSignalingRequestMobScnRsp_t" name="" brief="MOB_SCN-RSP Signaling Request arguments">
			<descr>This request is used for MOB_SCN-RSP messages. (NOTE: BS ONLY).</descr>
			<field name="id" type="NPF_F_wmaxMacCpsObjId_t" brief="SS ID">
			</field>
			<field name="numOfScans" type="NPF_uint8_t" brief="Number of scanning intervals.">
				<descr>
            If set to '0' the currently executed scanning mode will be terminated. In this case all other parameters, except for 'id' are invalid.
          </descr>
			</field>
			<field name="synchId" type="NPF_F_wmaxMacCpsObjId_t" brief="ID of an object (a connection) to be used to synchronize the scanning proces with.">
			</field>
			<field name="msg" type="NPF_F_wmaxMacCpsMsg_t" brief="MOB_SCN-RSP MAC Protocol Message to be transmitted">
			</field>
			<field name="connId" type="NPF_F_wmaxMacCpsObjId_t" brief="Connection ID of the connection the MOB_SCN-RSP message will be sent">
			</field>
			<field name="startOffset" type="NPF_uint32_t" brief="Number of frames between the frame in which this message was sent and the frame the SS should start scan for BSs action.">
			</field>
			<field name="inavailabilityPeriodLen" type="NPF_uint32_t" brief="Number of frames the SS should perform the BS scan action.">
			</field>
			<field name="availabilityPeriodLen" type="NPF_uint32_t" brief="Number of frames the SS should be available between two BS scan actions. Valid if the 'numOfScans' field contains more than '1'">
			</field>
		</struct>
		<struct type="NPF_F_wmaxMacCpsSignalingRequestCdmaRngRsp_t" name="" brief="RNG-RSP to CDMA Request Signaling Request arguments">
			<descr>This request is used for RNG-RSP messages being sent as a response to a Ranging CDMA code. (NOTE: BS ONLY).</descr>
			<field type="NPF_F_wmaxMacCpsObjId_t" name="macInstanceId" brief="MAC Instance Id">
			</field>
			<field name="cdmaId" type="NPF_F_wmaxMacCpsCdmaId_t" brief="CDMA request identification">
			</field>
			<field name="msg" type="NPF_F_wmaxMacCpsMsg_t" brief="RNG_RSP MAC Protocol Message to be transmitted">
			</field>
			<field name="expectedResponseLen" type="NPF_uint32_t" brief="">
				<descr>
            Number of bytes expected in the frame to be sent by the SS in response to this RNG-RSP message.
            A slot for transnfering such number of bytes will be given in the UL frame specified by the 'delay' parameter.
            Value '0' means that the BS does not expect any response from the SS and no additional bandwidth will be assigned
          </descr>
			</field>
			<field name="delay" type="NPF_uint8_t" brief="The difference between transmiting the MAC message and the bandwidth grant in frames.">
			</field>
		</struct>
		<struct type="NPF_F_wmaxMacCpsSignalingRequestNoCdmaRngRsp_t" name="" brief="RNG-RSP Signaling Request With a Request For Bandwidth For Expected Response arguments">
			<descr>This request is used for sending RNG-RSP message and, optionally, alocation of bandwidth in the polled initial ranging area for response. (NOTE: BS ONLY).</descr>
			<field name="msgConnId" type="NPF_F_wmaxMacCpsObjId_t" brief="The connection to be used to transmit the RNG-RSP message.">
			</field>
			<field name="msg" type="NPF_F_wmaxMacCpsMsg_t" brief="RNG_RSP MAC Protocol Message to be transmitted">
			</field>
			<field name="expectedResponseConnId" type="NPF_F_wmaxMacCpsObjId_t" brief="The connection, whose CID will be used to identify the assigned polled initial ranging region.">
			</field>
			<field name="expectedResponseLen" type="NPF_uint32_t" brief="">
				<descr>
          Number of bytes expected in the frame to be sent by the SS in response to this RNG-RSP message.
          A slot for transnfering such number of bytes will be given in the UL frame specified by the 'delay' parameter.
          Value '0' means that the BS does not expect any response from the SS and no additional bandwidth will be assigned
        </descr>
			</field>
			<field name="delay" type="NPF_uint8_t" brief="The difference between transmiting the MAC message and the bandwidth grant in frames.">
			</field>
			<field name="reqPwrCorrection" type="NPF_int8_t" brief="The power correction value as specified in the RNG-RSP message to be transmitted."/>
		</struct>
		<struct type="NPF_F_wmaxMacCpsSignalingRequestMobPagAdvRsp_t" name="" brief="MOB_PAG-ADV Signaling Request arguments">
			<field name="id" type="NPF_F_wmaxMacCpsObjId_t" brief="MAC ID"></field>
			<field name="msg" type="NPF_F_wmaxMacCpsMsg_t" brief="MOB_PAG-ADV MAC Protocol Message to be transmitted"></field>
			<field name="n" type="NPF_uint16_t" brief="The 'N' parameter"></field>
			<field name="pagingCycle" type="NPF_uint16_t" brief="The 'PAGING_CYCLE' parameter"></field>
			<field name="pagingOffset" type="NPF_uint16_t" brief="The 'PAGING_OFFSET' parameter"></field>
		</struct>
		<!-- Data structures for Sleep Mode - related requests -->
		<enum type="NPF_F_wmaxMacCpsPscType_t" brief="Power Saving Class Type">
			<descr>
					Defines different types of power saving classes.
				</descr>
			<field name="NPF_F_WMAX_MAC_CPS_SLEEP_PSC_TYPE_I" brief="Power Saving Class Type I."></field>
			<field name="NPF_F_WMAX_MAC_CPS_SLEEP_PSC_TYPE_II" brief="Power Saving Class Type II."></field>
			<field name="NPF_F_WMAX_MAC_CPS_SLEEP_PSC_TYPE_III" brief="Power Saving Class Type III."></field>
		</enum>
		<struct type="NPF_F_wimaxMacCpsSleepPscParamsTypeI_t" brief="Power Saving Class Type I Parameters">
			<field type="NPF_uint8_t" name="listeningWindow" brief="Listening Window - how long MS remain active (in frames).">
			</field>
			<field type="NPF_uint8_t" name="initWindow" brief="Initial sleep window lenght (in frames).">
			</field>
			<field type="NPF_uint16_t" name="finalWindowBase" brief="Final sleep window lenght base.">
				<descr>
					The final sleep window (in frames) is calculated as finalWindow = finalWindowBase * 2^finalWindowExp.
					</descr>
			</field>
			<field type="NPF_uint16_t" name="finalWindowExp" brief="Final sleep window exponent.">
				<descr>
					The final sleep window (in frames) is calculated as finalWindow = finalWindowBase * 2^finalWindowExp.
					</descr>
			</field>
			<field type="NPF_boolean_t" name="trafficWakening" brief="Traffic triggered wakening flag. ">
				<descr>
						When true, deactivate this Power Saving Class when trafic appearson on one of the connections belongs to this class.
						When false, data traffic never deactivate this class.
					</descr>
			</field>
			<field type="NPF_boolean_t" name="trafficIndication" brief="Traffic indication flag.">
					<descr>
						When true, MOB_TRF-IND message with negative inidcation will be send in each activity window.
						When false, negative indications will never be send. 						
					</descr>
				</field>
			<vector name="icidList" type="NPF_F_wmaxMacCpsConnectionId_t" brief="A list of connections belongs to this Power Saving Class.">
				<descr>
						Ignored when trafficWakening set to false.
					</descr>
				<length name="cidListLength" type="NPF_uint32_t" 
                                        brief="Number of conections in the cidList. When set to 0 it means that all subscriber connections belong to this PSC.">
                                </length>
			</vector>
		</struct>
		<struct type="NPF_F_wimaxMacCpsSleepPscDef_t" brief="Power Saving Class Definition">
			<selectunion type="NPF_F_wimaxMacCpsPscParams_t" name="u">
				<selectfield name="type" type="NPF_F_wmaxMacCpsPscType_t" brief="Power Saving Class Type"></selectfield>
				<field type="NPF_F_wimaxMacCpsSleepPscParamsTypeI_t" name="typeI" brief="Power Saving Class Type I Parameters">
					<selector>NPF_F_WMAX_MAC_CPS_SLEEP_PSC_TYPE_I</selector>
				</field>
				<field type="NPF_uint32_t" name="unused" brief="Other types of Power Saving Class not supported">
					<selector>NPF_F_WMAX_MAC_CPS_SLEEP_PSC_TYPE_II</selector>
					<selector>NPF_F_WMAX_MAC_CPS_SLEEP_PSC_TYPE_III</selector>
				</field>
			</selectunion>
		</struct>
		<struct type="NPF_F_wmaxMacCpsSignalingRequestSleepActivate_t" name="" brief="Activate Power Saving Class arguments">
			<descr>
					This request is used to send MOB_SLP-REQ message that activates a given Power Saving Class. MOB_SLP-REQ messages 
					that only define the Power Saving Class are send using generic signaling request (NPF_F_wmaxMacCpsSignalingRequestGeneric_t)
				</descr>
			<field name="slpid" type="NPF_uint16_t" brief="SLPID.">
				<descr>
						The 10-bits identifier assigned for a given active Power Saving Class. It is unique within MAC instance and assigned by the signaling stack.
						SLPID can be changes for each activation of the same Power Saving Class.
					</descr>
			</field>
			<field name="frameNr" type="NPF_uint8_t" brief="Frame number of the first sleep window (6 LSBs).">
			</field>
			<field name="pscDef" type="NPF_F_wimaxMacCpsSleepPscDef_t" brief="Power Saving Class definition.">
			</field>
                        <field name="id" type="NPF_F_wmaxMacCpsObjId_t" brief="Connection ID">
			</field>
			<field name="msg" type="NPF_F_wmaxMacCpsMsg_t" brief="MAC Protocol Message to be transmitted">
			</field>
		</struct>
		<enum type="NPF_F_wmaxMacCpsSleepDeactivateTime_t" brief="Power Saving Class Deactivation Time">
			<field name="NPF_F_WIMAX_MAC_CPS_SLEEP_DEACTIVATE_NOW" brief="Send the message immdeiatly - subscriber already terminated sleep mode">
			</field>
			<field name="NPF_F_WIMAX_MAC_CPS_SLEEP_DEACTIVATE_AT_LISTENING" brief="Send the message during subscriber listening window">
			</field>
		</enum>
		<struct type="NPF_F_wmaxMacCpsSignalingRequestSleepDeactivate_t" brief="Dectivate Power Saving Class arguments">
			<descr>
					This request is used to send MOB_SLP-REQ message that deactivates a given Power Saving Class. 
	                </descr>
			<field name="slpid" type="NPF_uint16_t" brief="SLPID.">
				<descr>
						The 10-bits identifier assigned for a given active Power Saving Class. It is unique within MAC instance and assigned by the signaling stack.
						SLPID can be changes for each activation of the same Power Saving Class.
					</descr>
			</field>
			<field name="deactivateTime" type="NPF_F_wmaxMacCpsSleepDeactivateTime_t" brief="Time to deactivate the Power Saving Class">
			</field>
                        <field name="id" type="NPF_F_wmaxMacCpsObjId_t" brief="Connection ID">
			</field>
			<field name="msg" type="NPF_F_wmaxMacCpsMsg_t" brief="MAC Protocol Message to be transmitted">
			</field>
		</struct>


		<struct type="NPF_F_wmaxMacCpsSignalingRequestArgs_t" name="" brief="Signaling Request arguments">
			<descr>
				This data structure defines parameters of a MAC Signaling Request FAPI call.
				</descr>
			<selectunion type="NPF_F_wmaxMacCpsSignalingRequestTypeUnion_t" name="u">
				<selectfield type="NPF_F_wmaxMacCpsSignaligRequestType_t" name="type" brief="Signaling Request type.">
				</selectfield>
				<field type="NPF_F_wmaxMacCpsSignalingRequestGeneric_t" name="genericSigReq">
					<descr>Generic signaling request.</descr>
					<selector>NPF_F_WMAX_MAC_CPS_SIGNALING_REQUEST_GENERIC_TYPE</selector>
				</field>
				<field type="NPF_F_wmaxMacCpsSignalingRequestUcdDcd_t" name="ucdDcdSigReq">
					<descr>UCD/DCD signaling request. (NOTE: BS ONLY).</descr>
					<selector>NPF_F_WMAX_MAC_CPS_SIGNALING_REQUEST_UCD_TYPE</selector>
					<selector>NPF_F_WMAX_MAC_CPS_SIGNALING_REQUEST_DCD_TYPE</selector>
				</field>
				<field type="NPF_F_wmaxMacCpsSignalingRequestMobNbrAdv_t" name="mobNbrAdvReq">
					<descr>MOB_NBR-ADV signaling request. (NOTE: BS ONLY).</descr>
					<selector>NPF_F_WMAX_MAC_CPS_SIGNALING_REQUEST_MOB_NBR_ADV_TYPE</selector>
				</field>
				<field type="NPF_F_wmaxMacCpsSignalingRequestMobScnRsp_t" name="mobScnRspReq">
					<descr>MOB_NBR-RSP signaling request. (NOTE: BS ONLY).</descr>
					<selector>NPF_F_WMAX_MAC_CPS_SIGNALING_REQUEST_MOB_SCN_RSP_TYPE</selector>
				</field>
				<field type="NPF_F_wmaxMacCpsSignalingRequestCdmaRngRsp_t" name="cdmaRngRspReq">
					<descr>RNG-RSP to CDMA Request signaling request. (NOTE: BS ONLY).</descr>
					<selector>NPF_F_WMAX_MAC_CPS_SIGNALING_REQUEST_CDMA_RNG_RSP_TYPE</selector>
				</field>
				<field type="NPF_F_wmaxMacCpsSignalingRequestMobPagAdvRsp_t" name="mobPagAdvReq">
					<descr>MOB_PAG-ADV signaling request. (NOTE: BS ONLY).</descr>
					<selector>NPF_F_WMAX_MAC_CPS_SIGNALING_REQUEST_MOB_PAG_ADV_TYPE</selector>
				</field>
				<field type="NPF_F_wmaxMacCpsSignalingRequestNoCdmaRngRsp_t" name="noCdmaRngRspReq">
					<descr>RNG-RSP signaling request with a request for bandwidth for expected response. (NOTE: BS ONLY).</descr>
					<selector>NPF_F_WMAX_MAC_CPS_SIGNALING_REQUEST_NO_CDMA_RNG_RSP_TYPE</selector>
				</field>
				<field type="NPF_F_wmaxMacCpsSignalingRequestSleepActivate_t" name="sleepActivateReq">
					<descr>MOB_SLP-RSP signaling message with parameters to activate Power Saving Class (NOTE: BS ONLY).</descr>
					<selector>NPF_F_WMAX_MAC_CPS_SIGNALING_REQUEST_SLEEP_ACTIVATE_TYPE</selector>
				</field>
				<field type="NPF_F_wmaxMacCpsSignalingRequestSleepDeactivate_t" name="sleepDeactivateReq">
					<descr>MOB_SLP-RSP signaling message with parameters to deactivate Power Saving Class (NOTE: BS ONLY).</descr>
					<selector>NPF_F_WMAX_MAC_CPS_SIGNALING_REQUEST_SLEEP_DEACTIVATE_TYPE</selector>
				</field>

			</selectunion>
		</struct>
		<func name="NPF_F_wmaxMacCpsSignalingRequest" type="NPF_error_t" brief="Signaling Request" xdrid="RPC_WMAX_MAC_SIG_REQ">
			<descr>
				This function is used by the MAC SignalingStack (the Control Plane) to request transmission of a MAC management message.
				</descr>
			<param io="in" type="NPF_callbackHandle_t" name="callbackHandle" xdr="no">
				<descr>
					Identifies the callback function which should be called.
					</descr>
			</param>
			<param io="in" type="NPF_correlator_t" name="correlator" xdr="no">
				<descr>
					A unique application invocation context that will be
					supplied to the asynchronous completion callback routine.
					</descr>
			</param>
			<param io="in" type="NPF_errorReporting_t" name="errorReporting" xdr="no">
				<descr>
					Defines whether a callback will be called after
					completing the action requested by the function call.
					</descr>
			</param>
			<param io="in" type="NPF_FEHandle_t" name="feHandle" xdr="no">
				<descr>
					Identifies the forwarding element where the action will be executed.
					</descr>
			</param>
			<param io="in" class="vector" type="NPF_F_wmaxMacCpsSignalingRequestArgs_t" name="argsArray" xdr="yes">
				<descr>Array of structures containing argsNum entries. Each entry contains parameters for one request.</descr>
				<length type="NPF_uint32_t" name="argsNum" brief="Number of elements in the argsArray table.">
				</length>
			</param>
			<return>
				<descr>
					Error code indicating if function call was successful.
					</descr>
				<retval name="NPF_NO_ERROR">
					<descr>
						The operation is in progress.
						</descr>
				</retval>
				<retval name="NPF_E_BAD_CALLBACK_HANDLE">
					<descr>
						The callback handle is invalid.
					</descr>
				</retval>
				<retval name="NPF_E_UNKNOWN">
					<descr>
						The operation cannot be completed successfully because
						of problems encountered when handling the input parameters.
						</descr>
				</retval>
			</return>
			<callback>
				<descr>
					If errorReporting is set to ALWAYS, a callback is invoked to
					indicate that the operation has been completed. The callback
					is identified by NPF_F_WMAX_MAC_CPS_CALLBACK_SIGNALING_REQUEST.
					</descr>
				<retval name="NPF_NO_ERROR" brief="Operation completed successfully.">
				</retval>
				<retval name="NPF_F_WMAX_MAC_CPS_ERROR_NO_RES" brief="Resources exhausted.">
				</retval>
				<retval name="NPF_F_WMAX_MAC_CPS_ERROR_INVALID_PARAMS" brief="Invalid parameter.">
				</retval>
			</callback>
		</func>
		<struct type="NPF_F_wmaxMacCpsDfsReportRequestArgs_t" name="" brief="DFS Report Request arguments">
			<descr>
				This data structure defines parameters of a DFS Report Request FAPI call.
				</descr>
			<field type="NPF_uint32_t" name="data" brief="">
			</field>
		</struct>
		<func name="NPF_F_wmaxMacCpsDfsReportRequest" type="NPF_error_t" brief="DFS Report Request" xdrid="RPC_WMAX_MAC_DFS_REP_REQ">
			<descr>
				This function allows for requesting DFS Report.
				</descr>
			<param io="in" type="NPF_callbackHandle_t" name="callbackHandle" xdr="no">
				<descr>
					Identifies the callback function which should be called.
					</descr>
			</param>
			<param io="in" type="NPF_correlator_t" name="correlator" xdr="no">
				<descr>
					A unique application invocation context that will be
					supplied to the asynchronous completion callback routine.
					</descr>
			</param>
			<param io="in" type="NPF_errorReporting_t" name="errorReporting" xdr="no">
				<descr>
					Defines whether a callback will be called after
					completing the action requested by the function call.
					</descr>
			</param>
			<param io="in" type="NPF_FEHandle_t" name="feHandle" xdr="no">
				<descr>
					Identifies the forwarding element where the action will be executed.
					</descr>
			</param>
			<param io="in" class="vector" type="NPF_F_wmaxMacCpsDfsReportRequestArgs_t" name="argsArray" xdr="yes">
				<descr>Array of structures containing argsNum entries. Each entry contains parameters for one request.</descr>
				<length type="NPF_uint32_t" name="argsNum" brief="Number of elements in the argsArray table.">
				</length>
			</param>
			<return>
				<descr>
					Error code indicating if function call was successful.
					</descr>
				<retval name="NPF_NO_ERROR">
					<descr>
						The operation is in progress.
						</descr>
				</retval>
				<retval name="NPF_E_BAD_CALLBACK_HANDLE">
					<descr>
						The callback handle is invalid.
					</descr>
				</retval>
				<retval name="NPF_E_UNKNOWN">
					<descr>
						The operation cannot be completed successfully because
						of problems encountered when handling the input parameters.
						</descr>
				</retval>
			</return>
			<callback>
				<descr>
					If errorReporting is set to ALWAYS, a callback is invoked to
					indicate that the operation has been completed. The callback
					is identified by NPF_F_WMAX_MAC_CPS_CALLBACK_DFS_REP_REQUEST.
					</descr>
				<retval name="NPF_NO_ERROR" brief="Operation completed successfully.">
				</retval>
				<retval name="NPF_F_WMAX_MAC_CPS_ERROR_NO_RES" brief="Resources exhausted.">
				</retval>
				<retval name="NPF_F_WMAX_MAC_CPS_ERROR_INVALID_PARAMS" brief="Invalid parameter.">
				</retval>
			</callback>
		</func>
		
		<struct type="NPF_F_wmaxMacCpsSleepDeactivateArgs_t" name="" brief="Deactivate Power Saving Class arguments">
			<descr>
				This data structure defines parameters of a Deactivate  Power Saving Class FAPI call.
			</descr>			
			<field name="slpid" type="NPF_uint16_t" brief="SLPID.">
				<descr>
						The 10-bits identifier assigned for a given active Power Saving Class. It is unique within MAC instance and assigned by the signaling stack.						
				</descr>
			</field>
		</struct>
		
		<func name="NPF_F_wmaxMacCpsSleepDeactivate" type="NPF_error_t" brief="Deactivate  Power Saving Class" xdrid="RPC_WMAX_MAC_SLEEP_DEACTIVATE">
			<descr>
				This function allows to deactivate a given PSC by sending MOB_TRF-IND message. The message itself is defined by MAC CPS and 
				send in the nearsest listening window.				
				</descr>
			<param io="in" type="NPF_callbackHandle_t" name="callbackHandle" xdr="no">
				<descr>
					Identifies the callback function which should be called.
					</descr>
			</param>
			<param io="in" type="NPF_correlator_t" name="correlator" xdr="no">
				<descr>
					A unique application invocation context that will be
					supplied to the asynchronous completion callback routine.
					</descr>
			</param>
			<param io="in" type="NPF_errorReporting_t" name="errorReporting" xdr="no">
				<descr>
					Defines whether a callback will be called after
					completing the action requested by the function call.
					</descr>
			</param>
			<param io="in" type="NPF_FEHandle_t" name="feHandle" xdr="no">
				<descr>
					Identifies the forwarding element where the action will be executed.
					</descr>
			</param>
			<param io="in" class="vector" type="NPF_F_wmaxMacCpsSleepDeactivateArgs_t" name="argsArray" xdr="yes">
				<descr>Array of structures containing argsNum entries. Each entry contains parameters for one request.</descr>
				<length type="NPF_uint32_t" name="argsNum" brief="Number of elements in the argsArray table.">
				</length>
			</param>
			<return>
				<descr>
					Error code indicating if function call was successful.
					</descr>
				<retval name="NPF_NO_ERROR">
					<descr>
						The operation is in progress.
						</descr>
				</retval>
				<retval name="NPF_E_BAD_CALLBACK_HANDLE">
					<descr>
						The callback handle is invalid.
					</descr>
				</retval>
				<retval name="NPF_E_UNKNOWN">
					<descr>
						The operation cannot be completed successfully because
						of problems encountered when handling the input parameters.
					</descr>
				</retval>
			</return>
			<callback>
				<descr>
					If errorReporting is set to ALWAYS, a callback is invoked to
					indicate that the operation has been completed. The callback
					is identified by NPF_F_WMAX_MAC_CPS_CALLBACK_SLEEP_DEACTIVATE.
					</descr>
				<retval name="NPF_NO_ERROR" brief="Operation completed successfully.">
				</retval>
				<retval name="NPF_F_WMAX_MAC_CPS_ERROR_NO_RES" brief="Resources exhausted.">
				</retval>
				<retval name="NPF_F_WMAX_MAC_CPS_ERROR_INVALID_PARAMS" brief="Invalid parameter.">
				</retval>
			</callback>
		</func>
	</section>
</api>
