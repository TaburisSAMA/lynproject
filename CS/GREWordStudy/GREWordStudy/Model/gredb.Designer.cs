//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("gredbModel", "FK_BasicMnemonics_GreWords", "GreWords", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GREWordStudy.Model.GreWord), "BasicMnemonics", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GREWordStudy.Model.BasicMnemonic), true)]
[assembly: EdmRelationshipAttribute("gredbModel", "FK_BengaliDefinitions_GreWords", "GreWords", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GREWordStudy.Model.GreWord), "BengaliDefinitions", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GREWordStudy.Model.BengaliDefinition), true)]
[assembly: EdmRelationshipAttribute("gredbModel", "FK_FeaturedMnemonics_GreWords", "GreWords", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GREWordStudy.Model.GreWord), "FeaturedMnemonics", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GREWordStudy.Model.FeaturedMnemonic), true)]
[assembly: EdmRelationshipAttribute("gredbModel", "FK_GooglePhrase_GreWords", "GreWords", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GREWordStudy.Model.GreWord), "GooglePhrase", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GREWordStudy.Model.GooglePhrase), true)]
[assembly: EdmRelationshipAttribute("gredbModel", "FK_GoogleSynonyms_GreWords", "GreWords", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GREWordStudy.Model.GreWord), "GoogleSynonyms", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GREWordStudy.Model.GoogleSynonym), true)]
[assembly: EdmRelationshipAttribute("gredbModel", "FK_GreWordAffinity_GreWords", "GreWords", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GREWordStudy.Model.GreWord), "GreWordAffinity", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GREWordStudy.Model.GreWordAffinity), true)]
[assembly: EdmRelationshipAttribute("gredbModel", "FK_GreWordAffinity_GreWords1", "GreWords", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GREWordStudy.Model.GreWord), "GreWordAffinity", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GREWordStudy.Model.GreWordAffinity), true)]
[assembly: EdmRelationshipAttribute("gredbModel", "FK_GreWordSynonymsNet_GreWords", "GreWords", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GREWordStudy.Model.GreWord), "GreWordDefinitions", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GREWordStudy.Model.GreWordDefinition), true)]
[assembly: EdmRelationshipAttribute("gredbModel", "FK_Definitions_GreWords", "GreWords", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GREWordStudy.Model.GreWord), "WordDefinitions", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GREWordStudy.Model.WordDefinition), true)]
[assembly: EdmRelationshipAttribute("gredbModel", "FK_Etymology_GreWords", "GreWords", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GREWordStudy.Model.GreWord), "WordEtymology", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GREWordStudy.Model.WordEtymology), true)]
[assembly: EdmRelationshipAttribute("gredbModel", "FK_GreWordSynonyms_GreWords", "GreWords", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GREWordStudy.Model.GreWord), "GreWordSynonyms", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GREWordStudy.Model.GreWordSynonym), true)]
[assembly: EdmRelationshipAttribute("gredbModel", "FK_WordLists_GreWords", "GreWords", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GREWordStudy.Model.GreWord), "ListedWords", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GREWordStudy.Model.ListedWord), true)]
[assembly: EdmRelationshipAttribute("gredbModel", "FK_GreWordLists_WordList", "ListName", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(GREWordStudy.Model.ListName), "ListedWords", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(GREWordStudy.Model.ListedWord), true)]

#endregion

namespace GREWordStudy.Model
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class gredbEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new gredbEntities object using the connection string found in the 'gredbEntities' section of the application configuration file.
        /// </summary>
        public gredbEntities() : base("name=gredbEntities", "gredbEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new gredbEntities object.
        /// </summary>
        public gredbEntities(string connectionString) : base(connectionString, "gredbEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new gredbEntities object.
        /// </summary>
        public gredbEntities(EntityConnection connection) : base(connection, "gredbEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BasicMnemonic> BasicMnemonics
        {
            get
            {
                if ((_BasicMnemonics == null))
                {
                    _BasicMnemonics = base.CreateObjectSet<BasicMnemonic>("BasicMnemonics");
                }
                return _BasicMnemonics;
            }
        }
        private ObjectSet<BasicMnemonic> _BasicMnemonics;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BengaliDefinition> BengaliDefinitions
        {
            get
            {
                if ((_BengaliDefinitions == null))
                {
                    _BengaliDefinitions = base.CreateObjectSet<BengaliDefinition>("BengaliDefinitions");
                }
                return _BengaliDefinitions;
            }
        }
        private ObjectSet<BengaliDefinition> _BengaliDefinitions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DefinitionsNetHtml> DefinitionsNetHtmls
        {
            get
            {
                if ((_DefinitionsNetHtmls == null))
                {
                    _DefinitionsNetHtmls = base.CreateObjectSet<DefinitionsNetHtml>("DefinitionsNetHtmls");
                }
                return _DefinitionsNetHtmls;
            }
        }
        private ObjectSet<DefinitionsNetHtml> _DefinitionsNetHtmls;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EtymologyHtml> EtymologyHtmls
        {
            get
            {
                if ((_EtymologyHtmls == null))
                {
                    _EtymologyHtmls = base.CreateObjectSet<EtymologyHtml>("EtymologyHtmls");
                }
                return _EtymologyHtmls;
            }
        }
        private ObjectSet<EtymologyHtml> _EtymologyHtmls;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<FeaturedMnemonic> FeaturedMnemonics
        {
            get
            {
                if ((_FeaturedMnemonics == null))
                {
                    _FeaturedMnemonics = base.CreateObjectSet<FeaturedMnemonic>("FeaturedMnemonics");
                }
                return _FeaturedMnemonics;
            }
        }
        private ObjectSet<FeaturedMnemonic> _FeaturedMnemonics;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<GoogleDictionaryHtml> GoogleDictionaryHtmls
        {
            get
            {
                if ((_GoogleDictionaryHtmls == null))
                {
                    _GoogleDictionaryHtmls = base.CreateObjectSet<GoogleDictionaryHtml>("GoogleDictionaryHtmls");
                }
                return _GoogleDictionaryHtmls;
            }
        }
        private ObjectSet<GoogleDictionaryHtml> _GoogleDictionaryHtmls;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<GooglePhrase> GooglePhrases
        {
            get
            {
                if ((_GooglePhrases == null))
                {
                    _GooglePhrases = base.CreateObjectSet<GooglePhrase>("GooglePhrases");
                }
                return _GooglePhrases;
            }
        }
        private ObjectSet<GooglePhrase> _GooglePhrases;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<GoogleSynonym> GoogleSynonyms
        {
            get
            {
                if ((_GoogleSynonyms == null))
                {
                    _GoogleSynonyms = base.CreateObjectSet<GoogleSynonym>("GoogleSynonyms");
                }
                return _GoogleSynonyms;
            }
        }
        private ObjectSet<GoogleSynonym> _GoogleSynonyms;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<GreWordAffinity> GreWordAffinities
        {
            get
            {
                if ((_GreWordAffinities == null))
                {
                    _GreWordAffinities = base.CreateObjectSet<GreWordAffinity>("GreWordAffinities");
                }
                return _GreWordAffinities;
            }
        }
        private ObjectSet<GreWordAffinity> _GreWordAffinities;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<GreWordDefinition> GreWordDefinitions
        {
            get
            {
                if ((_GreWordDefinitions == null))
                {
                    _GreWordDefinitions = base.CreateObjectSet<GreWordDefinition>("GreWordDefinitions");
                }
                return _GreWordDefinitions;
            }
        }
        private ObjectSet<GreWordDefinition> _GreWordDefinitions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<GreWord> GreWords
        {
            get
            {
                if ((_GreWords == null))
                {
                    _GreWords = base.CreateObjectSet<GreWord>("GreWords");
                }
                return _GreWords;
            }
        }
        private ObjectSet<GreWord> _GreWords;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<GreWordSynonym> GreWordSynonyms
        {
            get
            {
                if ((_GreWordSynonyms == null))
                {
                    _GreWordSynonyms = base.CreateObjectSet<GreWordSynonym>("GreWordSynonyms");
                }
                return _GreWordSynonyms;
            }
        }
        private ObjectSet<GreWordSynonym> _GreWordSynonyms;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ListedWord> ListedWords
        {
            get
            {
                if ((_ListedWords == null))
                {
                    _ListedWords = base.CreateObjectSet<ListedWord>("ListedWords");
                }
                return _ListedWords;
            }
        }
        private ObjectSet<ListedWord> _ListedWords;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ListName> ListNames
        {
            get
            {
                if ((_ListNames == null))
                {
                    _ListNames = base.CreateObjectSet<ListName>("ListNames");
                }
                return _ListNames;
            }
        }
        private ObjectSet<ListName> _ListNames;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<MnemonicsDictionaryHtml> MnemonicsDictionaryHtmls
        {
            get
            {
                if ((_MnemonicsDictionaryHtmls == null))
                {
                    _MnemonicsDictionaryHtmls = base.CreateObjectSet<MnemonicsDictionaryHtml>("MnemonicsDictionaryHtmls");
                }
                return _MnemonicsDictionaryHtmls;
            }
        }
        private ObjectSet<MnemonicsDictionaryHtml> _MnemonicsDictionaryHtmls;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SynonymsNetHtml> SynonymsNetHtmls
        {
            get
            {
                if ((_SynonymsNetHtmls == null))
                {
                    _SynonymsNetHtmls = base.CreateObjectSet<SynonymsNetHtml>("SynonymsNetHtmls");
                }
                return _SynonymsNetHtmls;
            }
        }
        private ObjectSet<SynonymsNetHtml> _SynonymsNetHtmls;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UnfinishedWord> UnfinishedWords
        {
            get
            {
                if ((_UnfinishedWords == null))
                {
                    _UnfinishedWords = base.CreateObjectSet<UnfinishedWord>("UnfinishedWords");
                }
                return _UnfinishedWords;
            }
        }
        private ObjectSet<UnfinishedWord> _UnfinishedWords;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<WebUrl> WebUrls
        {
            get
            {
                if ((_WebUrls == null))
                {
                    _WebUrls = base.CreateObjectSet<WebUrl>("WebUrls");
                }
                return _WebUrls;
            }
        }
        private ObjectSet<WebUrl> _WebUrls;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<WordDefinition> WordDefinitions
        {
            get
            {
                if ((_WordDefinitions == null))
                {
                    _WordDefinitions = base.CreateObjectSet<WordDefinition>("WordDefinitions");
                }
                return _WordDefinitions;
            }
        }
        private ObjectSet<WordDefinition> _WordDefinitions;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<WordEtymology> WordEtymologies
        {
            get
            {
                if ((_WordEtymologies == null))
                {
                    _WordEtymologies = base.CreateObjectSet<WordEtymology>("WordEtymologies");
                }
                return _WordEtymologies;
            }
        }
        private ObjectSet<WordEtymology> _WordEtymologies;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BasicMnemonics EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBasicMnemonics(BasicMnemonic basicMnemonic)
        {
            base.AddObject("BasicMnemonics", basicMnemonic);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BengaliDefinitions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBengaliDefinitions(BengaliDefinition bengaliDefinition)
        {
            base.AddObject("BengaliDefinitions", bengaliDefinition);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DefinitionsNetHtmls EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDefinitionsNetHtmls(DefinitionsNetHtml definitionsNetHtml)
        {
            base.AddObject("DefinitionsNetHtmls", definitionsNetHtml);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EtymologyHtmls EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEtymologyHtmls(EtymologyHtml etymologyHtml)
        {
            base.AddObject("EtymologyHtmls", etymologyHtml);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FeaturedMnemonics EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFeaturedMnemonics(FeaturedMnemonic featuredMnemonic)
        {
            base.AddObject("FeaturedMnemonics", featuredMnemonic);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the GoogleDictionaryHtmls EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGoogleDictionaryHtmls(GoogleDictionaryHtml googleDictionaryHtml)
        {
            base.AddObject("GoogleDictionaryHtmls", googleDictionaryHtml);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the GooglePhrases EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGooglePhrases(GooglePhrase googlePhrase)
        {
            base.AddObject("GooglePhrases", googlePhrase);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the GoogleSynonyms EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGoogleSynonyms(GoogleSynonym googleSynonym)
        {
            base.AddObject("GoogleSynonyms", googleSynonym);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the GreWordAffinities EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGreWordAffinities(GreWordAffinity greWordAffinity)
        {
            base.AddObject("GreWordAffinities", greWordAffinity);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the GreWordDefinitions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGreWordDefinitions(GreWordDefinition greWordDefinition)
        {
            base.AddObject("GreWordDefinitions", greWordDefinition);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the GreWords EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGreWords(GreWord greWord)
        {
            base.AddObject("GreWords", greWord);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the GreWordSynonyms EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToGreWordSynonyms(GreWordSynonym greWordSynonym)
        {
            base.AddObject("GreWordSynonyms", greWordSynonym);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ListedWords EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToListedWords(ListedWord listedWord)
        {
            base.AddObject("ListedWords", listedWord);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ListNames EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToListNames(ListName listName)
        {
            base.AddObject("ListNames", listName);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the MnemonicsDictionaryHtmls EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToMnemonicsDictionaryHtmls(MnemonicsDictionaryHtml mnemonicsDictionaryHtml)
        {
            base.AddObject("MnemonicsDictionaryHtmls", mnemonicsDictionaryHtml);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SynonymsNetHtmls EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSynonymsNetHtmls(SynonymsNetHtml synonymsNetHtml)
        {
            base.AddObject("SynonymsNetHtmls", synonymsNetHtml);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UnfinishedWords EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUnfinishedWords(UnfinishedWord unfinishedWord)
        {
            base.AddObject("UnfinishedWords", unfinishedWord);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the WebUrls EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToWebUrls(WebUrl webUrl)
        {
            base.AddObject("WebUrls", webUrl);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the WordDefinitions EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToWordDefinitions(WordDefinition wordDefinition)
        {
            base.AddObject("WordDefinitions", wordDefinition);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the WordEtymologies EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToWordEtymologies(WordEtymology wordEtymology)
        {
            base.AddObject("WordEtymologies", wordEtymology);
        }

        #endregion
        #region Function Imports
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public int RemoveHtml()
        {
            return base.ExecuteFunction("RemoveHtml");
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public int RemoveDuplicateBengaliWord()
        {
            return base.ExecuteFunction("RemoveDuplicateBengaliWord");
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="gredbModel", Name="BasicMnemonic")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BasicMnemonic : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BasicMnemonic object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="word">Initial value of the Word property.</param>
        /// <param name="mnemonic">Initial value of the Mnemonic property.</param>
        /// <param name="helpful">Initial value of the Helpful property.</param>
        /// <param name="notHelpful">Initial value of the NotHelpful property.</param>
        public static BasicMnemonic CreateBasicMnemonic(global::System.Int64 id, global::System.String word, global::System.String mnemonic, global::System.String helpful, global::System.String notHelpful)
        {
            BasicMnemonic basicMnemonic = new BasicMnemonic();
            basicMnemonic.Id = id;
            basicMnemonic.Word = word;
            basicMnemonic.Mnemonic = mnemonic;
            basicMnemonic.Helpful = helpful;
            basicMnemonic.NotHelpful = notHelpful;
            return basicMnemonic;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Word
        {
            get
            {
                return _Word;
            }
            set
            {
                OnWordChanging(value);
                ReportPropertyChanging("Word");
                _Word = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Word");
                OnWordChanged();
            }
        }
        private global::System.String _Word;
        partial void OnWordChanging(global::System.String value);
        partial void OnWordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Mnemonic
        {
            get
            {
                return _Mnemonic;
            }
            set
            {
                OnMnemonicChanging(value);
                ReportPropertyChanging("Mnemonic");
                _Mnemonic = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Mnemonic");
                OnMnemonicChanged();
            }
        }
        private global::System.String _Mnemonic;
        partial void OnMnemonicChanging(global::System.String value);
        partial void OnMnemonicChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Helpful
        {
            get
            {
                return _Helpful;
            }
            set
            {
                OnHelpfulChanging(value);
                ReportPropertyChanging("Helpful");
                _Helpful = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Helpful");
                OnHelpfulChanged();
            }
        }
        private global::System.String _Helpful;
        partial void OnHelpfulChanging(global::System.String value);
        partial void OnHelpfulChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NotHelpful
        {
            get
            {
                return _NotHelpful;
            }
            set
            {
                OnNotHelpfulChanging(value);
                ReportPropertyChanging("NotHelpful");
                _NotHelpful = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("NotHelpful");
                OnNotHelpfulChanged();
            }
        }
        private global::System.String _NotHelpful;
        partial void OnNotHelpfulChanging(global::System.String value);
        partial void OnNotHelpfulChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("gredbModel", "FK_BasicMnemonics_GreWords", "GreWords")]
        public GreWord GreWord
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GreWord>("gredbModel.FK_BasicMnemonics_GreWords", "GreWords").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GreWord>("gredbModel.FK_BasicMnemonics_GreWords", "GreWords").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<GreWord> GreWordReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GreWord>("gredbModel.FK_BasicMnemonics_GreWords", "GreWords");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<GreWord>("gredbModel.FK_BasicMnemonics_GreWords", "GreWords", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="gredbModel", Name="BengaliDefinition")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BengaliDefinition : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BengaliDefinition object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="word">Initial value of the Word property.</param>
        /// <param name="bengali">Initial value of the Bengali property.</param>
        public static BengaliDefinition CreateBengaliDefinition(global::System.Int64 id, global::System.String word, global::System.String bengali)
        {
            BengaliDefinition bengaliDefinition = new BengaliDefinition();
            bengaliDefinition.Id = id;
            bengaliDefinition.Word = word;
            bengaliDefinition.Bengali = bengali;
            return bengaliDefinition;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Word
        {
            get
            {
                return _Word;
            }
            set
            {
                OnWordChanging(value);
                ReportPropertyChanging("Word");
                _Word = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Word");
                OnWordChanged();
            }
        }
        private global::System.String _Word;
        partial void OnWordChanging(global::System.String value);
        partial void OnWordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Bengali
        {
            get
            {
                return _Bengali;
            }
            set
            {
                OnBengaliChanging(value);
                ReportPropertyChanging("Bengali");
                _Bengali = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Bengali");
                OnBengaliChanged();
            }
        }
        private global::System.String _Bengali;
        partial void OnBengaliChanging(global::System.String value);
        partial void OnBengaliChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("gredbModel", "FK_BengaliDefinitions_GreWords", "GreWords")]
        public GreWord GreWord
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GreWord>("gredbModel.FK_BengaliDefinitions_GreWords", "GreWords").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GreWord>("gredbModel.FK_BengaliDefinitions_GreWords", "GreWords").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<GreWord> GreWordReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GreWord>("gredbModel.FK_BengaliDefinitions_GreWords", "GreWords");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<GreWord>("gredbModel.FK_BengaliDefinitions_GreWords", "GreWords", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="gredbModel", Name="DefinitionsNetHtml")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DefinitionsNetHtml : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DefinitionsNetHtml object.
        /// </summary>
        /// <param name="word">Initial value of the Word property.</param>
        /// <param name="html">Initial value of the Html property.</param>
        public static DefinitionsNetHtml CreateDefinitionsNetHtml(global::System.String word, global::System.String html)
        {
            DefinitionsNetHtml definitionsNetHtml = new DefinitionsNetHtml();
            definitionsNetHtml.Word = word;
            definitionsNetHtml.Html = html;
            return definitionsNetHtml;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Word
        {
            get
            {
                return _Word;
            }
            set
            {
                if (_Word != value)
                {
                    OnWordChanging(value);
                    ReportPropertyChanging("Word");
                    _Word = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Word");
                    OnWordChanged();
                }
            }
        }
        private global::System.String _Word;
        partial void OnWordChanging(global::System.String value);
        partial void OnWordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Html
        {
            get
            {
                return _Html;
            }
            set
            {
                OnHtmlChanging(value);
                ReportPropertyChanging("Html");
                _Html = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Html");
                OnHtmlChanged();
            }
        }
        private global::System.String _Html;
        partial void OnHtmlChanging(global::System.String value);
        partial void OnHtmlChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="gredbModel", Name="EtymologyHtml")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EtymologyHtml : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EtymologyHtml object.
        /// </summary>
        /// <param name="word">Initial value of the Word property.</param>
        /// <param name="html">Initial value of the Html property.</param>
        public static EtymologyHtml CreateEtymologyHtml(global::System.String word, global::System.String html)
        {
            EtymologyHtml etymologyHtml = new EtymologyHtml();
            etymologyHtml.Word = word;
            etymologyHtml.Html = html;
            return etymologyHtml;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Word
        {
            get
            {
                return _Word;
            }
            set
            {
                if (_Word != value)
                {
                    OnWordChanging(value);
                    ReportPropertyChanging("Word");
                    _Word = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Word");
                    OnWordChanged();
                }
            }
        }
        private global::System.String _Word;
        partial void OnWordChanging(global::System.String value);
        partial void OnWordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Html
        {
            get
            {
                return _Html;
            }
            set
            {
                OnHtmlChanging(value);
                ReportPropertyChanging("Html");
                _Html = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Html");
                OnHtmlChanged();
            }
        }
        private global::System.String _Html;
        partial void OnHtmlChanging(global::System.String value);
        partial void OnHtmlChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="gredbModel", Name="FeaturedMnemonic")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FeaturedMnemonic : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FeaturedMnemonic object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="word">Initial value of the Word property.</param>
        /// <param name="mnemonic">Initial value of the Mnemonic property.</param>
        public static FeaturedMnemonic CreateFeaturedMnemonic(global::System.Int64 id, global::System.String word, global::System.String mnemonic)
        {
            FeaturedMnemonic featuredMnemonic = new FeaturedMnemonic();
            featuredMnemonic.Id = id;
            featuredMnemonic.Word = word;
            featuredMnemonic.Mnemonic = mnemonic;
            return featuredMnemonic;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Word
        {
            get
            {
                return _Word;
            }
            set
            {
                OnWordChanging(value);
                ReportPropertyChanging("Word");
                _Word = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Word");
                OnWordChanged();
            }
        }
        private global::System.String _Word;
        partial void OnWordChanging(global::System.String value);
        partial void OnWordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Mnemonic
        {
            get
            {
                return _Mnemonic;
            }
            set
            {
                OnMnemonicChanging(value);
                ReportPropertyChanging("Mnemonic");
                _Mnemonic = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Mnemonic");
                OnMnemonicChanged();
            }
        }
        private global::System.String _Mnemonic;
        partial void OnMnemonicChanging(global::System.String value);
        partial void OnMnemonicChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("gredbModel", "FK_FeaturedMnemonics_GreWords", "GreWords")]
        public GreWord GreWord
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GreWord>("gredbModel.FK_FeaturedMnemonics_GreWords", "GreWords").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GreWord>("gredbModel.FK_FeaturedMnemonics_GreWords", "GreWords").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<GreWord> GreWordReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GreWord>("gredbModel.FK_FeaturedMnemonics_GreWords", "GreWords");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<GreWord>("gredbModel.FK_FeaturedMnemonics_GreWords", "GreWords", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="gredbModel", Name="GoogleDictionaryHtml")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class GoogleDictionaryHtml : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GoogleDictionaryHtml object.
        /// </summary>
        /// <param name="word">Initial value of the Word property.</param>
        /// <param name="html">Initial value of the Html property.</param>
        public static GoogleDictionaryHtml CreateGoogleDictionaryHtml(global::System.String word, global::System.String html)
        {
            GoogleDictionaryHtml googleDictionaryHtml = new GoogleDictionaryHtml();
            googleDictionaryHtml.Word = word;
            googleDictionaryHtml.Html = html;
            return googleDictionaryHtml;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Word
        {
            get
            {
                return _Word;
            }
            set
            {
                if (_Word != value)
                {
                    OnWordChanging(value);
                    ReportPropertyChanging("Word");
                    _Word = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Word");
                    OnWordChanged();
                }
            }
        }
        private global::System.String _Word;
        partial void OnWordChanging(global::System.String value);
        partial void OnWordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Html
        {
            get
            {
                return _Html;
            }
            set
            {
                OnHtmlChanging(value);
                ReportPropertyChanging("Html");
                _Html = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Html");
                OnHtmlChanged();
            }
        }
        private global::System.String _Html;
        partial void OnHtmlChanging(global::System.String value);
        partial void OnHtmlChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="gredbModel", Name="GooglePhrase")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class GooglePhrase : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GooglePhrase object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="word">Initial value of the Word property.</param>
        /// <param name="englishPhrase">Initial value of the EnglishPhrase property.</param>
        /// <param name="bengaliPhrase">Initial value of the BengaliPhrase property.</param>
        public static GooglePhrase CreateGooglePhrase(global::System.Int64 id, global::System.String word, global::System.String englishPhrase, global::System.String bengaliPhrase)
        {
            GooglePhrase googlePhrase = new GooglePhrase();
            googlePhrase.Id = id;
            googlePhrase.Word = word;
            googlePhrase.EnglishPhrase = englishPhrase;
            googlePhrase.BengaliPhrase = bengaliPhrase;
            return googlePhrase;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Word
        {
            get
            {
                return _Word;
            }
            set
            {
                OnWordChanging(value);
                ReportPropertyChanging("Word");
                _Word = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Word");
                OnWordChanged();
            }
        }
        private global::System.String _Word;
        partial void OnWordChanging(global::System.String value);
        partial void OnWordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String EnglishPhrase
        {
            get
            {
                return _EnglishPhrase;
            }
            set
            {
                OnEnglishPhraseChanging(value);
                ReportPropertyChanging("EnglishPhrase");
                _EnglishPhrase = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("EnglishPhrase");
                OnEnglishPhraseChanged();
            }
        }
        private global::System.String _EnglishPhrase;
        partial void OnEnglishPhraseChanging(global::System.String value);
        partial void OnEnglishPhraseChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String BengaliPhrase
        {
            get
            {
                return _BengaliPhrase;
            }
            set
            {
                OnBengaliPhraseChanging(value);
                ReportPropertyChanging("BengaliPhrase");
                _BengaliPhrase = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("BengaliPhrase");
                OnBengaliPhraseChanged();
            }
        }
        private global::System.String _BengaliPhrase;
        partial void OnBengaliPhraseChanging(global::System.String value);
        partial void OnBengaliPhraseChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("gredbModel", "FK_GooglePhrase_GreWords", "GreWords")]
        public GreWord GreWord
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GreWord>("gredbModel.FK_GooglePhrase_GreWords", "GreWords").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GreWord>("gredbModel.FK_GooglePhrase_GreWords", "GreWords").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<GreWord> GreWordReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GreWord>("gredbModel.FK_GooglePhrase_GreWords", "GreWords");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<GreWord>("gredbModel.FK_GooglePhrase_GreWords", "GreWords", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="gredbModel", Name="GoogleSynonym")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class GoogleSynonym : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GoogleSynonym object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="word">Initial value of the Word property.</param>
        /// <param name="synonym">Initial value of the Synonym property.</param>
        public static GoogleSynonym CreateGoogleSynonym(global::System.Int64 id, global::System.String word, global::System.String synonym)
        {
            GoogleSynonym googleSynonym = new GoogleSynonym();
            googleSynonym.Id = id;
            googleSynonym.Word = word;
            googleSynonym.Synonym = synonym;
            return googleSynonym;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Word
        {
            get
            {
                return _Word;
            }
            set
            {
                OnWordChanging(value);
                ReportPropertyChanging("Word");
                _Word = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Word");
                OnWordChanged();
            }
        }
        private global::System.String _Word;
        partial void OnWordChanging(global::System.String value);
        partial void OnWordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Synonym
        {
            get
            {
                return _Synonym;
            }
            set
            {
                OnSynonymChanging(value);
                ReportPropertyChanging("Synonym");
                _Synonym = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Synonym");
                OnSynonymChanged();
            }
        }
        private global::System.String _Synonym;
        partial void OnSynonymChanging(global::System.String value);
        partial void OnSynonymChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("gredbModel", "FK_GoogleSynonyms_GreWords", "GreWords")]
        public GreWord GreWord
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GreWord>("gredbModel.FK_GoogleSynonyms_GreWords", "GreWords").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GreWord>("gredbModel.FK_GoogleSynonyms_GreWords", "GreWords").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<GreWord> GreWordReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GreWord>("gredbModel.FK_GoogleSynonyms_GreWords", "GreWords");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<GreWord>("gredbModel.FK_GoogleSynonyms_GreWords", "GreWords", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="gredbModel", Name="GreWord")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class GreWord : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GreWord object.
        /// </summary>
        /// <param name="word">Initial value of the Word property.</param>
        /// <param name="hardness">Initial value of the Hardness property.</param>
        /// <param name="bookmarked">Initial value of the Bookmarked property.</param>
        /// <param name="remembered">Initial value of the Remembered property.</param>
        /// <param name="forgotten">Initial value of the Forgotten property.</param>
        public static GreWord CreateGreWord(global::System.String word, global::System.Int32 hardness, global::System.Boolean bookmarked, global::System.Int32 remembered, global::System.Int32 forgotten)
        {
            GreWord greWord = new GreWord();
            greWord.Word = word;
            greWord.Hardness = hardness;
            greWord.Bookmarked = bookmarked;
            greWord.Remembered = remembered;
            greWord.Forgotten = forgotten;
            return greWord;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Word
        {
            get
            {
                return _Word;
            }
            set
            {
                if (_Word != value)
                {
                    OnWordChanging(value);
                    ReportPropertyChanging("Word");
                    _Word = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Word");
                    OnWordChanged();
                }
            }
        }
        private global::System.String _Word;
        partial void OnWordChanging(global::System.String value);
        partial void OnWordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Hardness
        {
            get
            {
                return _Hardness;
            }
            set
            {
                OnHardnessChanging(value);
                ReportPropertyChanging("Hardness");
                _Hardness = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Hardness");
                OnHardnessChanged();
            }
        }
        private global::System.Int32 _Hardness;
        partial void OnHardnessChanging(global::System.Int32 value);
        partial void OnHardnessChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Comment
        {
            get
            {
                return _Comment;
            }
            set
            {
                OnCommentChanging(value);
                ReportPropertyChanging("Comment");
                _Comment = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Comment");
                OnCommentChanged();
            }
        }
        private global::System.String _Comment;
        partial void OnCommentChanging(global::System.String value);
        partial void OnCommentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Bookmarked
        {
            get
            {
                return _Bookmarked;
            }
            set
            {
                OnBookmarkedChanging(value);
                ReportPropertyChanging("Bookmarked");
                _Bookmarked = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Bookmarked");
                OnBookmarkedChanged();
            }
        }
        private global::System.Boolean _Bookmarked;
        partial void OnBookmarkedChanging(global::System.Boolean value);
        partial void OnBookmarkedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Remembered
        {
            get
            {
                return _Remembered;
            }
            set
            {
                OnRememberedChanging(value);
                ReportPropertyChanging("Remembered");
                _Remembered = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Remembered");
                OnRememberedChanged();
            }
        }
        private global::System.Int32 _Remembered;
        partial void OnRememberedChanging(global::System.Int32 value);
        partial void OnRememberedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Forgotten
        {
            get
            {
                return _Forgotten;
            }
            set
            {
                OnForgottenChanging(value);
                ReportPropertyChanging("Forgotten");
                _Forgotten = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Forgotten");
                OnForgottenChanged();
            }
        }
        private global::System.Int32 _Forgotten;
        partial void OnForgottenChanging(global::System.Int32 value);
        partial void OnForgottenChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("gredbModel", "FK_BasicMnemonics_GreWords", "BasicMnemonics")]
        public EntityCollection<BasicMnemonic> BasicMnemonics
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BasicMnemonic>("gredbModel.FK_BasicMnemonics_GreWords", "BasicMnemonics");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BasicMnemonic>("gredbModel.FK_BasicMnemonics_GreWords", "BasicMnemonics", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("gredbModel", "FK_BengaliDefinitions_GreWords", "BengaliDefinitions")]
        public EntityCollection<BengaliDefinition> BengaliDefinitions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BengaliDefinition>("gredbModel.FK_BengaliDefinitions_GreWords", "BengaliDefinitions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BengaliDefinition>("gredbModel.FK_BengaliDefinitions_GreWords", "BengaliDefinitions", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("gredbModel", "FK_FeaturedMnemonics_GreWords", "FeaturedMnemonics")]
        public EntityCollection<FeaturedMnemonic> FeaturedMnemonics
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<FeaturedMnemonic>("gredbModel.FK_FeaturedMnemonics_GreWords", "FeaturedMnemonics");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<FeaturedMnemonic>("gredbModel.FK_FeaturedMnemonics_GreWords", "FeaturedMnemonics", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("gredbModel", "FK_GooglePhrase_GreWords", "GooglePhrase")]
        public EntityCollection<GooglePhrase> GooglePhrases
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<GooglePhrase>("gredbModel.FK_GooglePhrase_GreWords", "GooglePhrase");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<GooglePhrase>("gredbModel.FK_GooglePhrase_GreWords", "GooglePhrase", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("gredbModel", "FK_GoogleSynonyms_GreWords", "GoogleSynonyms")]
        public EntityCollection<GoogleSynonym> GoogleSynonyms
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<GoogleSynonym>("gredbModel.FK_GoogleSynonyms_GreWords", "GoogleSynonyms");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<GoogleSynonym>("gredbModel.FK_GoogleSynonyms_GreWords", "GoogleSynonyms", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("gredbModel", "FK_GreWordAffinity_GreWords", "GreWordAffinity")]
        public EntityCollection<GreWordAffinity> GreWordAffinities
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<GreWordAffinity>("gredbModel.FK_GreWordAffinity_GreWords", "GreWordAffinity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<GreWordAffinity>("gredbModel.FK_GreWordAffinity_GreWords", "GreWordAffinity", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("gredbModel", "FK_GreWordAffinity_GreWords1", "GreWordAffinity")]
        public EntityCollection<GreWordAffinity> GreWordAffinities1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<GreWordAffinity>("gredbModel.FK_GreWordAffinity_GreWords1", "GreWordAffinity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<GreWordAffinity>("gredbModel.FK_GreWordAffinity_GreWords1", "GreWordAffinity", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("gredbModel", "FK_GreWordSynonymsNet_GreWords", "GreWordDefinitions")]
        public EntityCollection<GreWordDefinition> GreWordDefinitions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<GreWordDefinition>("gredbModel.FK_GreWordSynonymsNet_GreWords", "GreWordDefinitions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<GreWordDefinition>("gredbModel.FK_GreWordSynonymsNet_GreWords", "GreWordDefinitions", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("gredbModel", "FK_Definitions_GreWords", "WordDefinitions")]
        public EntityCollection<WordDefinition> WordDefinitions
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<WordDefinition>("gredbModel.FK_Definitions_GreWords", "WordDefinitions");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<WordDefinition>("gredbModel.FK_Definitions_GreWords", "WordDefinitions", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("gredbModel", "FK_Etymology_GreWords", "WordEtymology")]
        public EntityCollection<WordEtymology> WordEtymologies
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<WordEtymology>("gredbModel.FK_Etymology_GreWords", "WordEtymology");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<WordEtymology>("gredbModel.FK_Etymology_GreWords", "WordEtymology", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("gredbModel", "FK_GreWordSynonyms_GreWords", "GreWordSynonyms")]
        public EntityCollection<GreWordSynonym> GreWordSynonyms
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<GreWordSynonym>("gredbModel.FK_GreWordSynonyms_GreWords", "GreWordSynonyms");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<GreWordSynonym>("gredbModel.FK_GreWordSynonyms_GreWords", "GreWordSynonyms", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("gredbModel", "FK_WordLists_GreWords", "ListedWords")]
        public EntityCollection<ListedWord> ListedWords
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ListedWord>("gredbModel.FK_WordLists_GreWords", "ListedWords");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ListedWord>("gredbModel.FK_WordLists_GreWords", "ListedWords", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="gredbModel", Name="GreWordAffinity")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class GreWordAffinity : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GreWordAffinity object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="word">Initial value of the Word property.</param>
        /// <param name="related">Initial value of the Related property.</param>
        /// <param name="affinity">Initial value of the Affinity property.</param>
        public static GreWordAffinity CreateGreWordAffinity(global::System.Int64 id, global::System.String word, global::System.String related, global::System.Int32 affinity)
        {
            GreWordAffinity greWordAffinity = new GreWordAffinity();
            greWordAffinity.Id = id;
            greWordAffinity.Word = word;
            greWordAffinity.Related = related;
            greWordAffinity.Affinity = affinity;
            return greWordAffinity;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Word
        {
            get
            {
                return _Word;
            }
            set
            {
                OnWordChanging(value);
                ReportPropertyChanging("Word");
                _Word = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Word");
                OnWordChanged();
            }
        }
        private global::System.String _Word;
        partial void OnWordChanging(global::System.String value);
        partial void OnWordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Related
        {
            get
            {
                return _Related;
            }
            set
            {
                OnRelatedChanging(value);
                ReportPropertyChanging("Related");
                _Related = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Related");
                OnRelatedChanged();
            }
        }
        private global::System.String _Related;
        partial void OnRelatedChanging(global::System.String value);
        partial void OnRelatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Affinity
        {
            get
            {
                return _Affinity;
            }
            set
            {
                OnAffinityChanging(value);
                ReportPropertyChanging("Affinity");
                _Affinity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Affinity");
                OnAffinityChanged();
            }
        }
        private global::System.Int32 _Affinity;
        partial void OnAffinityChanging(global::System.Int32 value);
        partial void OnAffinityChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("gredbModel", "FK_GreWordAffinity_GreWords", "GreWords")]
        public GreWord GreWord
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GreWord>("gredbModel.FK_GreWordAffinity_GreWords", "GreWords").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GreWord>("gredbModel.FK_GreWordAffinity_GreWords", "GreWords").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<GreWord> GreWordReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GreWord>("gredbModel.FK_GreWordAffinity_GreWords", "GreWords");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<GreWord>("gredbModel.FK_GreWordAffinity_GreWords", "GreWords", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("gredbModel", "FK_GreWordAffinity_GreWords1", "GreWords")]
        public GreWord RelevantWord
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GreWord>("gredbModel.FK_GreWordAffinity_GreWords1", "GreWords").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GreWord>("gredbModel.FK_GreWordAffinity_GreWords1", "GreWords").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<GreWord> RelevantWordReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GreWord>("gredbModel.FK_GreWordAffinity_GreWords1", "GreWords");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<GreWord>("gredbModel.FK_GreWordAffinity_GreWords1", "GreWords", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="gredbModel", Name="GreWordDefinition")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class GreWordDefinition : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GreWordDefinition object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="word">Initial value of the Word property.</param>
        /// <param name="serial">Initial value of the Serial property.</param>
        /// <param name="partsOfSpeech">Initial value of the PartsOfSpeech property.</param>
        public static GreWordDefinition CreateGreWordDefinition(global::System.Int64 id, global::System.String word, global::System.String serial, global::System.String partsOfSpeech)
        {
            GreWordDefinition greWordDefinition = new GreWordDefinition();
            greWordDefinition.Id = id;
            greWordDefinition.Word = word;
            greWordDefinition.Serial = serial;
            greWordDefinition.PartsOfSpeech = partsOfSpeech;
            return greWordDefinition;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Word
        {
            get
            {
                return _Word;
            }
            set
            {
                OnWordChanging(value);
                ReportPropertyChanging("Word");
                _Word = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Word");
                OnWordChanged();
            }
        }
        private global::System.String _Word;
        partial void OnWordChanging(global::System.String value);
        partial void OnWordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Serial
        {
            get
            {
                return _Serial;
            }
            set
            {
                OnSerialChanging(value);
                ReportPropertyChanging("Serial");
                _Serial = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Serial");
                OnSerialChanged();
            }
        }
        private global::System.String _Serial;
        partial void OnSerialChanging(global::System.String value);
        partial void OnSerialChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PartsOfSpeech
        {
            get
            {
                return _PartsOfSpeech;
            }
            set
            {
                OnPartsOfSpeechChanging(value);
                ReportPropertyChanging("PartsOfSpeech");
                _PartsOfSpeech = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PartsOfSpeech");
                OnPartsOfSpeechChanged();
            }
        }
        private global::System.String _PartsOfSpeech;
        partial void OnPartsOfSpeechChanging(global::System.String value);
        partial void OnPartsOfSpeechChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SimilarWords
        {
            get
            {
                return _SimilarWords;
            }
            set
            {
                OnSimilarWordsChanging(value);
                ReportPropertyChanging("SimilarWords");
                _SimilarWords = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SimilarWords");
                OnSimilarWordsChanged();
            }
        }
        private global::System.String _SimilarWords;
        partial void OnSimilarWordsChanging(global::System.String value);
        partial void OnSimilarWordsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Definitions
        {
            get
            {
                return _Definitions;
            }
            set
            {
                OnDefinitionsChanging(value);
                ReportPropertyChanging("Definitions");
                _Definitions = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Definitions");
                OnDefinitionsChanged();
            }
        }
        private global::System.String _Definitions;
        partial void OnDefinitionsChanging(global::System.String value);
        partial void OnDefinitionsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Sentences
        {
            get
            {
                return _Sentences;
            }
            set
            {
                OnSentencesChanging(value);
                ReportPropertyChanging("Sentences");
                _Sentences = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Sentences");
                OnSentencesChanged();
            }
        }
        private global::System.String _Sentences;
        partial void OnSentencesChanging(global::System.String value);
        partial void OnSentencesChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("gredbModel", "FK_GreWordSynonymsNet_GreWords", "GreWords")]
        public GreWord GreWord
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GreWord>("gredbModel.FK_GreWordSynonymsNet_GreWords", "GreWords").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GreWord>("gredbModel.FK_GreWordSynonymsNet_GreWords", "GreWords").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<GreWord> GreWordReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GreWord>("gredbModel.FK_GreWordSynonymsNet_GreWords", "GreWords");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<GreWord>("gredbModel.FK_GreWordSynonymsNet_GreWords", "GreWords", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="gredbModel", Name="GreWordSynonym")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class GreWordSynonym : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GreWordSynonym object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="word">Initial value of the Word property.</param>
        /// <param name="serial">Initial value of the Serial property.</param>
        /// <param name="partsOfSpeech">Initial value of the PartsOfSpeech property.</param>
        public static GreWordSynonym CreateGreWordSynonym(global::System.Int64 id, global::System.String word, global::System.String serial, global::System.String partsOfSpeech)
        {
            GreWordSynonym greWordSynonym = new GreWordSynonym();
            greWordSynonym.Id = id;
            greWordSynonym.Word = word;
            greWordSynonym.Serial = serial;
            greWordSynonym.PartsOfSpeech = partsOfSpeech;
            return greWordSynonym;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Word
        {
            get
            {
                return _Word;
            }
            set
            {
                OnWordChanging(value);
                ReportPropertyChanging("Word");
                _Word = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Word");
                OnWordChanged();
            }
        }
        private global::System.String _Word;
        partial void OnWordChanging(global::System.String value);
        partial void OnWordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Serial
        {
            get
            {
                return _Serial;
            }
            set
            {
                OnSerialChanging(value);
                ReportPropertyChanging("Serial");
                _Serial = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Serial");
                OnSerialChanged();
            }
        }
        private global::System.String _Serial;
        partial void OnSerialChanging(global::System.String value);
        partial void OnSerialChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PartsOfSpeech
        {
            get
            {
                return _PartsOfSpeech;
            }
            set
            {
                OnPartsOfSpeechChanging(value);
                ReportPropertyChanging("PartsOfSpeech");
                _PartsOfSpeech = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PartsOfSpeech");
                OnPartsOfSpeechChanged();
            }
        }
        private global::System.String _PartsOfSpeech;
        partial void OnPartsOfSpeechChanging(global::System.String value);
        partial void OnPartsOfSpeechChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SimilarWords
        {
            get
            {
                return _SimilarWords;
            }
            set
            {
                OnSimilarWordsChanging(value);
                ReportPropertyChanging("SimilarWords");
                _SimilarWords = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SimilarWords");
                OnSimilarWordsChanged();
            }
        }
        private global::System.String _SimilarWords;
        partial void OnSimilarWordsChanging(global::System.String value);
        partial void OnSimilarWordsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Definitions
        {
            get
            {
                return _Definitions;
            }
            set
            {
                OnDefinitionsChanging(value);
                ReportPropertyChanging("Definitions");
                _Definitions = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Definitions");
                OnDefinitionsChanged();
            }
        }
        private global::System.String _Definitions;
        partial void OnDefinitionsChanging(global::System.String value);
        partial void OnDefinitionsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Synonyms
        {
            get
            {
                return _Synonyms;
            }
            set
            {
                OnSynonymsChanging(value);
                ReportPropertyChanging("Synonyms");
                _Synonyms = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Synonyms");
                OnSynonymsChanged();
            }
        }
        private global::System.String _Synonyms;
        partial void OnSynonymsChanging(global::System.String value);
        partial void OnSynonymsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Antonyms
        {
            get
            {
                return _Antonyms;
            }
            set
            {
                OnAntonymsChanging(value);
                ReportPropertyChanging("Antonyms");
                _Antonyms = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Antonyms");
                OnAntonymsChanged();
            }
        }
        private global::System.String _Antonyms;
        partial void OnAntonymsChanging(global::System.String value);
        partial void OnAntonymsChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("gredbModel", "FK_GreWordSynonyms_GreWords", "GreWords")]
        public GreWord GreWord
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GreWord>("gredbModel.FK_GreWordSynonyms_GreWords", "GreWords").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GreWord>("gredbModel.FK_GreWordSynonyms_GreWords", "GreWords").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<GreWord> GreWordReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GreWord>("gredbModel.FK_GreWordSynonyms_GreWords", "GreWords");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<GreWord>("gredbModel.FK_GreWordSynonyms_GreWords", "GreWords", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="gredbModel", Name="ListedWord")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ListedWord : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ListedWord object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="listId">Initial value of the ListId property.</param>
        /// <param name="word">Initial value of the Word property.</param>
        /// <param name="difficulty">Initial value of the Difficulty property.</param>
        public static ListedWord CreateListedWord(global::System.Int64 id, global::System.Int64 listId, global::System.String word, global::System.Int32 difficulty)
        {
            ListedWord listedWord = new ListedWord();
            listedWord.Id = id;
            listedWord.ListId = listId;
            listedWord.Word = word;
            listedWord.Difficulty = difficulty;
            return listedWord;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 ListId
        {
            get
            {
                return _ListId;
            }
            set
            {
                OnListIdChanging(value);
                ReportPropertyChanging("ListId");
                _ListId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ListId");
                OnListIdChanged();
            }
        }
        private global::System.Int64 _ListId;
        partial void OnListIdChanging(global::System.Int64 value);
        partial void OnListIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Word
        {
            get
            {
                return _Word;
            }
            set
            {
                OnWordChanging(value);
                ReportPropertyChanging("Word");
                _Word = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Word");
                OnWordChanged();
            }
        }
        private global::System.String _Word;
        partial void OnWordChanging(global::System.String value);
        partial void OnWordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Difficulty
        {
            get
            {
                return _Difficulty;
            }
            set
            {
                OnDifficultyChanging(value);
                ReportPropertyChanging("Difficulty");
                _Difficulty = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Difficulty");
                OnDifficultyChanged();
            }
        }
        private global::System.Int32 _Difficulty;
        partial void OnDifficultyChanging(global::System.Int32 value);
        partial void OnDifficultyChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("gredbModel", "FK_WordLists_GreWords", "GreWords")]
        public GreWord GreWord
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GreWord>("gredbModel.FK_WordLists_GreWords", "GreWords").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GreWord>("gredbModel.FK_WordLists_GreWords", "GreWords").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<GreWord> GreWordReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GreWord>("gredbModel.FK_WordLists_GreWords", "GreWords");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<GreWord>("gredbModel.FK_WordLists_GreWords", "GreWords", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("gredbModel", "FK_GreWordLists_WordList", "ListName")]
        public ListName ListName
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ListName>("gredbModel.FK_GreWordLists_WordList", "ListName").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ListName>("gredbModel.FK_GreWordLists_WordList", "ListName").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ListName> ListNameReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ListName>("gredbModel.FK_GreWordLists_WordList", "ListName");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ListName>("gredbModel.FK_GreWordLists_WordList", "ListName", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="gredbModel", Name="ListName")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ListName : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ListName object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static ListName CreateListName(global::System.Int64 id, global::System.String name)
        {
            ListName listName = new ListName();
            listName.Id = id;
            listName.Name = name;
            return listName;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("gredbModel", "FK_GreWordLists_WordList", "ListedWords")]
        public EntityCollection<ListedWord> ListedWords
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ListedWord>("gredbModel.FK_GreWordLists_WordList", "ListedWords");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ListedWord>("gredbModel.FK_GreWordLists_WordList", "ListedWords", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="gredbModel", Name="MnemonicsDictionaryHtml")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class MnemonicsDictionaryHtml : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new MnemonicsDictionaryHtml object.
        /// </summary>
        /// <param name="word">Initial value of the Word property.</param>
        /// <param name="html">Initial value of the Html property.</param>
        public static MnemonicsDictionaryHtml CreateMnemonicsDictionaryHtml(global::System.String word, global::System.String html)
        {
            MnemonicsDictionaryHtml mnemonicsDictionaryHtml = new MnemonicsDictionaryHtml();
            mnemonicsDictionaryHtml.Word = word;
            mnemonicsDictionaryHtml.Html = html;
            return mnemonicsDictionaryHtml;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Word
        {
            get
            {
                return _Word;
            }
            set
            {
                if (_Word != value)
                {
                    OnWordChanging(value);
                    ReportPropertyChanging("Word");
                    _Word = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Word");
                    OnWordChanged();
                }
            }
        }
        private global::System.String _Word;
        partial void OnWordChanging(global::System.String value);
        partial void OnWordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Html
        {
            get
            {
                return _Html;
            }
            set
            {
                OnHtmlChanging(value);
                ReportPropertyChanging("Html");
                _Html = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Html");
                OnHtmlChanged();
            }
        }
        private global::System.String _Html;
        partial void OnHtmlChanging(global::System.String value);
        partial void OnHtmlChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="gredbModel", Name="SynonymsNetHtml")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SynonymsNetHtml : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SynonymsNetHtml object.
        /// </summary>
        /// <param name="word">Initial value of the Word property.</param>
        /// <param name="html">Initial value of the Html property.</param>
        public static SynonymsNetHtml CreateSynonymsNetHtml(global::System.String word, global::System.String html)
        {
            SynonymsNetHtml synonymsNetHtml = new SynonymsNetHtml();
            synonymsNetHtml.Word = word;
            synonymsNetHtml.Html = html;
            return synonymsNetHtml;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Word
        {
            get
            {
                return _Word;
            }
            set
            {
                if (_Word != value)
                {
                    OnWordChanging(value);
                    ReportPropertyChanging("Word");
                    _Word = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Word");
                    OnWordChanged();
                }
            }
        }
        private global::System.String _Word;
        partial void OnWordChanging(global::System.String value);
        partial void OnWordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Html
        {
            get
            {
                return _Html;
            }
            set
            {
                OnHtmlChanging(value);
                ReportPropertyChanging("Html");
                _Html = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Html");
                OnHtmlChanged();
            }
        }
        private global::System.String _Html;
        partial void OnHtmlChanging(global::System.String value);
        partial void OnHtmlChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="gredbModel", Name="UnfinishedWord")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UnfinishedWord : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UnfinishedWord object.
        /// </summary>
        /// <param name="word">Initial value of the Word property.</param>
        public static UnfinishedWord CreateUnfinishedWord(global::System.String word)
        {
            UnfinishedWord unfinishedWord = new UnfinishedWord();
            unfinishedWord.Word = word;
            return unfinishedWord;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Word
        {
            get
            {
                return _Word;
            }
            set
            {
                if (_Word != value)
                {
                    OnWordChanging(value);
                    ReportPropertyChanging("Word");
                    _Word = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Word");
                    OnWordChanged();
                }
            }
        }
        private global::System.String _Word;
        partial void OnWordChanging(global::System.String value);
        partial void OnWordChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="gredbModel", Name="WebUrl")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class WebUrl : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new WebUrl object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="webTitle">Initial value of the WebTitle property.</param>
        /// <param name="url">Initial value of the Url property.</param>
        /// <param name="imageIndex">Initial value of the ImageIndex property.</param>
        /// <param name="priority">Initial value of the Priority property.</param>
        public static WebUrl CreateWebUrl(global::System.Int64 id, global::System.String webTitle, global::System.String url, global::System.Int32 imageIndex, global::System.Int32 priority)
        {
            WebUrl webUrl = new WebUrl();
            webUrl.Id = id;
            webUrl.WebTitle = webTitle;
            webUrl.Url = url;
            webUrl.ImageIndex = imageIndex;
            webUrl.Priority = priority;
            return webUrl;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String WebTitle
        {
            get
            {
                return _WebTitle;
            }
            set
            {
                OnWebTitleChanging(value);
                ReportPropertyChanging("WebTitle");
                _WebTitle = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("WebTitle");
                OnWebTitleChanged();
            }
        }
        private global::System.String _WebTitle;
        partial void OnWebTitleChanging(global::System.String value);
        partial void OnWebTitleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Url
        {
            get
            {
                return _Url;
            }
            set
            {
                OnUrlChanging(value);
                ReportPropertyChanging("Url");
                _Url = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Url");
                OnUrlChanged();
            }
        }
        private global::System.String _Url;
        partial void OnUrlChanging(global::System.String value);
        partial void OnUrlChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ImageIndex
        {
            get
            {
                return _ImageIndex;
            }
            set
            {
                OnImageIndexChanging(value);
                ReportPropertyChanging("ImageIndex");
                _ImageIndex = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ImageIndex");
                OnImageIndexChanged();
            }
        }
        private global::System.Int32 _ImageIndex;
        partial void OnImageIndexChanging(global::System.Int32 value);
        partial void OnImageIndexChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Priority
        {
            get
            {
                return _Priority;
            }
            set
            {
                OnPriorityChanging(value);
                ReportPropertyChanging("Priority");
                _Priority = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Priority");
                OnPriorityChanged();
            }
        }
        private global::System.Int32 _Priority;
        partial void OnPriorityChanging(global::System.Int32 value);
        partial void OnPriorityChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="gredbModel", Name="WordDefinition")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class WordDefinition : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new WordDefinition object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="word">Initial value of the Word property.</param>
        /// <param name="definition">Initial value of the Definition property.</param>
        /// <param name="image">Initial value of the Image property.</param>
        /// <param name="tag">Initial value of the Tag property.</param>
        public static WordDefinition CreateWordDefinition(global::System.Int64 id, global::System.String word, global::System.String definition, global::System.String image, global::System.String tag)
        {
            WordDefinition wordDefinition = new WordDefinition();
            wordDefinition.Id = id;
            wordDefinition.Word = word;
            wordDefinition.Definition = definition;
            wordDefinition.Image = image;
            wordDefinition.Tag = tag;
            return wordDefinition;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Word
        {
            get
            {
                return _Word;
            }
            set
            {
                OnWordChanging(value);
                ReportPropertyChanging("Word");
                _Word = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Word");
                OnWordChanged();
            }
        }
        private global::System.String _Word;
        partial void OnWordChanging(global::System.String value);
        partial void OnWordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Definition
        {
            get
            {
                return _Definition;
            }
            set
            {
                OnDefinitionChanging(value);
                ReportPropertyChanging("Definition");
                _Definition = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Definition");
                OnDefinitionChanged();
            }
        }
        private global::System.String _Definition;
        partial void OnDefinitionChanging(global::System.String value);
        partial void OnDefinitionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Image
        {
            get
            {
                return _Image;
            }
            set
            {
                OnImageChanging(value);
                ReportPropertyChanging("Image");
                _Image = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Image");
                OnImageChanged();
            }
        }
        private global::System.String _Image;
        partial void OnImageChanging(global::System.String value);
        partial void OnImageChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Tag
        {
            get
            {
                return _Tag;
            }
            set
            {
                OnTagChanging(value);
                ReportPropertyChanging("Tag");
                _Tag = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Tag");
                OnTagChanged();
            }
        }
        private global::System.String _Tag;
        partial void OnTagChanging(global::System.String value);
        partial void OnTagChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("gredbModel", "FK_Definitions_GreWords", "GreWords")]
        public GreWord GreWord
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GreWord>("gredbModel.FK_Definitions_GreWords", "GreWords").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GreWord>("gredbModel.FK_Definitions_GreWords", "GreWords").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<GreWord> GreWordReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GreWord>("gredbModel.FK_Definitions_GreWords", "GreWords");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<GreWord>("gredbModel.FK_Definitions_GreWords", "GreWords", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="gredbModel", Name="WordEtymology")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class WordEtymology : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new WordEtymology object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="word">Initial value of the Word property.</param>
        /// <param name="etymology">Initial value of the Etymology property.</param>
        public static WordEtymology CreateWordEtymology(global::System.Int64 id, global::System.String word, global::System.String etymology)
        {
            WordEtymology wordEtymology = new WordEtymology();
            wordEtymology.Id = id;
            wordEtymology.Word = word;
            wordEtymology.Etymology = etymology;
            return wordEtymology;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int64 _Id;
        partial void OnIdChanging(global::System.Int64 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Word
        {
            get
            {
                return _Word;
            }
            set
            {
                OnWordChanging(value);
                ReportPropertyChanging("Word");
                _Word = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Word");
                OnWordChanged();
            }
        }
        private global::System.String _Word;
        partial void OnWordChanging(global::System.String value);
        partial void OnWordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Etymology
        {
            get
            {
                return _Etymology;
            }
            set
            {
                OnEtymologyChanging(value);
                ReportPropertyChanging("Etymology");
                _Etymology = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Etymology");
                OnEtymologyChanged();
            }
        }
        private global::System.String _Etymology;
        partial void OnEtymologyChanging(global::System.String value);
        partial void OnEtymologyChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("gredbModel", "FK_Etymology_GreWords", "GreWords")]
        public GreWord GreWord
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GreWord>("gredbModel.FK_Etymology_GreWords", "GreWords").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GreWord>("gredbModel.FK_Etymology_GreWords", "GreWords").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<GreWord> GreWordReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<GreWord>("gredbModel.FK_Etymology_GreWords", "GreWords");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<GreWord>("gredbModel.FK_Etymology_GreWords", "GreWords", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
