/*
 * Note: this file originally auto-generated by mib2c using
 *       version : 1.49 $ of : mfd-top.m2c,v $
 *
 * $Id:$
 */
#ifndef MIBTESTTABLE_H
#define MIBTESTTABLE_H

#ifdef __cplusplus
extern          "C" {
#endif


/** @defgroup misc misc: Miscelaneous routines
 *
 * @{
 */
#include <net-snmp/library/asn1.h>

    /*
     * other required module components
     */
    /* *INDENT-OFF*  */
config_add_mib(MYTEST-EXAMPLE-MIB)
config_require(MYTEST-EXAMPLE-MIB/mibtestTable/mibtestTable_interface)
config_require(MYTEST-EXAMPLE-MIB/mibtestTable/mibtestTable_data_access)
config_require(MYTEST-EXAMPLE-MIB/mibtestTable/mibtestTable_data_get)
config_require(MYTEST-EXAMPLE-MIB/mibtestTable/mibtestTable_data_set)
    /* *INDENT-ON*  */

    /*
     * OID and column number definitions for mibtestTable
     */
#include "mibtestTable_oids.h"

    /*
     * enum definions
     */
#include "mibtestTable_enums.h"

    /*
     *********************************************************************
     * function declarations
     */
    void            init_mibtestTable(void);
    void            shutdown_mibtestTable(void);

    /*
     *********************************************************************
     * Table declarations
     */
/**********************************************************************
 **********************************************************************
 ***
 *** Table mibtestTable
 ***
 **********************************************************************
 **********************************************************************/
    /*
     * MYTEST-EXAMPLE-MIB::mibtestTable is subid 1 of testModule.
     * Its status is Current.
     * OID: .1.3.6.1.4.1.8072.2.10.1, length: 10
     */
    /*
     *********************************************************************
     * When you register your mib, you get to provide a generic
     * pointer that will be passed back to you for most of the
     * functions calls.
     *
     * TODO:100:r: Review all context structures
     */
    /*
     * TODO:101:o: |-> Review mibtestTable registration context.
     */
    typedef netsnmp_data_list mibtestTable_registration;

/**********************************************************************/
    /*
     * TODO:110:r: |-> Review mibtestTable data context structure.
     * This structure is used to represent the data for mibtestTable.
     */
    /*
     * This structure contains storage for all the columns defined in the
     * mibtestTable.
     */
    typedef struct mibtestTable_data_s {

        /*
         * mibtestColumn1(2)/INTEGER/ASN_INTEGER/long(long)//l/A/W/e/r/d/h
         */
        long            mibtestColumn1;

        /*
         * mibtestColumn2(3)/INTEGER32/ASN_INTEGER/long(long)//l/A/W/e/r/d/h
         */
        long            mibtestColumn2;

    } mibtestTable_data;


    /*
     *********************************************************************
     * TODO:115:o: |-> Review mibtestTable undo context.
     * We're just going to use the same data structure for our
     * undo_context. If you want to do something more efficent,
     * define your typedef here.
     */
    typedef mibtestTable_data mibtestTable_undo_data;

    /*
     * TODO:120:r: |-> Review mibtestTable mib index.
     * This structure is used to represent the index for mibtestTable.
     */
    typedef struct mibtestTable_mib_index_s {

        /*
         * mibtestIndex(1)/INTEGER/ASN_INTEGER/long(long)//l/a/w/e/r/d/h
         */
        long            mibtestIndex;


    } mibtestTable_mib_index;

    /*
     * TODO:121:r: |   |-> Review mibtestTable max index length.
     * If you KNOW that your indexes will never exceed a certain
     * length, update this macro to that length.
     */
#define MAX_mibtestTable_IDX_LEN     1


    /*
     *********************************************************************
     * TODO:130:o: |-> Review mibtestTable Row request (rowreq) context.
     * When your functions are called, you will be passed a
     * mibtestTable_rowreq_ctx pointer.
     */
    typedef struct mibtestTable_rowreq_ctx_s {

    /** this must be first for container compare to work */
        netsnmp_index   oid_idx;
        oid             oid_tmp[MAX_mibtestTable_IDX_LEN];

        mibtestTable_mib_index tbl_idx;

        mibtestTable_data data;
        mibtestTable_undo_data *undo;
        unsigned int    column_set_flags;       /* flags for set columns */


        /*
         * flags per row. Currently, the first (lower) 8 bits are reserved
         * for the user. See mfd.h for other flags.
         */
        u_int           rowreq_flags;

        /*
         * TODO:131:o: |   |-> Add useful data to mibtestTable rowreq context.
         */

        /*
         * storage for future expansion
         */
        netsnmp_data_list *mibtestTable_data_list;

    } mibtestTable_rowreq_ctx;

    typedef struct mibtestTable_ref_rowreq_ctx_s {
        mibtestTable_rowreq_ctx *rowreq_ctx;
    } mibtestTable_ref_rowreq_ctx;

    /*
     *********************************************************************
     * function prototypes
     */
    int             mibtestTable_pre_request(mibtestTable_registration *
                                             user_context);
    int             mibtestTable_post_request(mibtestTable_registration *
                                              user_context, int rc);

    int             mibtestTable_rowreq_ctx_init(mibtestTable_rowreq_ctx *
                                                 rowreq_ctx,
                                                 void *user_init_ctx);
    void            mibtestTable_rowreq_ctx_cleanup(mibtestTable_rowreq_ctx
                                                    * rowreq_ctx);

    int             mibtestTable_check_dependencies(mibtestTable_rowreq_ctx
                                                    * rowreq_ctx);
    int             mibtestTable_commit(mibtestTable_rowreq_ctx *
                                        rowreq_ctx);

    mibtestTable_rowreq_ctx
        *mibtestTable_row_find_by_mib_index(mibtestTable_mib_index *
                                            mib_idx);

    extern oid      mibtestTable_oid[];
    extern int      mibtestTable_oid_size;

//Max Added BEGIN
#define mibtestTable_SIZE	3

long mibtestColumn1_cache[mibtestTable_SIZE];
long mibtestColumn2_cache[mibtestTable_SIZE];
//Max Added END

#include "mibtestTable_interface.h"
#include "mibtestTable_data_access.h"
#include "mibtestTable_data_get.h"
#include "mibtestTable_data_set.h"

    /*
     * DUMMY markers, ignore
     *
     * TODO:099:x: *************************************************************
     * TODO:199:x: *************************************************************
     * TODO:299:x: *************************************************************
     * TODO:399:x: *************************************************************
     * TODO:499:x: *************************************************************
     */

#ifdef __cplusplus
}
#endif
#endif                          /* MIBTESTTABLE_H */
