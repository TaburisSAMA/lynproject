/*
 * Note: this file originally auto-generated by mib2c using
 *       version : 1.49 $ of : mfd-top.m2c,v $
 *
 * $Id:$
 */
#ifndef WMANDEVSSCONFIGFILEENCODINGTABLE_H
#define WMANDEVSSCONFIGFILEENCODINGTABLE_H

#ifdef __cplusplus
extern          "C" {
#endif


/** @defgroup misc misc: Miscelaneous routines
 *
 * @{
 */
#include <net-snmp/library/asn1.h>

    /*
     * other required module components 
     */
    /* *INDENT-OFF*  */
config_add_mib(WMAN-DEV-MIB)
config_require(WMAN-DEV-MIB/wmanDevSsConfigFileEncodingTable/wmanDevSsConfigFileEncodingTable_interface)
config_require(WMAN-DEV-MIB/wmanDevSsConfigFileEncodingTable/wmanDevSsConfigFileEncodingTable_data_access)
config_require(WMAN-DEV-MIB/wmanDevSsConfigFileEncodingTable/wmanDevSsConfigFileEncodingTable_data_get)
config_require(WMAN-DEV-MIB/wmanDevSsConfigFileEncodingTable/wmanDevSsConfigFileEncodingTable_data_set)
    /* *INDENT-ON*  */

    /*
     * OID and column number definitions for wmanDevSsConfigFileEncodingTable 
     */
#include "wmanDevSsConfigFileEncodingTable_oids.h"

    /*
     * enum definions 
     */
#include "wmanDevSsConfigFileEncodingTable_enums.h"

    /*
     *********************************************************************
     * function declarations
     */
    void            init_wmanDevSsConfigFileEncodingTable(void);
    void            shutdown_wmanDevSsConfigFileEncodingTable(void);

    /*
     *********************************************************************
     * Table declarations
     */
/**********************************************************************
 **********************************************************************
 ***
 *** Table wmanDevSsConfigFileEncodingTable
 ***
 **********************************************************************
 **********************************************************************/
    /*
     * WMAN-DEV-MIB::wmanDevSsConfigFileEncodingTable is subid 1 of wmanDevSsObjects.
     * Its status is Current.
     * OID: .1.0.8802.16.1.1.2.1, length: 8
     */
    /*
     *********************************************************************
     * When you register your mib, you get to provide a generic
     * pointer that will be passed back to you for most of the
     * functions calls.
     *
     * TODO:100:r: Review all context structures
     */
    /*
     * TODO:101:o: |-> Review wmanDevSsConfigFileEncodingTable registration context.
     */
    typedef netsnmp_data_list
        wmanDevSsConfigFileEncodingTable_registration;

/**********************************************************************/
    /*
     * TODO:110:r: |-> Review wmanDevSsConfigFileEncodingTable data context structure.
     * This structure is used to represent the data for wmanDevSsConfigFileEncodingTable.
     */
    /*
     * This structure contains storage for all the columns defined in the
     * wmanDevSsConfigFileEncodingTable.
     */
    typedef struct wmanDevSsConfigFileEncodingTable_data_s {

        /*
         * wmanDevSsMicConfigSetting(2)/OCTETSTR/ASN_OCTET_STR/char(char)//L/A/w/e/R/d/h
         */
        char            wmanDevSsMicConfigSetting[20];
        size_t          wmanDevSsMicConfigSetting_len;  /* # of char elements, not bytes */

        /*
         * wmanDevSsVendorId(3)/OCTETSTR/ASN_OCTET_STR/char(char)//L/A/w/e/R/d/h
         */
        char            wmanDevSsVendorId[3];
        size_t          wmanDevSsVendorId_len;  /* # of char elements, not bytes */

        /*
         * wmanDevSsHwId(4)/OCTETSTR/ASN_OCTET_STR/char(char)//L/A/w/e/R/d/h
         */
        char            wmanDevSsHwId[255];
        size_t          wmanDevSsHwId_len;      /* # of char elements, not bytes */

        /*
         * wmanDevSsSwVersion(5)/OCTETSTR/ASN_OCTET_STR/char(char)//L/A/w/e/R/d/h
         */
        char            wmanDevSsSwVersion[255];
        size_t          wmanDevSsSwVersion_len; /* # of char elements, not bytes */

        /*
         * wmanDevSsUpgradeFileName(6)/OCTETSTR/ASN_OCTET_STR/char(char)//L/A/w/e/R/d/h
         */
        char            wmanDevSsUpgradeFileName[255];
        size_t          wmanDevSsUpgradeFileName_len;   /* # of char elements, not bytes */

        /*
         * wmanDevSsSwUpgradeTftpServer(7)/InetAddress/ASN_OCTET_STR/char(char)//L/A/w/e/R/d/h
         */
        char            wmanDevSsSwUpgradeTftpServer[255];
        size_t          wmanDevSsSwUpgradeTftpServer_len;       /* # of char elements, not bytes */

        /*
         * wmanDevSsTftpServerTimeStamp(8)/DateAndTime/ASN_OCTET_STR/char(char)//L/A/w/e/R/d/H
         */
        char            wmanDevSsTftpServerTimeStamp[11];
        size_t          wmanDevSsTftpServerTimeStamp_len;       /* # of char elements, not bytes */

    } wmanDevSsConfigFileEncodingTable_data;


    /*
     * TODO:120:r: |-> Review wmanDevSsConfigFileEncodingTable mib index.
     * This structure is used to represent the index for wmanDevSsConfigFileEncodingTable.
     */
    typedef struct wmanDevSsConfigFileEncodingTable_mib_index_s {

        /*
         * wmanDevSsDeviceIndex(1)/INTEGER/ASN_INTEGER/long(long)//l/a/w/e/R/d/h
         */
        long            wmanDevSsDeviceIndex;


    } wmanDevSsConfigFileEncodingTable_mib_index;

    /*
     * TODO:121:r: |   |-> Review wmanDevSsConfigFileEncodingTable max index length.
     * If you KNOW that your indexes will never exceed a certain
     * length, update this macro to that length.
     */
#define MAX_wmanDevSsConfigFileEncodingTable_IDX_LEN     1


    /*
     *********************************************************************
     * TODO:130:o: |-> Review wmanDevSsConfigFileEncodingTable Row request (rowreq) context.
     * When your functions are called, you will be passed a
     * wmanDevSsConfigFileEncodingTable_rowreq_ctx pointer.
     */
    typedef struct wmanDevSsConfigFileEncodingTable_rowreq_ctx_s {

    /** this must be first for container compare to work */
        netsnmp_index   oid_idx;
        oid            
            oid_tmp[MAX_wmanDevSsConfigFileEncodingTable_IDX_LEN];

        wmanDevSsConfigFileEncodingTable_mib_index tbl_idx;

        wmanDevSsConfigFileEncodingTable_data data;

        /*
         * flags per row. Currently, the first (lower) 8 bits are reserved
         * for the user. See mfd.h for other flags.
         */
        u_int           rowreq_flags;

        /*
         * TODO:131:o: |   |-> Add useful data to wmanDevSsConfigFileEncodingTable rowreq context.
         */

        /*
         * storage for future expansion
         */
        netsnmp_data_list *wmanDevSsConfigFileEncodingTable_data_list;

    } wmanDevSsConfigFileEncodingTable_rowreq_ctx;

    typedef struct wmanDevSsConfigFileEncodingTable_ref_rowreq_ctx_s {
        wmanDevSsConfigFileEncodingTable_rowreq_ctx *rowreq_ctx;
    } wmanDevSsConfigFileEncodingTable_ref_rowreq_ctx;

    /*
     *********************************************************************
     * function prototypes
     */
    int            
        wmanDevSsConfigFileEncodingTable_pre_request
        (wmanDevSsConfigFileEncodingTable_registration * user_context);
    int            
        wmanDevSsConfigFileEncodingTable_post_request
        (wmanDevSsConfigFileEncodingTable_registration * user_context,
         int rc);

    int            
        wmanDevSsConfigFileEncodingTable_rowreq_ctx_init
        (wmanDevSsConfigFileEncodingTable_rowreq_ctx * rowreq_ctx,
         void *user_init_ctx);
    void           
        wmanDevSsConfigFileEncodingTable_rowreq_ctx_cleanup
        (wmanDevSsConfigFileEncodingTable_rowreq_ctx * rowreq_ctx);


    wmanDevSsConfigFileEncodingTable_rowreq_ctx
        *wmanDevSsConfigFileEncodingTable_row_find_by_mib_index
        (wmanDevSsConfigFileEncodingTable_mib_index * mib_idx);

    extern oid      wmanDevSsConfigFileEncodingTable_oid[];
    extern int      wmanDevSsConfigFileEncodingTable_oid_size;


#include "wmanDevSsConfigFileEncodingTable_interface.h"
#include "wmanDevSsConfigFileEncodingTable_data_access.h"
#include "wmanDevSsConfigFileEncodingTable_data_get.h"
#include "wmanDevSsConfigFileEncodingTable_data_set.h"

    /*
     * DUMMY markers, ignore
     *
     * TODO:099:x: *************************************************************
     * TODO:199:x: *************************************************************
     * TODO:299:x: *************************************************************
     * TODO:399:x: *************************************************************
     * TODO:499:x: *************************************************************
     */

#ifdef __cplusplus
}
#endif
#endif                          /* WMANDEVSSCONFIGFILEENCODINGTABLE_H */
