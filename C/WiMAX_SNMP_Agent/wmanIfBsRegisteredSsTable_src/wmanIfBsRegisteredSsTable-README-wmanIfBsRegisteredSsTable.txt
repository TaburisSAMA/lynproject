************************************************************************
wmanIfBsRegisteredSsTable README
------------------------------------------------------------------------
  This readme file describes the code generated by mib2c (using the MIBs
  for Dummies (MFD) configuration file). The code generated was
  generated specifically for the following SNMP table:

     wmanIfBsRegisteredSsTable

  Your code will be called when the snmp agent receives requests for
  the wmanIfBsRegisteredSsTable table.  The agent will start by looking for the right
  row in your existing data to operate on, if one exists.


  Configuration Variables
  ------------------------------------------------------------
  Some variables used for code generation may be set to affect the code
  generation. You may override these variables by setting them in the
  file defaults/table-wmanIfBsRegisteredSsTable.m2d, and then re-running mib2c.

    m2c_table_settable (currently '0')
    --------------------------------------------------------
    This variable determines whether or not code is generated to support
    MIB object which have an access of read-write or read-create. The
    default is set based on whether or not the table contains writable
    objects, but can be over-ridden.

    Syntax: @eval $m2c_table_settable = 0@


    m2c_table_dependencies (currently '0')
    --------------------------------------------------------
    This variable determines whether or not code is generated to support
    checking dependencies between columns, rows or tables. The default
    is set based on whether or not the table contains writable objects,
    but can be over-ridden.

    Syntax: @eval $m2c_table_dependencies = 0@


    m2c_table_row_creation (currently '0')
    --------------------------------------------------------
    This variable determines whether or not code is generated to support
    checking creation of new rows via SNMP. The default is set based on
    whether or not the table contains read-create objects, but can be
    over-ridden.

    Syntax: @eval $m2c_table_row_creation = 0@


    m2c_context_reg (currently 'netsnmp_data_list')
    --------------------------------------------------------
    This variable contains the structure name to typedef for the
    wmanIfBsRegisteredSsTable_registration.

    During initilization, you will provide a pointer to a structure of
    this type. This pointer is used as a parameter to many functions so
    that you have access to your registration data. The default is a
    netsnmp_data_list pointer, which will allow you to keep multiple
    pointers tagged by a text name. If you have a new or existing structure
    you would rather use, you can redefine this variable.
    

    To avoid regenerating code, you may also change this typedef directly
    in the wmanIfBsRegisteredSsTable.h header.

    Syntax: @eval $m2c_context_reg = "struct my_registration_context@


    m2c_data_context (currently 'generated')
    --------------------------------------------------------
    This variable contains the structure name to typedef for the
    wmanIfBsRegisteredSsTable_data.

    This typedef is used in the row request context structure for the table,
    wmanIfBsRegisteredSsTable_rowreq_ctx.

    The typedef in the primary table context will be used for the data and
    undo structure types. This structure should contain all the data
    needed for all the columns in the table. The default is 'generated',
    which will cuase a new data strcuture to be generated with data members
    for each column.

    To avoid regenerating code, you may also change this typedef directly
    in the wmanIfBsRegisteredSsTable.h header.

    Syntax: @eval $m2c_data_context = "struct my_data_context"@


    m2c_data_allocate (currently '0')
    --------------------------------------------------------
    This variable determines whether or not the data context (see above)
    requires memory to be allocated. The default generated data structure
    does not. If you are using a custom data context which needs to
    allocate memory, override this value and two additional functions
    will be generated:

      wmanIfBsRegisteredSsTable_allocate_data
      wmanIfBsRegisteredSsTable_release_data

    Syntax: @eval $m2c_data_allocate = 1@


    m2c_data_init (currently '1')
    --------------------------------------------------------
    This variable determines whether or not the data context (see above)
    or any other items you have added to the table context requires
    initialization. The default generated data structure does not. If you
    are using a custom data context or have added items needing initialization
    to the table context, override this value and two additional functions
    will be generated:

      wmanIfBsRegisteredSsTable_rowreq_ctx_init
      wmanIfBsRegisteredSsTable_rowreq_ctx_cleanup

    Syntax: @eval 1 = 1@


    m2c_table_access (currently 'container-cached')
    ------------------------------------------------------------------
    This variable determines which data interface will be use to generate
    code for looking up data for a given index. The default is the
    'container-cached' access code, which caches the data in a netsnmp-
    container (usually a sorted array).

    Available options can be determined by checking for mib2c configuration
    files that begin with 'mfd-access-*'.

    Syntax: @eval $m2c_table_access = 'container-cached'@

 
    m2c_include_examples (currently '1')
    ------------------------------------------------------------------
    This variable determines whether or not to generate example code. The
    default is to generate example code.

    Syntax: @eval $m2c_include_examples = 0@


    m2c_data_transient (currently '2')
    ------------------------------------------------------------------
    This variable determines how the generated example code deals with the
    data during data lookup. See the table readme file for details on how
    the current table access method interprets this value. In general,
    a value of 0 indicates persistent data, 1 indicates semi-transient and
    2 indicates transient data.

    Syntax: @eval $m2c_data_transient = 0@


 Index(es) for the wmanIfBsRegisteredSsTable table
  ------------------------------------------------------------
  The index(es) for the wmanIfBsRegisteredSsTable table are:

     ifIndex:
        Syntax:      InterfaceIndex
        DataType:    INTEGER32
        ASN type:    ASN_INTEGER
        C-code type: long
     wmanIfBsSsMacAddress:
        Syntax:      MacAddress
        DataType:    OCTETSTR
        ASN type:    ASN_OCTET_STR
        C-code type: char

  You should know how to set all these values from your data context,
  wmanIfBsRegisteredSsTable_data.


************************************************************************
wmanIfBsRegisteredSsTable File Overview
------------------------------------------------------------------------
  Several files have been generated to implement the wmanIfBsRegisteredSsTable
  table. We'll go through these files, one by one, explaining each and
  letting you know which you need to edit.


File: wmanIfBsRegisteredSsTable_data_access.[c|h]
------------------------------------------------------------------------
  The wmanIfBsRegisteredSsTable_data_access file contains the interface to your data in
  its raw format.  These functions are used to build the row cache or 
  locate the row (depending on the table access method).

  Set MIB context
  -----------------
  TODO : Set MIB index values
  FUNC : wmanIfBsRegisteredSsTable_indexes_set
  WHERE: wmanIfBsRegisteredSsTable_data_access.c

  This is a convenience function for setting the index context from
  the native C data. Where necessary, value mapping should be done.

  This function should update the table index values (found in
  tbl_idx) for the given raw data.

  
  container summary
  ------------------------
    The container data access code is for cases when you want to
    store your data in the agent/sub-agent.

    ... to be continued...


  cache summary
  ------------------------
    The container-cached data access code is for cases when you want to
    cache your data in the agent/sub-agent.

    ... to be continued...




File: wmanIfBsRegisteredSsTable_enums.h
------------------------------------------------------------------------
  This file contains macros for mapping enumeration values when the
  enumerated values defined by the MIB do not match the values used
  internally.

  Review this file to see if any values need to be updated.


File: wmanIfBsRegisteredSsTable_data_get.c
------------------------------------------------------------------------
  Get data for column
  -------------------
  TODO : retrieve column data from raw data
  FUNC : wmanIfBsSsBasicCid_get

  Get data for column
  -------------------
  TODO : retrieve column data from raw data
  FUNC : wmanIfBsSsPrimaryCid_get

  Get data for column
  -------------------
  TODO : retrieve column data from raw data
  FUNC : wmanIfBsSsSecondaryCid_get

  Get data for column
  -------------------
  TODO : retrieve column data from raw data
  FUNC : wmanIfBsSsManagementSupport_get

  Get data for column
  -------------------
  TODO : retrieve column data from raw data
  FUNC : wmanIfBsSsIpManagementMode_get

  Get data for column
  -------------------
  TODO : retrieve column data from raw data
  FUNC : wmanIfBsSs2ndMgmtArqEnable_get

  Get data for column
  -------------------
  TODO : retrieve column data from raw data
  FUNC : wmanIfBsSs2ndMgmtArqWindowSize_get

  Get data for column
  -------------------
  TODO : retrieve column data from raw data
  FUNC : wmanIfBsSs2ndMgmtArqDnLinkTxDelay_get

  Get data for column
  -------------------
  TODO : retrieve column data from raw data
  FUNC : wmanIfBsSs2ndMgmtArqUpLinkTxDelay_get

  Get data for column
  -------------------
  TODO : retrieve column data from raw data
  FUNC : wmanIfBsSs2ndMgmtArqDnLinkRxDelay_get

  Get data for column
  -------------------
  TODO : retrieve column data from raw data
  FUNC : wmanIfBsSs2ndMgmtArqUpLinkRxDelay_get

  Get data for column
  -------------------
  TODO : retrieve column data from raw data
  FUNC : wmanIfBsSs2ndMgmtArqBlockLifetime_get

  Get data for column
  -------------------
  TODO : retrieve column data from raw data
  FUNC : wmanIfBsSs2ndMgmtArqSyncLossTimeout_get

  Get data for column
  -------------------
  TODO : retrieve column data from raw data
  FUNC : wmanIfBsSs2ndMgmtArqDeliverInOrder_get

  Get data for column
  -------------------
  TODO : retrieve column data from raw data
  FUNC : wmanIfBsSs2ndMgmtArqRxPurgeTimeout_get

  Get data for column
  -------------------
  TODO : retrieve column data from raw data
  FUNC : wmanIfBsSs2ndMgmtArqBlockSize_get

  Get data for column
  -------------------
  TODO : retrieve column data from raw data
  FUNC : wmanIfBsSsVendorIdEncoding_get

  Get data for column
  -------------------
  TODO : retrieve column data from raw data
  FUNC : wmanIfBsSsAasBroadcastPermission_get

  Get data for column
  -------------------
  TODO : retrieve column data from raw data
  FUNC : wmanIfBsSsMaxTxPowerBpsk_get

  Get data for column
  -------------------
  TODO : retrieve column data from raw data
  FUNC : wmanIfBsSsMaxTxPowerQpsk_get

  Get data for column
  -------------------
  TODO : retrieve column data from raw data
  FUNC : wmanIfBsSsMaxTxPower16Qam_get

  Get data for column
  -------------------
  TODO : retrieve column data from raw data
  FUNC : wmanIfBsSsMaxTxPower64Qam_get

  Get data for column
  -------------------
  TODO : retrieve column data from raw data
  FUNC : wmanIfBsSsMacVersion_get



File: wmanIfBsRegisteredSsTable_data_set.c
------------------------------------------------------------------------

  This table does not support set requests.


************************************************************************
wmanIfBsRegisteredSsTable Reference
------------------------------------------------------------------------

Function flow
----------------------------------------------------
To give you the general idea of how the functions flow works, this
example flow is from a complete table implementation.

NOTE: Depending on your configuration, some of the functions used in the
      examples below  may not have been generated for the
      wmanIfBsRegisteredSsTable table.

      Conversely, the examples below may not include some functions that
      were generated for the wmanIfBsRegisteredSsTable table.

To watch the flow of the wmanIfBsRegisteredSsTable table, use the
following debug tokens:

        snmp_agent
        helper:table:req
        wmanIfBsRegisteredSsTable
        verbose:wmanIfBsRegisteredSsTable
        internal:wmanIfBsRegisteredSsTable

e.g.
        snmpd -f -Le -DwmanIfBsRegisteredSsTable,verbose:wmanIfBsRegisteredSsTable,internal:wmanIfBsRegisteredSsTable


Initialization
--------------------------------
init_xxxTable: called                           xxx.c
   initialize_table_xxxTable                    xxx.c
      _xxxTable_initialize_interface            xxx_interface.c
         xxxTable_init_data                     xxx_data_access.c
      _xxxTable_container_init                  xxx_interface.c
         xxxTable_container_init                xxx_data_access.c


GET Request
--------------------------------
_cache_load                                     xxx_interface.c
   xxxTable_cache_load                          xxx_data_access.c
      xxxTable_allocate_rowreq_ctx              xxx_interface.c
         xxxTable_allocate_data                 xxx_data_get.c
         xxxTable_rowreq_ctx_init               xxx_data_get.c
      xxxTable_indexes_set                      xxx_data_get.c
         xxxTable_indexes_set_tbl_idx           xxx_data_get.c

xxxTable_pre_request                              

_mfd_xxxTable_object_lookup                     xxx_interface.c
   xxxTable_row_prep                            xxx_data_access.c

_mfd_xxxTable_get_values                        xxx_interface.c
   _mfd_xxxTable_get_column                     xxx_interface.c
      yyy_get                                   xxx_data_get.c

xxxTable_post_request


GETNEXT Request
--------------------------------
_cache_load                                     ...
xxxTable_pre_request                            ...
_mfd_xxxTable_object_lookup                     ...
_mfd_xxxTable_get_values                        ...
xxxTable_post_request                           ...


SET Request: success
--------------------------------
_cache_load                                     ...
xxxTable_pre_request
_mfd_xxxTable_object_lookup                     ...

_mfd_xxxTable_check_objects                     xxx_interface.c
   _xxxTable_check_column                       xxx_interface.c
      yyy_check_value                           xxx_data_set.c

_mfd_xxxTable_undo_setup                        xxx_interface.c
   xxxTable_allocate_data                       ...
   xxxTable_undo_setup                          xxx_interface.c
      _xxxTable_undo_setup_column               xxx_interface.c
         yyy_undo_setup                         xxx_data_set.c

_mfd_xxxTable_set_values                        xxx_interface.c
   _xxxTable_set_column                         xxx_interface.c
      yyy_set                                   xxx_data_set.c

_mfd_xxxTable_check_dependencies                xxx_interface.c
   xxxTable_check_dependencies                  xxx_data_set.c

_mfd_xxxTable_commit                            xxx_interface.c
   xxxTable_commit                              xxx_data_set.c

_mfd_xxxTable_undo_cleanup                      xxx_interface.c
   xxxTable_undo_cleanup                        xxx_data_set.c
      xxxTable_release_data                     ...

xxxTable_post_request                           ...


SET Request: row creation
--------------------------------
_cache_load                                     ...
xxxTable_pre_request

_mfd_xxxTable_object_lookup                     ...
   xxxTable_index_from_oid                      xxx_interface.c
   xxxTable_allocate_rowreq_ctx                 ...
      ...
   _xxxTable_check_indexes                      xxx_interface.c
      yyy_check_index                           xxx_data_set.c
      xxxTable_validate_index                   xxx_data_set.c

_mfd_xxxTable_check_objects                     ...
   _xxxTable_check_column                       ...
      yyy_check_value                           ...
   _xxxTable_check_column                       ...
      yyy_check_value                           ...

_mfd_xxxTable_undo_setup                        ...
_mfd_xxxTable_set_values                        ...
_mfd_xxxTable_check_dependencies                ...
_mfd_xxxTable_commit                            ...
_mfd_xxxTable_undo_cleanup                      ...
xxxTable_post_request                           ...


SET Resuest: value error
--------------------------------
_cache_load                                     ...
xxxTable_pre_request                            ...
_mfd_xxxTable_object_lookup                     ...

_mfd_xxxTable_check_objects                     ...
   _xxxTable_check_column                       ...
      yyy_check_value                           ...
      ERROR:"yyy value not supported"

xxxTable_post_request                           ...


SET Request: commit failure
--------------------------------
_cache_load                                     ...
xxxTable_pre_request                            ...
_mfd_xxxTable_object_lookup                     ...
_mfd_xxxTable_check_objects                     ...
_mfd_xxxTable_undo_setup                        ...
_mfd_xxxTable_set_values                        ...
_mfd_xxxTable_check_dependencies                ...

_mfd_xxxTable_commit                            ...
   xxxTable_commit                              ...
   ERROR: bad rc -1

_mfd_xxxTable_undo_commit                       xxx_interface.c
   xxxTable_undo_commit                         xxx_data_set.c

_mfd_xxxTable_undo_values                       xxx_interface.c
   _xxxTable_undo_column                        xxx_interface.c
      yyy_undo                                  xxx_data_set.c

_mfd_xxxTable_undo_cleanup                      ...
xxxTable_post_request                           ...


Row release (user initiated)
--------------------------------
xxxTable_release_rowreq_ctx                     xxx_interface.c
   xxxTable_rowreq_ctx_cleanup                  xxx_data_get.c
   xxxTable_release_data                        xxx_data_get.c



Table / column details
----------------------------------------------------
/**********************************************************************
 **********************************************************************
 ***
 *** Table wmanIfBsRegisteredSsTable
 ***
 **********************************************************************
 **********************************************************************/
/*
 * WMAN-IF-MIB::wmanIfBsRegisteredSsTable is subid 1 of wmanIfBsCps.
 * Its status is Current.
 * OID: .1.3.6.1.2.1.10.184.1.1.2.1, length: 12
*/

/*---------------------------------------------------------------------
 * WMAN-IF-MIB::wmanIfBsRegisteredSsEntry.wmanIfBsSsMacAddress
 * wmanIfBsSsMacAddress is subid 1 of wmanIfBsRegisteredSsEntry.
 * Its status is Current, and its access level is NoAccess.
 * OID: .1.3.6.1.2.1.10.184.1.1.2.1.1.1
 * Description:
The MAC address of SS is received from the RNG-REQ
             message. When SS registers, this MAC address is entered
             into the table, and used as the identifier to the SS.
 *
 * Attributes:
 *   accessible 0     isscalar 0     enums  0      hasdefval 0
 *   readable   0     iscolumn 1     ranges 1      hashint   1
 *   settable   0
 *   hint: 1x:
 *
 * Ranges:  6;
 *
 * Its syntax is MacAddress (based on perltype OCTETSTR)
 * The net-snmp type is ASN_OCTET_STR. The C type decl is char (char)
 * This data type requires a length.  (Max 6)
 *
 *
 *
 * NOTE: NODE wmanIfBsSsMacAddress IS NOT ACCESSIBLE
 *
 *
 */
/*---------------------------------------------------------------------
 * WMAN-IF-MIB::wmanIfBsRegisteredSsEntry.wmanIfBsSsBasicCid
 * wmanIfBsSsBasicCid is subid 2 of wmanIfBsRegisteredSsEntry.
 * Its status is Current, and its access level is ReadOnly.
 * OID: .1.3.6.1.2.1.10.184.1.1.2.1.1.2
 * Description:
The value of this object indicates the SS's basic CID
             that was sent in the RNG-RSP message.
 *
 * Attributes:
 *   accessible 1     isscalar 0     enums  0      hasdefval 0
 *   readable   1     iscolumn 1     ranges 1      hashint   0
 *   settable   0
 *
 * Ranges:  0 - 65535;
 *
 * Its syntax is WmanIfCidType (based on perltype INTEGER)
 * The net-snmp type is ASN_INTEGER. The C type decl is long (long)
 */
/*---------------------------------------------------------------------
 * WMAN-IF-MIB::wmanIfBsRegisteredSsEntry.wmanIfBsSsPrimaryCid
 * wmanIfBsSsPrimaryCid is subid 3 of wmanIfBsRegisteredSsEntry.
 * Its status is Current, and its access level is ReadOnly.
 * OID: .1.3.6.1.2.1.10.184.1.1.2.1.1.3
 * Description:
The value of this object indicates the primary CID of the
             SS received from the RNG-RSP message.
 *
 * Attributes:
 *   accessible 1     isscalar 0     enums  0      hasdefval 0
 *   readable   1     iscolumn 1     ranges 1      hashint   0
 *   settable   0
 *
 * Ranges:  0 - 65535;
 *
 * Its syntax is WmanIfCidType (based on perltype INTEGER)
 * The net-snmp type is ASN_INTEGER. The C type decl is long (long)
 */
/*---------------------------------------------------------------------
 * WMAN-IF-MIB::wmanIfBsRegisteredSsEntry.wmanIfBsSsSecondaryCid
 * wmanIfBsSsSecondaryCid is subid 4 of wmanIfBsRegisteredSsEntry.
 * Its status is Current, and its access level is ReadOnly.
 * OID: .1.3.6.1.2.1.10.184.1.1.2.1.1.4
 * Description:
The value of this object indicates the secondary
             management CID present in the REG-RSP message. The value
             should be null if the 2nd management channel is not
             available.
 *
 * Attributes:
 *   accessible 1     isscalar 0     enums  0      hasdefval 0
 *   readable   1     iscolumn 1     ranges 1      hashint   0
 *   settable   0
 *
 * Ranges:  0 - 65535;
 *
 * Its syntax is WmanIfCidType (based on perltype INTEGER)
 * The net-snmp type is ASN_INTEGER. The C type decl is long (long)
 */
/*---------------------------------------------------------------------
 * WMAN-IF-MIB::wmanIfBsRegisteredSsEntry.wmanIfBsSsManagementSupport
 * wmanIfBsSsManagementSupport is subid 5 of wmanIfBsRegisteredSsEntry.
 * Its status is Current, and its access level is ReadOnly.
 * OID: .1.3.6.1.2.1.10.184.1.1.2.1.1.5
 * Description:
This object indicates whether or not the SS is managed.
 *
 * Attributes:
 *   accessible 1     isscalar 0     enums  1      hasdefval 0
 *   readable   1     iscolumn 1     ranges 0      hashint   0
 *   settable   0
 *
 * Enum range: 2/8. Values:  unmanagedSs(0), managedSs(1)
 *
 * Its syntax is INTEGER (based on perltype INTEGER)
 * The net-snmp type is ASN_INTEGER. The C type decl is long (u_long)
 */
/*---------------------------------------------------------------------
 * WMAN-IF-MIB::wmanIfBsRegisteredSsEntry.wmanIfBsSsIpManagementMode
 * wmanIfBsSsIpManagementMode is subid 6 of wmanIfBsRegisteredSsEntry.
 * Its status is Current, and its access level is ReadOnly.
 * OID: .1.3.6.1.2.1.10.184.1.1.2.1.1.6
 * Description:
The IP management mode parameter dictates whether
             the provider intends to manage the SS on an ongoing
             basis via IP-based mechanisms.
 *
 * Attributes:
 *   accessible 1     isscalar 0     enums  1      hasdefval 0
 *   readable   1     iscolumn 1     ranges 0      hashint   0
 *   settable   0
 *
 * Enum range: 2/8. Values:  unmanaged(0), ipManaged(1)
 *
 * Its syntax is INTEGER (based on perltype INTEGER)
 * The net-snmp type is ASN_INTEGER. The C type decl is long (u_long)
 */
/*---------------------------------------------------------------------
 * WMAN-IF-MIB::wmanIfBsRegisteredSsEntry.wmanIfBsSs2ndMgmtArqEnable
 * wmanIfBsSs2ndMgmtArqEnable is subid 7 of wmanIfBsRegisteredSsEntry.
 * Its status is Current, and its access level is ReadOnly.
 * OID: .1.3.6.1.2.1.10.184.1.1.2.1.1.7
 * Description:
True(1) ARQ enabling is requested for the 2nd
             management channel.
 *
 * Attributes:
 *   accessible 1     isscalar 0     enums  1      hasdefval 0
 *   readable   1     iscolumn 1     ranges 0      hashint   0
 *   settable   0
 *
 * Enum range: 2/8. Values:  true(1), false(2)
 *
 * Its syntax is TruthValue (based on perltype INTEGER)
 * The net-snmp type is ASN_INTEGER. The C type decl is long (u_long)
 */
/*---------------------------------------------------------------------
 * WMAN-IF-MIB::wmanIfBsRegisteredSsEntry.wmanIfBsSs2ndMgmtArqWindowSize
 * wmanIfBsSs2ndMgmtArqWindowSize is subid 8 of wmanIfBsRegisteredSsEntry.
 * Its status is Current, and its access level is ReadOnly.
 * OID: .1.3.6.1.2.1.10.184.1.1.2.1.1.8
 * Description:
Indicates the maximum number of unacknowledged 
             fragments at any time for 2nd management channel.
 *
 * Attributes:
 *   accessible 1     isscalar 0     enums  0      hasdefval 0
 *   readable   1     iscolumn 1     ranges 1      hashint   0
 *   settable   0
 *
 * Ranges:  1 - 1024;
 *
 * Its syntax is INTEGER (based on perltype INTEGER)
 * The net-snmp type is ASN_INTEGER. The C type decl is long (long)
 */
/*---------------------------------------------------------------------
 * WMAN-IF-MIB::wmanIfBsRegisteredSsEntry.wmanIfBsSs2ndMgmtArqDnLinkTxDelay
 * wmanIfBsSs2ndMgmtArqDnLinkTxDelay is subid 9 of wmanIfBsRegisteredSsEntry.
 * Its status is Current, and its access level is ReadOnly.
 * OID: .1.3.6.1.2.1.10.184.1.1.2.1.1.9
 * Description:
The object defines the ARQ transmitter delay for
             downlink transmission.
 *
 * Attributes:
 *   accessible 1     isscalar 0     enums  0      hasdefval 0
 *   readable   1     iscolumn 1     ranges 1      hashint   0
 *   settable   0
 *
 * Ranges:  0 - 65535;
 *
 * Its syntax is INTEGER (based on perltype INTEGER)
 * The net-snmp type is ASN_INTEGER. The C type decl is long (long)
 */
/*---------------------------------------------------------------------
 * WMAN-IF-MIB::wmanIfBsRegisteredSsEntry.wmanIfBsSs2ndMgmtArqUpLinkTxDelay
 * wmanIfBsSs2ndMgmtArqUpLinkTxDelay is subid 10 of wmanIfBsRegisteredSsEntry.
 * Its status is Current, and its access level is ReadOnly.
 * OID: .1.3.6.1.2.1.10.184.1.1.2.1.1.10
 * Description:
The object defines the ARQ transmitter delay for
             uplink transmission.
 *
 * Attributes:
 *   accessible 1     isscalar 0     enums  0      hasdefval 0
 *   readable   1     iscolumn 1     ranges 1      hashint   0
 *   settable   0
 *
 * Ranges:  0 - 65535;
 *
 * Its syntax is INTEGER (based on perltype INTEGER)
 * The net-snmp type is ASN_INTEGER. The C type decl is long (long)
 */
/*---------------------------------------------------------------------
 * WMAN-IF-MIB::wmanIfBsRegisteredSsEntry.wmanIfBsSs2ndMgmtArqDnLinkRxDelay
 * wmanIfBsSs2ndMgmtArqDnLinkRxDelay is subid 11 of wmanIfBsRegisteredSsEntry.
 * Its status is Current, and its access level is ReadOnly.
 * OID: .1.3.6.1.2.1.10.184.1.1.2.1.1.11
 * Description:
The object defines the ARQ receiver delay for
             downlink transmission.
 *
 * Attributes:
 *   accessible 1     isscalar 0     enums  0      hasdefval 0
 *   readable   1     iscolumn 1     ranges 1      hashint   0
 *   settable   0
 *
 * Ranges:  0 - 65535;
 *
 * Its syntax is INTEGER (based on perltype INTEGER)
 * The net-snmp type is ASN_INTEGER. The C type decl is long (long)
 */
/*---------------------------------------------------------------------
 * WMAN-IF-MIB::wmanIfBsRegisteredSsEntry.wmanIfBsSs2ndMgmtArqUpLinkRxDelay
 * wmanIfBsSs2ndMgmtArqUpLinkRxDelay is subid 12 of wmanIfBsRegisteredSsEntry.
 * Its status is Current, and its access level is ReadOnly.
 * OID: .1.3.6.1.2.1.10.184.1.1.2.1.1.12
 * Description:
The object defines the ARQ receiver delay for
             uplink transmission.
 *
 * Attributes:
 *   accessible 1     isscalar 0     enums  0      hasdefval 0
 *   readable   1     iscolumn 1     ranges 1      hashint   0
 *   settable   0
 *
 * Ranges:  0 - 65535;
 *
 * Its syntax is INTEGER (based on perltype INTEGER)
 * The net-snmp type is ASN_INTEGER. The C type decl is long (long)
 */
/*---------------------------------------------------------------------
 * WMAN-IF-MIB::wmanIfBsRegisteredSsEntry.wmanIfBsSs2ndMgmtArqBlockLifetime
 * wmanIfBsSs2ndMgmtArqBlockLifetime is subid 13 of wmanIfBsRegisteredSsEntry.
 * Its status is Current, and its access level is ReadOnly.
 * OID: .1.3.6.1.2.1.10.184.1.1.2.1.1.13
 * Description:
The maximum time interval an ARQ fragment will be
             managed by the transmitter ARQ machine, once
             initial transmission of the fragment has occured.
             If transmission or retransmission of the fragment
             is not acknowledged by the receiver before the 
             time limit is reached, the fragment is discarded.
             A value of 0 means Infinite.
 *
 * Attributes:
 *   accessible 1     isscalar 0     enums  0      hasdefval 1
 *   readable   1     iscolumn 1     ranges 1      hashint   0
 *   settable   0
 *   defval: 0
 *
 * Ranges:  0 - 65535;
 *
 * Its syntax is INTEGER (based on perltype INTEGER)
 * The net-snmp type is ASN_INTEGER. The C type decl is long (long)
 */
/*---------------------------------------------------------------------
 * WMAN-IF-MIB::wmanIfBsRegisteredSsEntry.wmanIfBsSs2ndMgmtArqSyncLossTimeout
 * wmanIfBsSs2ndMgmtArqSyncLossTimeout is subid 14 of wmanIfBsRegisteredSsEntry.
 * Its status is Current, and its access level is ReadOnly.
 * OID: .1.3.6.1.2.1.10.184.1.1.2.1.1.14
 * Description:
The maximum interval before declaring a loss
             of synchronization of the sender and receiver
             state machines. A value of 0 means Infinite.
 *
 * Attributes:
 *   accessible 1     isscalar 0     enums  0      hasdefval 1
 *   readable   1     iscolumn 1     ranges 1      hashint   0
 *   settable   0
 *   defval: 0
 *
 * Ranges:  0 - 65535;
 *
 * Its syntax is INTEGER (based on perltype INTEGER)
 * The net-snmp type is ASN_INTEGER. The C type decl is long (long)
 */
/*---------------------------------------------------------------------
 * WMAN-IF-MIB::wmanIfBsRegisteredSsEntry.wmanIfBsSs2ndMgmtArqDeliverInOrder
 * wmanIfBsSs2ndMgmtArqDeliverInOrder is subid 15 of wmanIfBsRegisteredSsEntry.
 * Its status is Current, and its access level is ReadOnly.
 * OID: .1.3.6.1.2.1.10.184.1.1.2.1.1.15
 * Description:
Indicates whether or not data is to be delivered
             by the receiving MAC to its client application
             in the order in which data was handed off to the
             originating MAC.
 *
 * Attributes:
 *   accessible 1     isscalar 0     enums  1      hasdefval 0
 *   readable   1     iscolumn 1     ranges 0      hashint   0
 *   settable   0
 *
 * Enum range: 2/8. Values:  true(1), false(2)
 *
 * Its syntax is TruthValue (based on perltype INTEGER)
 * The net-snmp type is ASN_INTEGER. The C type decl is long (u_long)
 */
/*---------------------------------------------------------------------
 * WMAN-IF-MIB::wmanIfBsRegisteredSsEntry.wmanIfBsSs2ndMgmtArqRxPurgeTimeout
 * wmanIfBsSs2ndMgmtArqRxPurgeTimeout is subid 16 of wmanIfBsRegisteredSsEntry.
 * Its status is Current, and its access level is ReadOnly.
 * OID: .1.3.6.1.2.1.10.184.1.1.2.1.1.16
 * Description:
Indicates the time interval the ARQ window is advanced
             after a fragment is received. A value of 0 means Infinite.
 *
 * Attributes:
 *   accessible 1     isscalar 0     enums  0      hasdefval 1
 *   readable   1     iscolumn 1     ranges 1      hashint   0
 *   settable   0
 *   defval: 0
 *
 * Ranges:  0 - 65535;
 *
 * Its syntax is INTEGER (based on perltype INTEGER)
 * The net-snmp type is ASN_INTEGER. The C type decl is long (long)
 */
/*---------------------------------------------------------------------
 * WMAN-IF-MIB::wmanIfBsRegisteredSsEntry.wmanIfBsSs2ndMgmtArqBlockSize
 * wmanIfBsSs2ndMgmtArqBlockSize is subid 17 of wmanIfBsRegisteredSsEntry.
 * Its status is Current, and its access level is ReadOnly.
 * OID: .1.3.6.1.2.1.10.184.1.1.2.1.1.17
 * Description:
This parameter specifies the size of a ARQ block. This
             parameter shall be established by negotiation during the
             connection setup. The requester includes its desired
             setting in the REQ message. The receiver of the REQ
             message shall take the smaller of the value it prefers and
             value in the REQ message. The minimum value is included in
             the RSP message.
 *
 * Attributes:
 *   accessible 1     isscalar 0     enums  0      hasdefval 0
 *   readable   1     iscolumn 1     ranges 1      hashint   0
 *   settable   0
 *
 * Ranges:  1 - 2040;
 *
 * Its syntax is INTEGER (based on perltype INTEGER)
 * The net-snmp type is ASN_INTEGER. The C type decl is long (long)
 */
/*---------------------------------------------------------------------
 * WMAN-IF-MIB::wmanIfBsRegisteredSsEntry.wmanIfBsSsVendorIdEncoding
 * wmanIfBsSsVendorIdEncoding is subid 18 of wmanIfBsRegisteredSsEntry.
 * Its status is Current, and its access level is ReadOnly.
 * OID: .1.3.6.1.2.1.10.184.1.1.2.1.1.18
 * Description:
The value field contains the vendor identification
             specified by the 3 byte vendor-specific organizationally
             unique identifier of the SS or BS MAC address.A vendor ID
             used in a REG-REQ shall be the Vendor ID of the SS sending
             the request. A vendor ID used in a REG-RSP shall be the
             Vendor ID of the BS sending the response.
 *
 * Attributes:
 *   accessible 1     isscalar 0     enums  0      hasdefval 0
 *   readable   1     iscolumn 1     ranges 1      hashint   0
 *   settable   0
 *
 * Ranges:  3;
 *
 * Its syntax is OCTETSTR (based on perltype OCTETSTR)
 * The net-snmp type is ASN_OCTET_STR. The C type decl is char (char)
 * This data type requires a length.  (Max 3)
 */
/*---------------------------------------------------------------------
 * WMAN-IF-MIB::wmanIfBsRegisteredSsEntry.wmanIfBsSsAasBroadcastPermission
 * wmanIfBsSsAasBroadcastPermission is subid 19 of wmanIfBsRegisteredSsEntry.
 * Its status is Current, and its access level is ReadOnly.
 * OID: .1.3.6.1.2.1.10.184.1.1.2.1.1.19
 * Description:
This parameter specifies if SS can issue contention-based
             bandwidth request or not.
 *
 * Attributes:
 *   accessible 1     isscalar 0     enums  1      hasdefval 0
 *   readable   1     iscolumn 1     ranges 0      hashint   0
 *   settable   0
 *
 * Enum range: 2/8. Values:  contBasedBwReqPermitted(0), contBasedBwReqNotPermitted(1)
 *
 * Its syntax is INTEGER (based on perltype INTEGER)
 * The net-snmp type is ASN_INTEGER. The C type decl is long (u_long)
 */
/*---------------------------------------------------------------------
 * WMAN-IF-MIB::wmanIfBsRegisteredSsEntry.wmanIfBsSsMaxTxPowerBpsk
 * wmanIfBsSsMaxTxPowerBpsk is subid 20 of wmanIfBsRegisteredSsEntry.
 * Its status is Current, and its access level is ReadOnly.
 * OID: .1.3.6.1.2.1.10.184.1.1.2.1.1.20
 * Description:
The maximum available power for BPSK. The maximum power
             parameters are reported in dBm and quantized in 0.5 dBm
             steps ranging from -64 dBm (encoded 0x00) to 63.5 dBm
             (encoded 0xFF). Values outside this range shall be assigned
             the closest extreme. This parameter is only applicable to
             systems supporting the SCa, OFDM or OFDMA PHY.
 *
 * Attributes:
 *   accessible 1     isscalar 0     enums  0      hasdefval 0
 *   readable   1     iscolumn 1     ranges 1      hashint   0
 *   settable   0
 *
 * Ranges:  0 - 255;
 *
 * Its syntax is WmanIfMaxTxPowerType (based on perltype INTEGER)
 * The net-snmp type is ASN_INTEGER. The C type decl is long (long)
 */
/*---------------------------------------------------------------------
 * WMAN-IF-MIB::wmanIfBsRegisteredSsEntry.wmanIfBsSsMaxTxPowerQpsk
 * wmanIfBsSsMaxTxPowerQpsk is subid 21 of wmanIfBsRegisteredSsEntry.
 * Its status is Current, and its access level is ReadOnly.
 * OID: .1.3.6.1.2.1.10.184.1.1.2.1.1.21
 * Description:
The maximum available power for QPSK. The maximum power
             parameters are reported in dBm and quantized in 0.5 dBm
             steps ranging from -64 dBm (encoded 0x00) to 63.5 dBm
             (encoded 0xFF). Values outside this range shall be assigned
             to closest extreme. This parameter is only applicable to
             systems supporting the SCa, OFDM or OFDMA PHY.
 *
 * Attributes:
 *   accessible 1     isscalar 0     enums  0      hasdefval 0
 *   readable   1     iscolumn 1     ranges 1      hashint   0
 *   settable   0
 *
 * Ranges:  0 - 255;
 *
 * Its syntax is WmanIfMaxTxPowerType (based on perltype INTEGER)
 * The net-snmp type is ASN_INTEGER. The C type decl is long (long)
 */
/*---------------------------------------------------------------------
 * WMAN-IF-MIB::wmanIfBsRegisteredSsEntry.wmanIfBsSsMaxTxPower16Qam
 * wmanIfBsSsMaxTxPower16Qam is subid 22 of wmanIfBsRegisteredSsEntry.
 * Its status is Current, and its access level is ReadOnly.
 * OID: .1.3.6.1.2.1.10.184.1.1.2.1.1.22
 * Description:
The maximum available power for 16-QAM constellations.
             The maximum power parameters are reported in dBm and
             quantized in 0.5 dBm steps ranging from -64 dBm (encoded
             0x00) to 63.5 dBm (encoded 0xFF). Values outside this
             range shall be assigned the closest extreme. This parameter
             is only applicable to systems supporting the SCa, OFDM or
             OFDMA PHY.
 *
 * Attributes:
 *   accessible 1     isscalar 0     enums  0      hasdefval 0
 *   readable   1     iscolumn 1     ranges 1      hashint   0
 *   settable   0
 *
 * Ranges:  0 - 255;
 *
 * Its syntax is WmanIfMaxTxPowerType (based on perltype INTEGER)
 * The net-snmp type is ASN_INTEGER. The C type decl is long (long)
 */
/*---------------------------------------------------------------------
 * WMAN-IF-MIB::wmanIfBsRegisteredSsEntry.wmanIfBsSsMaxTxPower64Qam
 * wmanIfBsSsMaxTxPower64Qam is subid 23 of wmanIfBsRegisteredSsEntry.
 * Its status is Current, and its access level is ReadOnly.
 * OID: .1.3.6.1.2.1.10.184.1.1.2.1.1.23
 * Description:
The maximum available power for 64-QAM constellations.
             The maximum power parameters are reported in dBm and
             quantized in 0.5 dBm steps ranging from -64 dBm (encoded
             0x00) to 63.5 dBm (encoded 0xFF). Values outside this
             range shall be assigned the closest extreme. SSs that do
             not support QAM64 shall report the value of 0x00. This
             parameter is only applicable to systems supporting the SCa,
             OFDM or OFDMA PHY.
 *
 * Attributes:
 *   accessible 1     isscalar 0     enums  0      hasdefval 0
 *   readable   1     iscolumn 1     ranges 1      hashint   0
 *   settable   0
 *
 * Ranges:  0 - 255;
 *
 * Its syntax is WmanIfMaxTxPowerType (based on perltype INTEGER)
 * The net-snmp type is ASN_INTEGER. The C type decl is long (long)
 */
/*---------------------------------------------------------------------
 * WMAN-IF-MIB::wmanIfBsRegisteredSsEntry.wmanIfBsSsMacVersion
 * wmanIfBsSsMacVersion is subid 24 of wmanIfBsRegisteredSsEntry.
 * Its status is Current, and its access level is ReadOnly.
 * OID: .1.3.6.1.2.1.10.184.1.1.2.1.1.24
 * Description:
This parameter specifies the version of 802.16 to which the
             message originator conforms.
 *
 * Attributes:
 *   accessible 1     isscalar 0     enums  1      hasdefval 0
 *   readable   1     iscolumn 1     ranges 0      hashint   0
 *   settable   0
 *
 * Enum range: 3/8. Values:  ieee802Dot16Of2001(1), ieee802Dot16cOf2002(2), ieee802Dot16aOf2003(3), ieee802Dot16Of2004(4)
 *
 * Its syntax is WmanIfMacVersion (based on perltype INTEGER)
 * The net-snmp type is ASN_INTEGER. The C type decl is long (u_long)
 */


