/*
 * Note: this file originally auto-generated by mib2c using
 *  : generic-table-enums.m2c 12526 2005-07-15 22:41:16Z rstory $
 *
 * $Id:$
 */
#ifndef WMANIFBSPROVISIONEDSFTABLE_ENUMS_H
#define WMANIFBSPROVISIONEDSFTABLE_ENUMS_H

#ifdef __cplusplus
extern          "C" {
#endif

    /*
     * NOTES on enums
     * ==============
     *
     * Value Mapping
     * -------------
     * If the values for your data type don't exactly match the
     * possible values defined by the mib, you should map them
     * below. For example, a boolean flag (1/0) is usually represented
     * as a TruthValue in a MIB, which maps to the values (1/2).
     *
     */
/*************************************************************************
 *************************************************************************
 *
 * enum definitions for table wmanIfBsProvisionedSfTable
 *
 *************************************************************************
 *************************************************************************/

/*************************************************************
 * constants for enums for the MIB node
 * wmanIfBsSfDirection (INTEGER / ASN_INTEGER)
 *
 * since a Textual Convention may be referenced more than once in a
 * MIB, protect againt redefinitions of the enum values.
 */
#ifndef WMANIFBSSFDIRECTION_ENUMS
#define WMANIFBSSFDIRECTION_ENUMS

#define WMANIFBSSFDIRECTION_DOWNSTREAM  1
#define WMANIFBSSFDIRECTION_UPSTREAM  2

#endif                          /* WMANIFBSSFDIRECTION_ENUMS */


/*************************************************************
 * constants for enums for the MIB node
 * wmanIfBsSfState (WmanIfSfState / ASN_INTEGER)
 *
 * since a Textual Convention may be referenced more than once in a
 * MIB, protect againt redefinitions of the enum values.
 */
#ifndef WMANIFSFSTATE_ENUMS
#define WMANIFSFSTATE_ENUMS

#define WMANIFSFSTATE_AUTHORIZED  1
#define WMANIFSFSTATE_ADMITTED  2
#define WMANIFSFSTATE_ACTIVE  3

#endif                          /* WMANIFSFSTATE_ENUMS */


/*************************************************************
 * constants for enums for the MIB node
 * wmanIfBsSfCsSpecification (WmanIfCsSpecification / ASN_INTEGER)
 *
 * since a Textual Convention may be referenced more than once in a
 * MIB, protect againt redefinitions of the enum values.
 */
#ifndef WMANIFCSSPECIFICATION_ENUMS
#define WMANIFCSSPECIFICATION_ENUMS

#define WMANIFCSSPECIFICATION_NOCS  0
#define WMANIFCSSPECIFICATION_PACKETIPV4  1
#define WMANIFCSSPECIFICATION_PACKETIPV6  2
#define WMANIFCSSPECIFICATION_PACKET802DOT3ETHERNET  3
#define WMANIFCSSPECIFICATION_PACKET802DOT1QVLAN  4
#define WMANIFCSSPECIFICATION_PACKETIPV4OVER802DOT3  5
#define WMANIFCSSPECIFICATION_PACKETIPV6OVER802DOT3  6
#define WMANIFCSSPECIFICATION_PACKETIPV4OVER802DOT1Q  7
#define WMANIFCSSPECIFICATION_PACKETIPV6OVER802DOT1Q  8
#define WMANIFCSSPECIFICATION_ATM  9

#endif                          /* WMANIFCSSPECIFICATION_ENUMS */


/*************************************************************
 * constants for enums for the MIB node
 * wmanIfBsProvisionedSfRowStatus (RowStatus / ASN_INTEGER)
 *
 * since a Textual Convention may be referenced more than once in a
 * MIB, protect againt redefinitions of the enum values.
 */
#ifndef ROWSTATUS_ENUMS
#define ROWSTATUS_ENUMS

#define ROWSTATUS_ACTIVE  1
#define ROWSTATUS_NOTINSERVICE  2
#define ROWSTATUS_NOTREADY  3
#define ROWSTATUS_CREATEANDGO  4
#define ROWSTATUS_CREATEANDWAIT  5
#define ROWSTATUS_DESTROY  6

#endif                          /* ROWSTATUS_ENUMS */




#ifdef __cplusplus
}
#endif
#endif                          /* WMANIFBSPROVISIONEDSFTABLE_ENUMS_H */
